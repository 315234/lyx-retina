#!/bin/sh
#
# file fdfix.sh
# This file is part of LyX, the document processor.
# Licence details can be found in the file COPYING.
#
# author Angus Leeming
#
# Full author contact details are available in file CREDITS
#
# This shell script takes the dialog created with fdesign and generates the
# .C and .h files used by LyX from it.
# Note that the REAL magic is to be found in the sed scripts fdfixc.sed and
# fdfixh.sed used by this shell script.

INTRO_MESSAGE ()
{
# Note that we can't create a variable containing this and then
# echo it across because some machines require -e to recognize \n et al.
# Other machines, of course output -e, it not being an option they
# recognise ;-)

# Set ${OUTPUT_FILE} to ${HOUT} or ${COUT} as appropriate
cat - > ${OUTPUT_FILE} <<EOF
// File generated by fdesign from ${FDFILE}
// and modified by fdfix.sh for use by LyX.

// WARNING! All changes made to this file will be lost!

// This file is part of LyX, the document processor.
// Licence details can be found in the file COPYING.

EOF
}

#===============
# Initial checks
if [ ! -f $1 ]; then
    echo "Input file does not exist. Cannot continue"
    exit 1
fi

DIRNAME=`dirname $1`
BASENAME=`basename $1 .fd`

if [ $1 = ${BASENAME} ]; then
    echo "Input file is not a .fd file. Cannot continue"
    exit 1
fi

#===================================
# Create the initial .c and .h files
FDESIGN=fdesign
FDFILE=${BASENAME}.fd
if (cd ${DIRNAME} && ${FDESIGN} -convert ${FDFILE}); then : ; else
    echo "\"${FDESIGN} -convert ${FDFILE}\" failed. Please investigate."
    exit 1
fi

#==================================
# Modify the .h file for use by LyX
HIN=${DIRNAME}/${BASENAME}.h
HPATCH=${DIRNAME}/${BASENAME}.h.patch
HOUT=${BASENAME}.hpp

# First clean up the "extern void func(arg);" declarations and
# put the sorted, unique list in file ${EXTERN_FUNCS}
# The contents of this file are used by ${FDFIXH} to replace the mess
# output by fdesign
EXTERN_FUNCS=extern.tmp
sed -n 's/extern void \(.*\)/void \1/p' ${HIN} > ${EXTERN_FUNCS}

if [ -s ${EXTERN_FUNCS} ]; then
	sort -u ${EXTERN_FUNCS} > tmp
	echo "extern \"C\" {" > ${EXTERN_FUNCS}
	cat tmp >> ${EXTERN_FUNCS}
	echo "}" >> ${EXTERN_FUNCS}
	rm -f tmp
fi

FDFIXH=${DIRNAME}/fdfixh.sed

OUTPUT_FILE=${HOUT}; INTRO_MESSAGE

sed -f ${FDFIXH} < ${HIN} >> ${HOUT}
rm -f ${EXTERN_FUNCS}

# Patch the .h file if a patch exists
if [ -f "${HPATCH}" ] ; then
    echo "Patching ${HOUT} with ${HPATCH}"
    patch -s ${HOUT} < ${HPATCH}
fi

# Clean up, to leave the finished .h file. We can be a little tricky here
# testing to see if the finished file exists already and if it does
# testing whether there are any differences.
# If there are no differences, then don't overwrite to prevent unnecessary
# compilation in the xforms directory.
rm -f ${HIN}
MOVE_H_FILE=1
if [ -r ${BASENAME}.h ]; then
    if cmp -s ${HOUT} ${BASENAME}.h; then
	MOVE_H_FILE=0
    fi
fi
if [ ${MOVE_H_FILE} -eq 1 ]; then
    mv ${HOUT} ${BASENAME}.h
else
    rm -f ${HOUT}
fi

#==================================
# Create the .C file for use by LyX
CIN=${DIRNAME}/${BASENAME}.c
CPATCH=${DIRNAME}/${BASENAME}.C.patch
COUT=${BASENAME}.cpp
FINAL_COUT=${BASENAME}.C

FDFIXC=${DIRNAME}/fdfixc.sed

OUTPUT_FILE=${COUT}; INTRO_MESSAGE

echo "#include <config.h>" >> ${COUT}
echo "#include \"forms_gettext.h\"" >> ${COUT}
echo "#include \"gettext.h\"" >> ${COUT}

if grep bmtable ${CIN} > /dev/null; then
    echo "#include \"bmtable.h\"" >> ${COUT}
fi

sed -f ${FDFIXC} < ${CIN} >> ${COUT}

# Patch the .C file if a patch exists
if [ -f "${CPATCH}" ] ; then
    echo "Patching ${COUT} with ${CPATCH}"
    patch -s ${COUT} < ${CPATCH}
fi

# Clean up, to leave the finished .C file
rm -f ${CIN}
mv ${COUT} ${FINAL_COUT}

#========================================
