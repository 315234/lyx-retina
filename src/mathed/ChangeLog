2001-08-01  André Pönitz  <poenitz@gmx.net>

	* math_cursor.C:
		formulamacro.C: fix memory leaks

	* math_matrixinset.C: fix mis-alignment of eqnarray columns

	*	formula*.[Ch]: seperation of the "pimpl" MathInset * into
	MathMatrixInset * and MathMacroTemplate * to save a few casts

	* all over the place: everything is an inset now

	* math_nestinset.[Ch]: new abstract base class for insets containing
	other insets.

	* math_diminset.[Ch]: new abstract base class for insets that need
	the width_/ascent_/descent_ cache

2001-07-25  André Pönitz  <poenitz@gmx.net>
	
	* formulabase.C: re-enable 'space enlargement' feature

	* math_scriptinset.C:
		math_bigopinset.C: rework of script insets

2001-07-22  André Pönitz  <poenitz@gmx.net>

	* math_cursor.C: fix "pullArg" behaviour

	* math_cursor.C: keep empty super/subscript a bit longer

	* math_cursor.C: do not move into insets that don't have inner cells yet

	* formulabase.C: fix memory leak

	* math_cursor.C: ^ now copies selection into new srriptinset
	
	* xarray.C: less crude MathXArray::x2pos for preciser cursor positioning
	  using the mouse

	* math_updowninset.C: fix drawing glitches

	* math_cursor.C: paste to correct position

2001-07-22  Jean-Marc Lasgouttes  <lasgouttes@lyx.org>

	* formula.C (insetAllowed): allow insertion of label

2001-07-20 André Pönitz  <poenitz@gmx.net>

	* math_macrotable.C: support for \land and \vee

2001-07-16 André Pönitz  <poenitz@gmx.net>

	* math_grid.[Ch] -> math_gridinset.[Ch]
	  math_root.[Ch] -> math_rootinset.[Ch]: more consistent names

	* formulabase.C: fix 'buffer set to (Changed) when moving in math',
	  fix 'mathed reports wrong width', cosmetics

2001-07-16  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* math_cursor.C (operator==): moved ouf of struct
	(operator<): ditto
	(normalAnchor): reversed one test (but shouldn't it really be >= ?)

2001-07-16 André Pönitz  <poenitz@gmx.net>

	* math_cursor.[hC]: multicell selection (multicell pasete still defunct)

	* several files: supporting changes

2001-07-13  Angus Leeming  <a.leeming@ic.ac.uk>

	Consistent use of Lsstream.h:
	* formula.C: removed using std::ostringstream directive.

	* math_cursor.C: std::istringstream -> istringstream.

2001-07-13  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* math_decorationinset.h: add std:: qualifier

2001-07-12 André Pönitz  <poenitz@gmx.net>

	* math_updowninset.[hC]: new base class for script and bigop insets
		*.[hC]: subsequent changes to all Metric() functions
	
	* math_parser.C: small changes (\sqrt0 is read properly now)
	
2001-07-10 André Pönitz  <poenitz@gmx.net>
	
	* math_accentinset.[hC]: rewrite

	* math_parser.C:
		math_cursor.C: subsequent changes

	* math_grid.C: <Delete> in the first cell of a completely empty row
	  deletes that row, <C-Return> places the cursor in the first of the
	  new empty cells.

	* math_grid.C: try to split cell nicely when mutating from single-cell
	  to multi-cell environment

2001-07-09  Dekel Tsur  <dekelts@tau.ac.il>

	* math_matrixinset.C (mutate): Use only the first label when
	mutating eqnarray to display formula.

2001-07-09  Juergen Vigna  <jug@sad.it>

	* formulabase.C (mathDispatchCreation): don't do anything with the
	inset if it cannot be inserted!

2001-07-09  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* formulabase.C (mathDispatchInsertMath): remove bogus return
	statement. 

2001-07-09 André Pönitz  <poenitz@gmx.net>

	* math_*inset.C: Change order of arguments in MathInset constructor 

	* math_cursor.C: Remove broken "increase space" feature for a while

2001-07-07  Dekel Tsur  <dekelts@tau.ac.il>

	* formulabase.C (mathDispatchInsertMath): Create an inline formula.

2001-07-04 André Pönitz  <poenitz@gmx.net>

	* math_parser.C: fix reading of "unusual" alpha chars

	* xarray.[hC]: fix debug output of xarray

2001-07-03 André Pönitz  <poenitz@gmx.net>

	* math_parser.C: fix bug where equations did not get their labels

	* formulabase.C: new feature: changing font on selection

	* several files: subsequent changes

	* array.C: fix bug when insets have not been cloned properly
	This should fix quite a few "random" crashes...

2001-06-29  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* formulabase.C (localDispatch): use .c_str() on istringstream
	constructor argument.

2001-06-27  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* math_grid.C (addCol): add second argument to cellinfo_.insert.
	Cleanup a bit the code.
	(appendRow): do not call push_back without argument.

	* *.C: remove all "using namespace std" directives (not
	good!!) and replaced it with relevant "using" directives.
	
	* math_macrotemplate.C (Clone): change return type to MathInset*

2001-06-27  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* math_sizeinset.C: include support/LOstream.h

	* math_scriptinset.C (Metrics): std:: qualify max

	* math_root.C (Metrics): std:: qualify max
	(Write): std:: qualify ostream
	(WriteNormal): ditto

	* math_matrixinset.C (getLabelList): std:: qualify vector
	include vector
	(Metrics): std:: qualify max
	(header_write): std:: qualify ostream
	(footer_write): ditto

	* math_macrotemplate.C (Write): std:: qualify ostream

	* math_bigopinset.C (Metrics): std:: qualify max, and include
	functional 

	* math_matrixinset.h: include vector and std:: qualify it.

	* array.C (GetInset): get a pointer to the first element of bf_
	not an iterator.

2001-06-25  The LyX Project  <Asger>

	* math_scriptinset.C: Fix for entering with cursor up/down.

	* math_fracinset.C: We can enter fractions with cursor up and
	down.

	* math_cursor.C (Right): Fixes for cursor movement.

	* formula.C (draw): New background color for math.
	
	* math_cursor.C: Fixes for toggling labels on/off in math.
	Fixes for infinity and other symbols that didn't appear in
	LaTeX.

2001-06-24  The LyX Project  <Asger>

	* math_inset.C: Cursor movement is better in square roots, among
	other things.

	* math_cursor.C (Interpret): Improved subscript bullshit. Improved
	cursor up/down movement. What not.

2001-06-24  The LyX Project  <Asger>

	* math_matrixinset.C: Hidden labels are hidden, unless a small
	dragon jumps out of the screen, and pronounce them to the entire
	world.

2001-06-24  The LyX Project  <Easter egg>

	* math_cursor.C: Cursor improvements after a few dead-ends
	in the evolution of cursor movement were tested and scrapped.
	
2001-06-24  The LyX Project  <Asger>

	* math_cursor.C: Renamed stack to path.

2001-06-24  The LyX Project  <André>

	* *.[Ch]:
	  Makefile.am: The Big Patch
	  (rewrite of MathArray, MathCursor, MathMatrixInset, MathBigopInset;
     new MathScriptInset for up/down stuff;
	   delete MathIter/MatXIter, MathParInset, MathRowSt
     Changes to the inset inheritance tree, reunification of abstract math
     inset base classes;
     label/numbering handling back to life;
     major changes to the parser(s);
     new base class FormulaBase for the two math LyXInsets;
	   general cleanup and cosmetic changes)

2001-06-19  Angus Leeming  <a.leeming@ic.ac.uk>

	* math_macro.C:
	* math_root.C: removed // -*- C++ -*- as first line.

2001-05-31  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* array.C: bring memmove into main namespace if necessary

2001-05-31  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* math_parser.C (yylex): use contains instead of strchr
	(parse_align): remove last arg, change to take string const & as
	first arg.
	(mathed_parse): use string for ar2 and ar, adjust

	* math_decorationinset.C (Write): use compare instead of strcmp

	* formula.C (LocalDispatch): change arg2 to string, adjust for this
	(LocalDispatch): add std::
	(LocalDispatch): use contains instead of strchr

	* array.C (move): add std::

2001-05-02  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* matriz.C: add using directives when needed for C functions
	declared in std:: namespace.

	* math_macrotemplate.h: do not use explicitely std::string, but
	string. 

	* math_macroarg.C: avoid bringing the whole std:: namespace in
	global-land. When you do that, there is an ambiguity between
	lyxstring and std::string (which may be defined at the same time).

	* formula.C (HandleExtern): add .c_str() to .str() (useful when
	using lyxtring)

2001-04-27 André Pönitz  <poenitz@gmx.net>

	* math_parser.C: fix \frac handling bug introduced on 04-24
	* math_xiter.C: hotfix for merging "shared" insets
	* formula.C: fixing display after using math-insert

2001-04-25 André Pönitz  <poenitz@gmx.net>

	* math_*.[Ch]: WriteNormal
	* formula.C: Support for new "math extern" command
	* math_parser.C: fix \frac handling bug introduced on 04-24
	* math_xiter.C: hotfix for merging "shared" insets

2001-04-25  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* math_macrotable.C: include <iostream>

2001-04-24 André Pönitz  <poenitz@gmx.net>

	* math_macro.[Ch]:
	* math_macrotable.[Ch]:
	* math_macroarg.[Ch]: restructuring of macro handling
	* several files: 

2001-04-25  Angus Leeming  <a.leeming@ic.ac.uk>

	* array.h (operator<<):
	* math_macro.h (dump, operator<<): added std:: qualifier to ostream.

	* math_macrotable.C: added using std::make_pair directive.
	(dump): added using std::cerr directive here as I guess that this is
	temporary.

2001-04-20  Allan Rae  <rae@lyx.org>

	* formula.C (LocalDispatch): fixed another #warning.  Guess who.

2001-04-17  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* math_macrotemplate.h: inherit privately from noncopyable

	* math_macro.C (Metrics): reindent, use unsigned int as loop var
	(setArgumentIdx): change test to avoid unsigned warning

	* formula.C (LocalDispatch): use LFUN_MESSAGE

2001-04-16  Allan Rae  <rae@lyx.org>

	* formula.C (Latex, getLabelList, LocalDispatch): 
	* math_parser.C (mathed_parse): 
	* math_parinset.C (Write): #warning triggers an error on Sun CC 6.0 as
	an unrecognised preprocessor directive.  So ensure they're wrapped.

2001-04-04  Lars Gullik Bjønnes  <larsbj@birdstep.com>

	* formula.C (draw): adjust for cursor_visible
	(ToggleInsetCursor): adjust for cursor_visible and constify asc
	and desc
	(ShowInsetCursor): adjust for cursor_visible and constify asc and desc
	(HideInsetCursor): adjust for cursor_visible
	(LocalDispatch): constify default_label and res

2001-03-16  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* math_rowst.C: add missing #include <config.h>.

2001-03-16  André Pönitz  <poenitz@gmx.net>

	* math_matrixinset.h:
	* math_parinset.[Ch]:
	* math_rowst.[Ch]: move MathedRowContainer::row_ to the base
      
2001-03-13  John Levon  <moz@compsoc.man.ac.uk>

	* Makefile.am:
	* formula.C:
	* math_forms.h:
	* math_forms.C:
	* math_panel.h:
	* math_panel.C:
	* math_symbols.C: maths panel moved to GUII

2001-03-16  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_cursor.C: use lyxerr instead of cerr.

2001-03-15  André Pönitz  <poenitz@gmx.net>

	* math_cursor.C: fix bug (cursor was leaving two insets at a time
	   instead of one)

2001-03-15  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_macrotable.h: noncopyable is in namespace boost
	* math_macrotemplate.h: ditto

	* math_rowst.h: make MathedRowContainer::iterator public.

2001-03-15  André Pönitz  <poenitz@gmx.net>

	* math_parser.C: read '\nonumber' again (was broken)

	* math_rowst.C: new file

2001-03-15  Angus Leeming  <a.leeming@ic.ac.uk>

	* math_cursor.C: added using directive.

2001-03-15  André Pönitz  <poenitz@gmx.net>

	* math_rowst.h: Finally remove MathedRowSt

	* math_parser.C:
	  math_xiter.C: changed accordingly

2001-03-12  André Pönitz  <poenitz@gmx.net>

	*	math_rowst.h: replace MathedRowSt with MathedRowStruct,
	    more robust MathedRowSt::[gs]etTab (to get rid of the constructor arg)

2001-03-10  André Pönitz  <poenitz@gmx.net>

	* math_xiter.[Ch]:
	  math_matrixinset.C: move adjustVerticalSt to the only place where
      it is used. Fix a small bug where the cached row structure and the
	    actual data get out of sync after the deletion of whole rows

2001-03-09  André Pönitz  <poenitz@gmx.net>

	* math_cursor.C: use std::vector<> in MathStackXIter
		change selstk from a pointer to the "real thing"

	* math_rowst.h: new MathedRowContainer::erase method

	* math_xiter.C: use MathedRowContainer::erase

	* math_parser.C: use MathedRowContainer::insert_after

2001-03-08  André Pönitz  <poenitz@gmx.net>

	* math_rowst.h: give MathedRowContainer an 'insert' method. 

	* math_xiter.C: new 'container()' method to encapsulated access to
	  the MathParInset's MathedRowContainer

	* math_rowst.h: proper copy constructor and destructor for
	  MathedRowContainer

	* math_matrixinset.[hC]: remove copy constructr and destructor. Those
	  automatically created by the compiler are ok now.
	
2001-03-06  André Pönitz  <poenitz@gmx.net>

	* array.[Ch]: factor out deep_copy,
	  remove third argument from raw_pointer_insert 

	* math_iter.[Ch]: remove unused function Clear()	

	* math_cursor.C: change signature of MathStackXIter:push()
	  whitespace changes

	* math_rowst.h: introduction of MathRowContainer
	  several files: corresponding changes

2001-03-04  André Pönitz  <poenitz@gmx.net>

  * math_macrotemplate.[Ch]:
    math_macro.C: move update() functionality to the macro

	* math_rowst.h: split MathedRowSt into "data" and "list"

2001-03-01  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_macrotemplate.C (update): use MathMacro::getArg, and
	receive a const reference.
	(getMacroPar): add an Assert

	* math_macrotemplate.h: make MathMacro a friend, make update take
	a const reference.

	* math_macro.[hC]: get rid of getRowSt, remove MacroArgumentBase
	and store a MathMacroArgument in the vector
	* math_macro.C: changes because of the above.
	(getArg): new method

	* math_parser.C (mathed_parse): plug potential leak

	* math_iter.h: add comment on virtual destructor

	* math_iter.C (Delete): make c const

	* math_parinset.C (Metrics): cleanup indent. make one string const.

	* math_inset.C (size): move out of line
	(incSize): ditto

	* math_macroarg.h: remove default constructor

	* math_macroarg.C: include Lsstream.h instead of debug.h
	(MathMacroArgument): remove default constructor
	(Write): add std:: on ostream arg

2001-02-23  John Levon  <moz@compsoc.man.ac.uk>

	* math_parser.C:
	* formula.C: make DEBUG into lyxerr

2001-03-01  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_macrotemplate.h: make noncopyable, remove last arg to
	constructor, remove flags_ add edit_
	(flags): remove method

	* math_macrotemplate.C (setArgument): delete method
	(update): make idx const
	(Metrics): use edit_, remove flags_
	(draw): use edit_, remove flags_
	(setEditMode): set edit_, remove flags_
	(MathMacroTemplate): initialize edit_, remove flags_

	* math_macro.h: remove x,y from MacroArgumentBase, make tmplate_ a
	shared_ptr, let constructor take a shared_ptr

	* math_macro.C (MathMacro): take shared_ptr as arg, remove double
	initialization. 
	(draw): remove unneded update, remove removed update of x,y
	(GetXY): call tmplates GetMacroXY directly
	(SetFocus): call Metrics() instead of update()
	(Write): remove support for math macro environments, simplifications.

	* math_macrotable.h: make class noncopyable, change getMacro to
	createMacro, change vector to map store a
	shared_ptr<MathMacroTemplate> in it., remove unneeded typedef

	* math_macrotable.C: add pragma
	(createMacro): change name from getMacro, use shared_ptr
	(getTemplate): Use map lookup to get macro, return shared_ptr
	(addTemplate): assert that m containse a valid pointer, use map[]
	insert.
	(builtinMacros): by using shared_ptr fix the mem leak, remove
	commented out unsupported macros

	* math_cursor.C: changes because of the above
	* math_parser.C: changes because of the abobe
	
	* formulamacro.h: change tmacro_ to be a shared_ptr, remove
	default arg on constructor.
	* formulamacro.C: changes because of the above

	* math_parinset.h: add pragma
	(SetAlign): move inline out of class def
	(GetColumns): ditto
	(GetRows): ditto
	(isMatrix): ditto
	(setArgumentIdx): ditto
	(setNextArgIdx): ditto
	(getArgumentIdx): ditto
	(getMaxArgumentIdx): ditto
	(setRowSt): ditto
	(xo): ditto
	(yo): ditto

	* math_parinset.C: add pragma
	(Write): change the else clause, lessen depth

	* math_macroarg.h: small whitespace change

	* array.C: include support/LOstream.h add using ostream and endl

	* array.h (dump): add std:: on ostream

2001-02-28  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_macrotemplate.h: remove default arg on update

	* math_macrotemplate.C (update): add assert and remove noop case.

	* formulamacro.C (Read): add comment.
	(ascent): remove noop call to MathMacroTemplate
	(descent): ditto
	(width): ditto
	(draw): ditto

	* math_parser.C (mathed_parse): fix another potential problem by
	passing a freestanding mathedarray.

	* math_root.C (GetData): add const version

	* math_parinset.C (~MathParInset): delete
	(GetData): add const version

	* math_matrixinset.C (MathMatrixInset): delete pointer version,
	make it a proper copy constructor instead
	(Clone): change acc.
	(MathMatrixInset): remvoe default val for m and n

	* math_macro.C (GetData): add const version

	* math_fracinset.C (GetData): add const version

	* math_cursor.C (SelCopy): make p1 and p2 const
	(SelCut): make p1 and p2 const

	* formula.h: add '_' on priv vars. Cnages in formula.C acc. to this
	(LyxCode): move inline out of class
	(ConvertFont): ditto
	(display): ditto

	* array.[Ch] (dump): method added for debugging purposes

	* math_parser.C (mathed_parse): pass a freestanding mathedarray to
	mathed_parse when reading a matrix.

	* math_spaceinset.[Ch]: add pragma, make variables private add
	'_', change order of method definitions.

	* math_root.h (~MathRootInset): delete
	Change uroot_ to be a real object instead of a pointer
	* math_root.C: changes because of the above

	* math_macro.C (MathMacro(MathMacro*)): delete constructor
	(MathMacro(MathMacro const &)): new copy constructor

	* math_inset.h: delete constructor taking a pointer to MathedInset
	(size, incSize): move inline method

	* math_funcinset.h: add pragma, remove class vars ln and fname,
	change protected to private, add '_' to priv vars.
	(~MathFuncInset): remove

	* math_fracinset.h: make MathParInset den_ a real object and not a
	pointer. 

	* math_fracinset.C (MathFracInset): clean up, move initalization
	to initialization list
	(~MathFracInset): remove
	(Clone): remove leak

	* math_draw.C: delete file
	
	* math_dotsinset.[Ch]: add pragma

	* math_bigopinset.h: make protected variables private add '_' to vars.

	* math_bigopinset.C: move methods to follow class definition order

	* math_accentinset.h (getAccentCode): move inline here

	* math_accentinset.C (MathAccentInset): cleanup
	(draw): constify dw

2001-02-27  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_inset.[Ch] (MathedInset): remove method

	* Makefile.am (libmathed_la_SOURCES): correct typo

	* math_parinset.C (draw): move MathedXiter data(this) up. and
	remove it two other places.

	* math_macro.C (MathMacro): use array directly, don't use
	setArgumentIdx and GetData

2001-02-26  Lars Gullik Bjønnes  <larsbj@trylle.birdstep.com>

	* math_macroarg.C (MathMacroArgument): delete
	* math_macro.C (~MathMacro): delete
	* math_macrotemplate.C (~MathMacroTemplate): delete
	
	* math_decorationinset.[Ch]: add pragma
	* math_deliminset.[Ch]: likewise
	* math_fracinset.[Ch]: likewise
	* math_macroarg.[Ch]: likewise
	* math_macrotemplate.[Ch]: likewise
	* math_matrixinset.[Ch]: likewise
	
	* formulamacro.C (Read): set contents of tmacro_ to ar.

	* formulamacro.h: add '_' to private variables.
	* formalamacro.C: changes because of this.

2001-02-23  Juergen Vigna  <jug@sad.it>

	* formula.C (LocalDispatch):  changed action to be a kb_action (as it
	should be) and not an int.

	* formulamacro.C (LocalDispatch): ditto.

2001-02-14  André Pönitz  <poenitz@gmx.net>

	* math_parinset.[Ch]: make array a real MathArray, not just a
	  pointer to one.

	* move MathIter::Copy(int, int) to MathArray::shrink(pos, pos)

	* several files: subsequent changes
	
	* math_cursor.C: make selarray a proper MathArray

	* several files: Change "MathedArray *" to "MathedArray &"


2001-02-19  Dekel Tsur  <dekelts@tau.ac.il>

	* array.C (MathedArray): Fix compilation problem.

2001-02-14  André Pönitz  <poenitz@gmx.net>

	* array.[Ch]: "deep" copy constructor and assignment operator for
	MathArray 

	* math_iter.[Ch]: seperate Copy() from Copy(int, int)

	* math_iter.[Ch]: remove SetData
	  several files: subsequent changes

2001-02-14  André Pönitz  <poenitz@gmx.net>

	* array.[Ch]: remove constructor and  enums ARRAY_MIN_SIZE and
	ARRAY_STEP 

	* math_iter.C: default-construct and resize array

2001-02-17  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* math_xiter.h: move ipush and ipop to public, add _ on private
	variables, move protected var to private, remove friend.

	* math_cursor.C (insertInset): rename method from Insert also
	remove default arg val. Call the public methods of xiter instead
	of private variables.

	* changes to several files because of the above.
	
2001-02-14  André Pönitz  <poenitz@gmx.net>

	* math_iter.[Ch]: hide fcode_
	* math_xiter.C:
	* math_parinset.C: subsequent changes


2001-02-16  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* Makefile.am (libmathed_la_SOURCES): remove math_write.C, add
	math_utils.h

	* math_write.C: delete file
	* math_delim.C: delete file
	* marh_sqrtinset.h: delete file

	* move funcs to more localized files, more general cleanup.
	Constify several local vars. Doxygen changes. Formatting.
	
2001-02-15  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* support.C: add some consts

	* matriz.C: clean up a bit.
	(matmat): remove the for loop.

	* several files: changes so that several friends can be removed

2001-02-14  André Pönitz  <poenitz@gmx.net>

	* formula.C: reformatting 

	* math_cursor.[Ch]:
	  math_iter.[Ch]:
	  math_xiter.[Ch]: remove unneeded members

2001-02-14  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* math_parser.C: 
	* math_panel.C: 
	* formula.C: remove cruft

	* array.C (begin): new method
	(end): ditto

2001-02-14  André Pönitz  <poenitz@gmx.net>
	
	* math_iter.[Ch]: remove 'insert', 'maxsize' and 'ARRAY_SIZE'

	* math_cursor.C: reformatting 

2001-02-14  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* math_spaceinset.C: 
	* math_root.C: 
	* math_matrixinset.C: 
	* math_macrotemplate.C: 
	* math_funcinset.C: 
	* math_fracinset.C: 
	* math_dotsinset.C: 
	* math_deliminset.C: 
	* math_decorationinset.C: 
	* math_bigopinset.C: 
	* math_accentinset.C: 
	* math_sqrtinset.C: include LOstream.h and add using directive.

2001-02-14  André Pönitz  <poenitz@gmx.net>

	* math_iter.C: reformatting 

2001-02-13  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* math_spaceinset.C (GetSpace): move here

	* math_parinset.C: add debug.h, move several prev. inlined methods
	here. 

	* math_macrotable.C math_xiter.C support.C: add debug.h

	* math_macro.h: remove debug.h, remove typedefs

	* math_macro.C: remove FORMS_H_LOCATION, and LString.h, remove
	extern decls.

	* math_hash.C: change some defines to int const. change use of
	LM_TC_NORMAL to LM_TC_VAR

	* math_draw.C: delete file

	* math_defs.h (MATH_DEFS): dont define byte here, remove unneded
	forward decls. remove LM_TC_NORMAL, move inline methods to
	support.C (and support.h)

	* math_cursor.C: move several previous inlined methods here

	* math_bigopinset.h math_dotsinset.h math_funcinset.h
	math_parinset.h math_spaceinset.h: add math_defs.h

	* math_accentinset.h: add support.h and math_defs.h

	* formulamacro.C math_cursor.C math_iter.h math_write.C: add support.h

	* formula.h: remove unused func decl: OpenMathInset

	* formula.C math_inset.h: get rid of math_defs.h

	* array.h: switch to support.h instead of math_defs.h

	* array.C: remove one include

	* Makefile.am (libmathed_la_SOURCES): remove math_draw.C

	* math_panel.C (deco_cb): move the sizeof/sizeof to a const int.

	* math_parser.C: include macrotable and macrotemplate

	* math_macrotemplate.[Ch]: new files

	* math_macrotable.[Ch]: new files

	* math_macroarg.[Ch]: new files

	* math_macro.C: move stuff to the new files.

	* math_cursor.C: include math_macrotable.h

	* macro_support.[Ch]: new files

	* formulamacro.C: add more includes

	* Makefile.am (libmathed_la_SOURCES): add new files.

2001-02-13  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* Makefile.am (libmathed_la_SOURCES): remove duplicate
	math_sqrtinset. 

	* support.C: 
	* math_xiter.C: 
	* math_parinset.C: add a bunch of "using" directives.

	* math_funcinset.h: 
	* math_decorationinset.h: 
	* math_bigopinset.h: 
	* math_spaceinset.h: remove more couples of inline.

2001-02-13  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* math_xiter.h: remove a couple of "inline"

	* array.C (strange_copy): fix bug (hopefully) 
	* many files: add a lot of new files and move methods to the class
	files they belong to. Only first attempt at cleanup more will
	follow.
	
2001-02-12  André Pönitz  <poenitz@gmx.net>
	
	* math_macro.[hC]: replace MathMacroArgument[] with
	  std::vector<MathMacroArgument>
	* math_defs.h:
	  math_inset.C: replace int[] with std::vector<int>
	* math_panel.h:
	* math_symbols.C: replace FL_OBJECTP[] with
	std::vector<FL_OBJECT*>
	
2001-02-12  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* math_defs.h (struct MathedRowSt): make all private variables end
	with '_', initialize in initializer list instead of in function
	body.

2001-02-12  Dekel Tsur  <dekelts@tau.ac.il>

	* formula.C (LocalDispatch): Change the default action of
	break-line to create an align* environment instead of eqnarray*.

	* math_inset.C (Metrics): Correct drawing of the multline
	environment.

2001-02-12  André Pönitz  <poenitz@gmx.net>
	
	* array.[hC]: replace private variable maxsize_ with call to
	bf_.size()
	* math_defs.h: replace int[] by std::vector<int> for
	MathedRowSt::widths

2001-02-09  Lars Gullik Bjønnes  <larsbj@lyx.org>

	* array.h: made all variables private, removed friend, added new
	methods: raw_pointer_insert, raw_pointer_copy, strange_copy, added
	non const operator[] added setter for last and getter for maxsize.
	changed name from LyxArrayBase to MathedArray.
	changed name of some methods to start with lowerchar.
	moved inline methods to array.C
	
	* math_iter.C + several file: changes because of the above.

	* array.C: new file with the prev inline methods.
	
2001-02-10  Dekel Tsur  <dekelts@tau.ac.il>

	* Many files: add support for the align environment from amsmath.

2001-02-09  André Pönitz  <poenitz@gmx.net>

	* array.h: replace array buffer  'byte bf[]'  by 'std::vector<byte> bf'
	* several files: subsequent changes         
	* math_iter.h: remove unused prototype
	* array.h: ditto.

2001-02-08  Jean-Marc Lasgouttes  <Jean-Marc.Lasgouttes@inria.fr>

	* math_macro.C (draw): add .c_str() to .str() (useful when
	compiling with lyxstring, but STL sstream).
	(Metrics): ditto.

2001-02-08  André Pönitz  <poenitz@gmx.net>

	* several files: get rid of reinterpret_cast.

2001-02-04  Allan Rae  <rae@lyx.org>

	* math_parser.C (mathed_parse): I'm sure Lars has a better fix than
	just casting the variable.

2001-02-02  Dekel Tsur  <dekelts@tau.ac.il>

	* Many files: Add support for multline and alignat environments from 
	amsmath.

2001-02-02  Dekel Tsur  <dekelts@tau.ac.il>

	* math_symbols.C (math_insert_greek): Move cursor right when
	unlocking the math inset.

2001-01-26  Dekel Tsur  <dekelts@tau.ac.il>

	* math_parser.C (LexGetArg): Fix crash when loading corrupt files.

	* formula.C (LocalDispatch): Before inserting a label in an
	eqnarray, move the cursor to the top level.

	* math_iter.C (getLabel): Test if crow == 0.

2001-01-15  Dekel Tsur  <dekelts@tau.ac.il>

	* math_draw.C (Metrics): Use the correct GetString.

