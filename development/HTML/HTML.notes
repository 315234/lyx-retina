TODO:
1. The counter patch, and better output for InsetRef.
2. CSS needs work in several places, mostly floats. Maybe check elyxer on that.
3. MathML


These insets work but still need work:
	InsetBibtex: There are a few issues here. 
		- One is that the output is not very nice. This will be solved, though, by 
			a patch of mine I seem to have forgotten to finish. 
		- Another issue concerns cross-references. At the moment, we simply use the
			xref information for every entry, rather than listing the xref separately and
			then referencing it. That should not be terribly hard, but it would take a bit
			of work.
	InsetBox: The CSS isn't there yet.
	InsetFlex: I think this one is OK, but it needs some testing.
	InsetFloat: This seems to work OK, but it will need testing and tweaking. There is
		also no CSS yet for these.
	InsetFloatList: Seems to work well, but may need testing.
	InsetGraphics: This works in a pretty primitive way, in that it outputs the graphic
	  and appropriate img tag. But we don't yet do any sort of scaling, rotating, and
		so forth. That won't be hard, since we can just call ImageMagick to do this for 
		us, but appropriate routines will need to be written.
	InsetIndex and InsetPrintIndex: These work with limitations, as noted in the 
		Additional Features manual.
	InsetNomencl and InsetPrintNomencl: Do not work at all yet, but would be easy to do.
		First, Nomencl would need to go to the TOC, which it should do anyway. Then just
		do as for TOC and Index, more or less.
	InsetRef: At present, we just use the label name as associated text, and put it 
		into square brackets. It'd be nice to be able to do more, but for that we'd need to
		associate counters with the labels, and we don't have that yet.
	InsetTabular: Works reasonably well, but we don't do anything with any of the 
		arguments provided for longtable. There are probably other limitations, too,
		since I'm very much not an expert with tables.


Math
  We have a fair bit of math now working via MathML output, but there are still some 
  isues, and not all the insets work. Here are the ones I know still need work:
	- Array: Should be able to use alignment information via appropriate attributes, for
		mtable, mrow, and mtd.
	- Box: There is a general issue here with text mode nesting. See the FIXME attached
		to the SetMode class.
	- Lefteqn: For this, and numbering in general, probably need mlabeledtr, which may
		mean we always need to output <mtable>.
	- Par?
	- Phantom: There is some support for this in MathML....
	- Ref: Needs to be deferred.
	- Size: Unclear if we want to do anything here, though we could. See
		lib/symbols for the commands supported, of course.
	- Space: Needs checking.
	- SpecialChar: Needs checking.
	- Split: There are some alignment issues here, but it basically works.
	- Substack: This is a stack of however many cells, all in a smaller style.
		Probably do something with <mover>, again.
	- Tabular: This is more or less a text-like table in math. Probably output it
		as a table, but set the font.

Other math notes:
	- Hull:
		-	Need to handle the equation hull type by outputting a counter. But that will 
			have to wait for the counter patch. The counter probably goes with mlabeledtr, 
			which may mean we always need to output <mtable>.
		- Similar issues about eqnarray.
		- It's not clear if we need to do much about the other hull types.
	- XYMatrix: So far as I can tell, using this in LyX effectively involves using a
		lot of ERT, within the matrix, to get the arrow effects. At present, it just prints
		as an InsetMathGrid, from which it inherits, and so as a simple table. I don't know
		how much more we can do.


These insets do not work and are not yet scheduled to work:
	InsetExternal: It may be that this won't be too hard, but I don't understand 
		these so am not sure what to do. For now, it is disabled.

May need to make use here of TocWidget::itemInset, which should then be moved
to TocBackend.
