TODO:
1. InsetTabular
2. InsetTOC
3. The counter patch, and better output for InsetRef.
4. Better output for citations, meaning better labels. Numerical, as said below,
   should be easy, and author-year oughtn't to be THAT hard. But it'll need a 
	 bit of work.
5. CSS needs work in several places, mostly floats. Maybe check elyxer on that.
6. MathML


These insets work but still need work:
	InsetBibtex: There are a few issues here. 
		- One is that the output is not very nice. This will be solved, though, by 
			a patch of mine I seem to have forgotten to finish. To get output that 
			accorded with the BibTeX style, of course, we'd have to parse the bbl file. 
			I don't know if that's worth it.
		- Another issue concerns cross-references. At the moment, we simply use the
			xref information for every entry, rather than listing the xref separately and
			then referencing it. That should not be terribly hard, but it would take a bit
			of work.
		- A third issue concerns the labels. At present, we use the BibTeX key as the 
			citation label. It would not be too hard, I think, to use numerical labels,
			in the way BibTeX does. To do so, we'd need to move the sorting routine out
			of InsetBibtex so we could do it before we print the citations. See below.
	InsetBox: The CSS isn't there yet.
	InsetCitation: This has two limitations as of 20 XI 2009. The first is that we
		ignore the citation style and output square brackets, no matter what. The
		second is that, with BibTeX, we simply use the BibTeX key as the citation
		string, thus ignoring numerical, author-year, etc. It will not be too hard
		to make numerical work. To do this, we need to collect information on the
		used citations, alphabetize them, and then assign numerical labels via the
		BibTeXInfo::label() method. A similar strategy will work for author-year and
		the like, but calculating labels will be more complex---unless we just parse
		the bbl file, which of course is the only fully general solution.
	InsetFlex: I think this one is OK, but it needs some testing.
	InsetFloat: This seems to work OK, but it will need testing and tweaking.
	InsetGraphics: This works in a pretty primitive way, in that it outputs the graphic
	  and appropriate img tag. But we don't yet do any sort of scaling, rotating, and
		so forth. That won't be hard, since we can just call ImageMagick to do this for 
		us, but appropriate routines will need to be written.
	InsetRef: At present, we just use the label name as associated text, and put it 
		into square brackets. It'd be nice to be able to do more, but for that we'd need to
		associate counters with the labels, and we don't have that yet.

These insets do not work and are not yet scheduled to work:
	InsetExternal: It may be that this won't be too hard, but I don't understand 
		these so am not sure what to do. For now, it is disabled.
	InsetIndex and InsetPrintIndex: An "advanced" case. What really would be cool 
		would be to collect all of these and then write the index as a series of links 
		back to the occurrences. But not now.
	InsetNomencl and InsetPrintNomencl: Also "advanced".

May need to make use here of TocWidget::itemInset, which should then be moved
to TocBackend.

These do not yet work and need some attention:
	InsetTabular: This shouldn't be too hard, but will need doing.
	InsetTOC: We should just be able to use what we have in the TOC. To get links to
		work, though, we'll need to co-ordinate the writing of anchors in the sections,
		which won't actually happen until later.

MATH
	Regarding math, the view seems to be that we should in the first instance just use what
	we get from instant preview and copy those over to the output directory, and then try
	to make MathML work.
