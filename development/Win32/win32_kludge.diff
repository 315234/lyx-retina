Index: src/DepTable.C
===================================================================
RCS file: /usr/local/lyx/cvsroot/lyx-devel/src/DepTable.C,v
retrieving revision 1.41
diff -u -a -u -r1.41 DepTable.C
--- src/DepTable.C	13 Oct 2003 01:01:33 -0000	1.41
+++ src/DepTable.C	18 Apr 2005 17:37:02 -0000
@@ -26,7 +26,9 @@
 #include <fstream>
 
 #ifndef CXX_GLOBAL_CSTD
+# ifndef _WIN32
 using std::time;
+# endif
 #endif
 
 using lyx::support::ltrim;
Index: src/cursor.C
===================================================================
RCS file: /usr/local/lyx/cvsroot/lyx-devel/src/cursor.C,v
retrieving revision 1.123
diff -u -a -u -r1.123 cursor.C
--- src/cursor.C	25 Feb 2005 11:55:31 -0000	1.123
+++ src/cursor.C	18 Apr 2005 17:37:02 -0000
@@ -58,7 +58,9 @@
 using std::vector;
 using std::endl;
 #ifndef CXX_GLOBAL_CSTD
+# ifndef _WIN32
 using std::isalpha;
+# endif
 #endif
 using std::min;
 using std::swap;
Index: src/frontends/qt2/QLyXKeySym.C
===================================================================
RCS file: /usr/local/lyx/cvsroot/lyx-devel/src/frontends/qt2/QLyXKeySym.C,v
retrieving revision 1.32
diff -u -a -u -r1.32 QLyXKeySym.C
--- src/frontends/qt2/QLyXKeySym.C	7 Jul 2004 09:32:19 -0000	1.32
+++ src/frontends/qt2/QLyXKeySym.C	18 Apr 2005 17:37:02 -0000
@@ -74,7 +74,7 @@
 void initEncodings()
 {
 	// when no document open
-	encoding_map[""] = QTextCodec::codecForLocale();
+	encoding_map[std::string()] = QTextCodec::codecForLocale();
 
 	encoding_map["iso8859-1"] = QTextCodec::codecForName("ISO 8859-1");
 	encoding_map["iso8859-2"] = QTextCodec::codecForName("ISO 8859-2");
Index: src/support/filetools.C
===================================================================
RCS file: /cvs/lyx/lyx-devel/src/support/filetools.C,v
retrieving revision 1.209
diff -u -r1.209 filetools.C
--- src/support/filetools.C	2005/04/21 14:03:30	1.209
+++ src/support/filetools.C	2005/04/26 15:43:13
@@ -1051,6 +1051,11 @@
 
 cmd_ret const RunCommand(string const & cmd)
 {
+#ifdef _WIN32
+	// TODO: Implement this, or merge it into forkedcall.
+	// Used for lyx2lyx in buffer.C, echo in math_extern and kpse in this file
+	return make_pair(-1, string());
+#else
 	// FIXME: replace all calls to RunCommand with ForkedCall
 	// (if the output is not needed) or the code in ispell.C
 	// (if the output is needed).
@@ -1080,6 +1085,7 @@
 		perror("RunCommand:: could not terminate child process");
 
 	return make_pair(pret, ret);
+#endif
 }
 
 
Index: src/support/tempname.C
===================================================================
RCS file: /cvs/lyx/lyx-devel/src/support/tempname.C,v
retrieving revision 1.26
diff -u -r1.26 tempname.C
--- src/support/tempname.C	2005/04/26 10:30:24	1.26
+++ src/support/tempname.C	2005/04/26 15:51:22
@@ -32,6 +32,10 @@
 # endif
 #endif
 
+#ifdef _WIN32
+# include <io.h>
+#endif
+
 using boost::scoped_array;
 
 using std::string;
@@ -44,6 +48,9 @@
 {
 #if defined(HAVE_MKSTEMP)
 	return ::mkstemp(templ);
+#elif defined(_WIN32)
+    ::_mktemp(templ);
+    return (int) ::fopen(templ, "w");
 #elif defined(HAVE_MKTEMP)
 	// This probably just barely works...
 	::mktemp(templ);
@@ -60,7 +67,9 @@
 {
 	string const tmpdir(dir.empty() ? package().temp_dir() : dir);
 	string tmpfl(AddName(tmpdir, mask));
+#ifndef _WIN32
 	tmpfl += convert<string>(getpid());
+#endif
 	tmpfl += "XXXXXX";
 
 	// The supposedly safe mkstemp version
@@ -71,7 +80,11 @@
 	int const tmpf = make_tempfile(tmpl.get());
 	if (tmpf != -1) {
 		string const t(tmpl.get());
+#ifdef _WIN32
+        ::fclose((FILE *) tmpf);
+#else
 		::close(tmpf);
+#endif
 		lyxerr[Debug::FILES] << "Temporary file `" << t
 				     << "' created." << endl;
 		return t;
