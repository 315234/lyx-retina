# This file is part of lyx2lyx
# -*- coding: utf-8 -*-
# Copyright (C) 2008 Jos√© Matos  <jamatos@lyx.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

""" Convert files to the file format generated by lyx 2.0"""

import re

from parser_tools import find_token, find_end_of, find_tokens, get_value, get_value_string

####################################################################
# Private helper functions

def find_end_of_inset(lines, i):
    " Find end of inset, where lines[i] is included."
    return find_end_of(lines, i, "\\begin_inset", "\\end_inset")

####################################################################


def revert_swiss(document):
    "Set language german-ch to ngerman"
    i = 0
    if document.language == "german-ch":
        document.language = "ngerman"
        i = find_token(document.header, "\\language", 0)
        if i != -1:
            document.header[i] = "\\language ngerman"
    j = 0
    while True:
        j = find_token(document.body, "\\lang german-ch", j)
        if j == -1:
            return
        document.body[j] = document.body[j].replace("\\lang german-ch", "\\lang ngerman")
        j = j + 1

def revert_tabularvalign(document):
   "Revert the tabular valign option"
   i = 0
   while True:
       i = find_token(document.body, "\\begin_inset Tabular", i)
       if i == -1:
           return
       j = find_end_of_inset(document.body, i)
       if j == -1:
           document.warning("Malformed LyX document: Could not find end of tabular.")
           i = j
           continue

       k = find_token(document.body, "<features tabularvalignment=", i)
       if k == -1:
           i = j
           continue

       # which valignment is specified?
       tabularvalignment_re = re.compile(r'<features tabularvalignment="(top|bottom)">')
       m = tabularvalignment_re.match(document.body[k])
       if not m:
           i = j
           continue

       tabularvalignment = m.group(1)

       subst = ['\\end_layout', '\\end_inset']
       document.body[j+1:j+1] = subst # just inserts those lines
       subst = ['\\begin_inset Box Frameless',
           'position "' + tabularvalignment[0] +'"',
           'hor_pos "c"',
           'has_inner_box 1',
           'inner_pos "c"',
           'use_parbox 0',
           'width "0col%"',
           'special "none"',
           'height "1in"',
           'height_special "totalheight"',
           'status open',
           '',
           '\\begin_layout Plain Layout']
       document.body[i:i] = subst # this just inserts the array at i
       i += len(subst) + 2 # adjust i to save a few cycles 

##
# Conversion hub
#

supported_versions = ["2.0.0","2.0"]
convert = [[346, []],
           [347, []]
          ]

revert =  [[346, [revert_tabularvalign]],
           [345, [revert_swiss]]
          ]


if __name__ == "__main__":
    pass
