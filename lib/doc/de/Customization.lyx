#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% Präambel nicht verändern!!!
%
% Die Präambel stellt sicher, dass das Benutzerhandbuch korrekt
% in die Formate pdf, ps und dvi exportiert werden kann.
% Wenn Probleme beim Exportieren auftreten, können Sie sich
% an das LyX-Dokumentationsteam wenden.
% EMail: lyx-docs@lists.lyx.org

% wenn pdflatex benutzt wird:
\usepackage{ifpdf}
\ifpdf

 % Schrift für hübschere PDF-Ansichten
 \IfFileExists{lmodern.sty}
  {\usepackage{lmodern}}{}

\fi % Ende von: wenn pdflatex benutzt wird

% Setzt den Link für Spruenge zu Gleitabbildungen
% auf den Anfang des Gelitobjekts und nicht aufs Ende
\usepackage[figure]{hypcap}

% Die Seiten des Inhaltsverzeichnisses werden römisch numeriert,
% ein PDF-Lesezeichen für das Inhaltsverzeichnis wird hinzugefügt
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }
\end_preamble
\options fleqn,bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 7
InsetLayout CharStyle:MenuItem
LyxType               charstyle
LabelString           menu
LatexType             command
LatexName             menuitem
Font
Family              Sans
EndFont
Preamble
\newcommand*{\menuitem}[1]{{\sffamily #1}}
EndPreamble
End
# In case we need to do with sans...
#InsetLayout CharStyle:Code
#Font
#Family              Sans
#EndFont
#Preamble
#\renewcommand{\code}[1]{{\sffamily #1}}
#EndPreamble
#End
\end_local_layout
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "LyX-Anpassung: Möglichkeiten für fortgeschrittene Benutzer"
\pdf_author "LyX Team, deutsche Übersetzung: Peter Sütterlin, Leif Albers und Hartmut Haase"
\pdf_subject "LyX-Dokumentation, Anpassung"
\pdf_keywords "LyX, Dokumentation"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,  pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch OutDated
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
LyX-Anpassung:
\begin_inset Newline newline
\end_inset

Möglichkeiten für fortgeschrittene Benutzer
\end_layout

\begin_layout Author
vom LyX-Team
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Übersetzung: 
\noun on
Peter Sütterlin
\noun default
, 
\noun on
Leif Albers
\noun default
 und 
\noun on
Hartmut
\noun default
 
\noun on
Haase
\noun default
 (
\noun on
HHa
\noun default
, bis März 2010).
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Version 2.0.x
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
In diesem Teil der Dokumentation wird beschrieben, welche Möglichkeiten
 LyX bietet, um es den eigenen Wünschen anzupassen.
 Es werden Dinge wie Tastaturkürzel, Vorschau am Bildschirm, Optionen zum
 Drucken, das Senden von Befehlen an LyX durch den LyX-Server, Internationalisie
rung, Installation neuer LaTeX-Klassen und LyX-Layouts usw.
\begin_inset space \space{}
\end_inset

behandelt.
 Es kann hier nicht alles beschrieben werden, das an LyX individuell eingestellt
 und verändert werden kann --- die Entwickler fügen Neuerungen schneller
 ein, als wir sie dokumentieren können --- doch werden die grundlegenden
 Fähigkeiten von LyX dokumentiert sowie für einige der etwas obskuren Hinweise
 gegeben.
\end_layout

\begin_layout Standard
Mit der Version 1.1.6 von LyX wurde eine neue Schnittstelle zu den konfigurierbare
n Eigenschaften eingeführt, die Sie über den Menüpunkt 
\family sans
Werkzeuge\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 aufrufen können.
 Diese macht die weiter unten aufgeführten Erläuterungen zu den Konfigurationsda
teien von LyX nicht überflüssig, aber es vereinfacht doch den Prozess, LyX
 an 
\emph on
Ihre
\emph default
 Bedürfnisse anzupassen.
\end_layout

\begin_layout Chapter
Die Konfigurationsdateien von LyX
\end_layout

\begin_layout Standard
Dieses Kapitel soll Ihnen dabei helfen, sich mit den Konfigurationsdateien
 von LyX vertraut zu machen.
 Bevor Sie jedoch weiterlesen, sollten Sie herausfinden, wo sich das Systemverze
ichnis von LyX auf Ihrem Rechner befindet.
 Sie erfahren dies über den Menüpunkt 
\family sans
Hilfe\SpecialChar \menuseparator
Über
\begin_inset space ~
\end_inset

Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X
\family default
.
 In diesem Verzeichnis speichert LyX alle systemweiten Konfigurationsdateien,
 wir werden es im weiteren 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir
\family default
 nennen.
\end_layout

\begin_layout Section
Was befindet sich in 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir
\family default
?
\end_layout

\begin_layout Standard
Das Verzeichnis 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir
\family default
 sowie seine Unterverzeichnisse enthalten eine Anzahl Dateien, mit denen
 das Verhalten von LyX beeinflusst werden kann.
 Diese Dateien können direkt von LyX aus über den Dialog 
\family sans
Werkzeuge\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 gelesen und geändert werden.
 Fast alles, was Sie möglicherweise an LyX ändern wollen, können Sie hier
 einstellen.
 Jedoch können auch viele interne Dinge in LyX angepasst werden, indem man
 diverse andere Dateien in 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir
\family default
 verändert.
 Sie sind in verschiedene Kategorien unterteilt, die in den folgenden Unterabsch
nitten behandelt werden.
\end_layout

\begin_layout Subsection
Automatisch erzeugte Dateien
\end_layout

\begin_layout Standard
Diese Dateien werden automatisch bei der Konfiguration von LyX erzeugt.
 Sie enthalten verschiedene Standardwerte, die durch Untersuchung des Systems
 ermittelt werden.
 Normalerweise sollte man sie nicht verändern, da sie jederzeit von LyX
 überschrieben werden können.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
lyxrc.defaults
\family default
\series default
 enthält Standardwerte für diverse Befehle.
 Einstellungen, die Ihnen nicht zusagen, können einfach über 
\family sans
Werkzeuge\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 verändert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
packages.lst
\family default
\series default
 enthält eine Auf\SpecialChar \textcompwordmark{}
listung aller LaTeX-Pakete, die von LyX erkannt wurden.
 Derzeit wird diese Liste von LyX selber nicht benutzt, jedoch ist die Informati
on, zusammen mit einigem anderen, über den Menüpunkt 
\family sans
Hilfe\SpecialChar \menuseparator
LaTe
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family sans
X
\begin_inset space \space{}
\end_inset

Konfiguration
\family default
 zugänglich.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
textclass.lst
\family default
\series default
 ist eine Liste mit den im Verzeichnis 
\family typewriter
layout
\family default
 gefundenen Textklassen, zusammen mit den entsprechenden LaTeX-Dokumentenklassen
 und einer kurzen Beschreibung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
doc/LaTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XConfig.lyx
\family default
 wird bei der Konfiguration aus der Datei 
\family typewriter
LaTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XConfig.
\begin_inset Newline linebreak
\end_inset

lyx.in
\family default
 erzeugt.
 Jeder Eintrag der Form 
\family typewriter
@chk_bla@
\family default
 wird dabei durch 
\emph on
yes
\emph default
 oder 
\emph on
no
\emph default
 ersetzt, je nachdem, ob das Paket 
\family typewriter
bla
\family default
 gefunden wurde.
\end_layout

\begin_layout Subsection
Verzeichnisse
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
bind/
\family default
\series default
 Dieses Verzeichnis enthält Dateien mit der Endung 
\family typewriter
.bind
\family default
.
 In ihnen werden die Tastenkombinationen festgelegt, mit denen Sie Menüs
 öffnen und Bearbeitungsoperationen direkt starten können.
 Falls eine Datei 
\family typewriter
$LANG_xxx.bind
\family default
 mit einer an die internationalisierte Version von LyX angepassten Tastenbelegun
g existiert, wird diese bevorzugt geladen.
 Näheres dazu finden Sie in Kapitel
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
clipart/
\family default
\series default
 Hier sind einige PostScript-Bilder gespeichert, die Sie in Ihre Dokumente
 einbinden können.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
doc/
\family default
\series default
 Enthält die Dateien der LyX-Dokumentation (einschließlich der, die Sie
 gerade lesen).
 Eine kleine Ausnahmestellung hat die bereits beschriebene Datei 
\family typewriter
LaTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XConfig.lyx
\family default
.
 Auch hier wird eine übersetzte Version mit dem Vorsatz 
\family typewriter
$LANG_
\family default
 vor dem Dateinamen zuerst gesucht und, falls vorhanden, geladen.
 Siehe dazu Kapitel
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
examples/
\family default
\series default
 Enthält Beispieldateien, die erläutern, wie Sie die unterschiedlichen Möglichke
iten von LyX nutzen können.
 Verwenden Sie die Schaltfläche 
\family sans
Beispiele
\family default
 im Dateiauswahlmenü, um in dieses Verzeichnis zu gelangen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
images/[math/]
\family default
 Enthält Bilddateien, die von der Dialogbox 
\family sans
Aufzählungszeichen
\family default
 im Menü 
\family sans
Do\SpecialChar \-
ku\SpecialChar \-
ment
\family default
\SpecialChar \menuseparator

\family sans
Einstellungen
\family default
 benötigt werden.
 Außerdem finden Sie hier die unterschiedlichen Icons für die Werkzeugleiste
 und das Bild für den Startbildschirm.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
kbd/
\family default
\series default
 Hier sind die Definitionsdateien für die Tastaturbelegung gespeichert.
 Näheres dazu finden Sie im Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Internationale-Tastaturtabellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
layouts/
\family default
\series default
 Hier werden die in Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Installieren-neuer-Textklassen"

\end_inset

 beschriebenen Layoutdateien für die unterschiedlichen Dokumentenklassen
 gespeichert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
lyx2lyx
\family default
/ Enthält Dateien, die für die Konvertierung zwischen verschiedenen LyX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Versionen benötigt werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
scripts
\family default
/
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
templates
\family default
/ Enthält die Vorlagendateien, die Ihnen bei 
\family sans
Datei\SpecialChar \menuseparator
Neu
\begin_inset space \space{}
\end_inset

von
\begin_inset space \space{}
\end_inset

Vorlage
\family default
 präsentiert werden, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Vorlagen-erstellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
tex/
\family default
 Einige LyX-spezifische LaTeX-Textklassen- (
\family typewriter
.cls
\family default
) und -Stildateien
\begin_inset Newline linebreak
\end_inset

 (.
\family typewriter
sty
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
ui/
\family default
 Hier finden Sie Dateien mit der Endung 
\family typewriter
.ui
\family default
, die die Benutzerschnitt\SpecialChar \-
stel\SpecialChar \-
le von LyX festlegen, also welche Einträge
 in welchen Menüs sind, und wie die Werkzeugleiste zusammengesetzt ist.
\end_layout

\begin_layout Subsection
Dateien, die Sie nicht verändern sollten
\end_layout

\begin_layout Standard
Die folgenden Dateien werden intern von LyX verwendet.
 Sie sollten im Normalfall nur von den Entwicklern editiert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
CREDITS
\family default
\series default
 Diese Datei enthält eine Liste der Entwickler.
 Ihr Inhalt wird über die Menüauswahl 
\family sans
Hilfe\SpecialChar \menuseparator
Über
\begin_inset space \space{}
\end_inset

Ly
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family sans
X
\family default
 angezeigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
chkconfig.ltx
\family default
\series default
 ist ein LaTeX-Skript, das bei der Konfiguration verwendet wird.
 Starten Sie es nie direkt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
configure
\family default
\series default
 ist das eigentliche Skript, das zur Neukonfiguration von LyX verwendet
 wird.
 Es erzeugt die Konfigurationsdateien in dem Verzeichnis, von dem aus es
 aufgerufen wurde.
\end_layout

\begin_layout Subsection
Andere Dateien
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
encodings
\family default
 Die hier enthaltene Tabelle beschreibt, wie die unterschiedlichen Zeichenkodier
ungen in Unicode dargestellt werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
external_templates
\family default
 Diese Datei enthält die Vorlagen für das neue 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
-Modul.
 Siehe dazu Kapitel
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "cha:Externes-Material-einfügen"

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
languages
\family default
 Eine Liste mit allen derzeit von LyX unterstützten Sprachen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
lyxrc.example
\family default
 Veraltet.
\end_layout

\begin_layout Section
Das lokale Konfigurationsverzeichnis
\end_layout

\begin_layout Standard
Eventuell benutzen Sie LyX als normaler Benutzer und wollen dennoch einige
 Einstellungen der Konfiguration ändern.
 Zu diesem Zweck gibt es ein benutzereigenes Verzeichnis 
\family typewriter
UserDir
\family default
, in dem Ihre gesamte persönliche Konfiguration gespeichert wird.
 Der Name dieses Verzeichnisses wird als 
\emph on
Benutzerverzeichnis
\emph default
 in 
\family sans
Hilfe\SpecialChar \menuseparator
Über
\begin_inset space \space{}
\end_inset

Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X
\family default
 angezeigt.
 Dieses Verzeichnis wird als Spiegelung des systemweiten Verzeichnisses
 verwendet.
 Das bedeutet, dass jede Datei, die Sie dort speichern, die entsprechende
 Datei im Systemverzeichnis ersetzt.
 Jede der im vorigen Abschnitt beschriebenen Konfigurationsdateien kann
 sich entweder im Systemverzeichnis 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir
\family default
 oder aber in Ihrem privaten Verzeichnis befinden.
 Im ersten Fall gelten die Einstellungen für alle Benutzer, im zweiten Fall
 nur für Sie.
\end_layout

\begin_layout Standard
Dies lässt sich an einigen Beispielen leichter erklären:
\end_layout

\begin_layout Itemize
Um eine LyX Version älter als 1.1.6 umzukonfigurieren, musste der Benutzer
 zunächst die Datei 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

LyXDir/lyxrc.example
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
HHa: wie bereits im Benutzerhandbuch erwähnt, ist URL eine einfache Möglichkeit,
 um Schreibmaschinenformat umzubrechen.
\end_layout

\end_inset

 nach 
\family typewriter
UserDir/lyxrc
\family default
 kopieren und diese dann manuell editieren.
 Neuere Versionen von LyX lesen diese Datei zwar noch, wenn sie in 
\family typewriter
UserDir
\family default
 gefunden wird, aber alle Änderungen, die über den neuen Dialog 
\family sans
Werkzeuge\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 gemacht werden, werden in der Datei 
\family typewriter
preferences
\family default
 gespeichert.
 Danach (das heißt wenn 
\family typewriter
preferences
\family default
 gefunden wird) wird die alte 
\family typewriter
lyxrc
\family default
 nicht mehr eingelesen und kann gelöscht werden.
 
\end_layout

\begin_layout Itemize
Wenn Sie mit dem Menüpunkt 
\family sans
Werkzeuge\SpecialChar \menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 eine Neukonfiguration von LyX durchführen, werden die dabei erzeugten Dateien
 in Ihrem privaten Konfigurationsverzeichnis 
\family typewriter
UserDir
\family default
 gespeichert.
 Das bedeutet, dass ab sofort etwaige neue Dokumentenklassen, die Sie in
 Ihrem Verzeichnis 
\family typewriter
UserDir/layouts
\family default
 gespeichert haben, im Feld 
\family sans
Dokumentklasse
\family default
 des Dialoges 
\family sans
Dokument
\family default
\SpecialChar \menuseparator

\family sans
Einstellungen
\family default
\SpecialChar \ldots{}
 erscheinen.
\end_layout

\begin_layout Itemize
Falls Sie irgendwelche Dateien für neue LaTeX-Dokumentenklassen in einem
 Verzeichnis installiert haben, das LaTeX über die Umgebungsvariable 
\family typewriter
TEX\SpecialChar \-
IN\SpecialChar \-
PUTS
\family default
 findet, können auch diese in LyX verwendet werden.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
vorausgesetzt, es gibt auch eine 
\family typewriter
.layout
\family default
-Datei dafür.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wenn Sie sich von einem LyX-FTP-Server eine aktuellere Version (oder zum
 Beispiel diese deutsche Version) der Dokumentation besorgt haben, sie aber
 nicht 
\emph on
offiziell
\emph default
 installieren können, da Sie keine Systemadministratorrechte haben, können
 Sie diese Dateien einfach nach 
\family typewriter
UserDir/doc
\family default
 kopieren, und sie werden automatisch über das 
\family sans
Hilfe
\family default
-Menü geöffnet.
\end_layout

\begin_layout Section
LyX mit mehreren Konfigurationen
\end_layout

\begin_layout Standard
Die hochgradige Konfigurierbarkeit von LyX durch das lokale Verzeichnis
 wird für diejenigen nicht ausreichend sein, die parallel mehrere unterschiedlic
he Konfigurationen verwenden wollen, zum Beispiel unterschiedliche Tastaturkürze
l und/oder Druckerkonfigurationen.
 Sie können dies durch das Anlegen von mehreren Konfigurationsverzeichnissen
 erreichen und LyX jeweils beim Start mitteilen, welches davon verwendet
 werden soll.
\end_layout

\begin_layout Standard
Indem Sie LyX mit der Option 
\family typewriter
-userdir
\family default
 
\family typewriter
\emph on
<verzeichnis>
\family default
\emph default
 starten, erreichen Sie, dass die Konfiguration aus diesem Verzeichnis anstelle
 des Standardverzeichnisses gelesen wird (das Standardverzeichnis ermitteln
 Sie, indem Sie LyX ohne diese Option starten).
 Falls das so angegebene Verzeichnis noch nicht existiert, fragt LyX genau
 wie beim ersten Start nach, ob es angelegt werden soll.
 Die Konfiguration in diesem Verzeichnis können Sie dann wie im Normalfall
 in LyX verändern, die Einstellungen im Standardverzeichnis werden aber
 nicht verändert -- beide Verzeichnisse sind völlig unabhängig.
 Anstelle der Kommandozeilenoption können Sie übrigens auch die Umgebungsvariabl
e 
\family typewriter
LYX_USERDIR_20x
\family default
 auf das zu verwendende Verzeichnis setzen.
\end_layout

\begin_layout Standard
Unterschiedliche Konfigurationsverzeichnisse bedeuten aber auch zusätzlichen
 Aufwand: Wenn Sie etwa eine neue Layoutdatei in 
\family typewriter
UserDir/layouts
\family default
 hinzufügen und diese für alle Konfigurationen sichtbar sein soll, müssen
 Sie sie in 
\emph on
allen
\emph default
 Verzeichnissen separat hinzufügen.
 Sie können das jedoch mit einem Trick umgehen: Nachdem LyX das neue UserDir
 angelegt hat, sind praktisch alle Unterverzeichnisse (siehe oben) leer.
 Sie können also all diese Verzeichnis durch einen symbolischen Link auf
 das entsprechende Verzeichnis im originalen 
\family typewriter
UserDir
\family default
 ersetzen.
 Lediglich mit dem Verzeichnis 
\family typewriter
doc
\family default
 müssen Sie vorsichtig sein, denn dort wird eine Datei durch das Konfigurationss
kript (
\family sans
Werkzeuge\SpecialChar \menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
) abgelegt, die konfigurationsabhängig ist.
\end_layout

\begin_layout Chapter
Der Dialog Werkzeuge
\family sans
\SpecialChar \menuseparator

\family default
Ei
\family sans
nstellungen
\end_layout

\begin_layout Section
Formate
\begin_inset CommandInset label
LatexCommand label
name "Formate"

\end_inset


\end_layout

\begin_layout Standard
Als ersten Schritt müssen Sie Ihre Dateiformate definieren, wenn das nicht
 bereits passiert ist.
 Dazu öffnen Sie 
\family sans
Werkzeuge\SpecialChar \menuseparator
Einstellungen\SpecialChar \menuseparator
Datei-Handhabung\SpecialChar \menuseparator
Dateiformate
\family default
 und klicken auf 
\family sans
Neu
\family default
.
 Das 
\family sans
Format
\family default
-Feld enthält den Namen, unter dem das Format im GUI identifiziert wird.
 Im Feld 
\family sans
Einsortieren
\begin_inset space \space{}
\end_inset

als
\family default
 steht der Name, mit dem das Format intern identifiziert wird.
 Außerdem muss eine 
\family sans
Dateiendung
\family default
 festgelegt werden.
 Diese drei Felder sind erforderlich.
 Zusätzlich kann ein 
\family sans
Tastenkürzel
\family default
 definiert werden.
 Zum Beispiel bedeutet 
\family sans
Strg+D
\family default
: 
\family sans
Ansicht\SpecialChar \menuseparator
DVI
\family default
.
\end_layout

\begin_layout Standard
Ein Format kann ein 
\family sans
Bearbeitungsprogramm
\family default
 und ein 
\family sans
Anzeigeprogramm
\family default
 haben.
 Am Beispiel von JPEG-Dateien steht bei mir in beiden Feldern 
\family sans
gimp
\family default
.
 Was bei Ihnen steht, hängt von der Software-Ausstattung Ihres PCs ab.
 Zum Definieren des Befehls können auch die vier Variablen aus dem nächsten
 Abschnitt benutzt werden.
 Das 
\family sans
Bearbeitungsprogramm
\family default
 wird aufgerufen, wenn Sie nach einem Rechtsklick auf ein Bild 
\family sans
Datei
\begin_inset space \space{}
\end_inset

extern
\begin_inset space \space{}
\end_inset

bearbeiten
\family default
 auswählen.
 
\end_layout

\begin_layout Standard
Wenn 
\family sans
Dokumentformat
\family default
 angekreuzt ist, weiß LyX, dass das Format für den Dokumentexport geeignet
 ist.
 Wenn dann auch noch ein geeigneter Konverter existiert (siehe Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "Konverter"

\end_inset

), wird das Format unter 
\family sans
Datei\SpecialChar \menuseparator
Exportieren
\family default
 erscheinen.
 Außerdem wird es im 
\family sans
Ansicht
\family default
-Menü erscheinen, wenn ein 
\family sans
Anzeigeprogramm
\family default
 angegeben wurde.
 Reine Grafikformate wie 
\family typewriter
png
\family default
 sollten diese Option nicht benutzen, dagegen aber Formate, die sowohl Vektorgra
fiken als auch Dokumente repräsentieren wie 
\family typewriter
pdf
\family default
.
\end_layout

\begin_layout Standard
Die Option 
\family sans
Vektorgrafik-Format
\family default
 sagt LyX, dass ein Format Vektorgrafiken ent\SpecialChar \-
halten kann.
 Diese Information wird dazu benutzt, um ein Zielformat für eingefügte Grafiken
 für den 
\family typewriter
pdflatex
\family default
-Export zu bestimmen.
 Eingefügte Grafiken müs\SpecialChar \-
sen nach 
\family typewriter
pdf
\family default
, 
\family typewriter
png
\family default
 oder 
\family typewriter
jpg
\family default
 konvertiert werden, weil 
\family typewriter
pdflatex
\family default
 keine anderen Grafikformate handhaben kann.
 Hat eine eingefügte Grafik bereits eines der Formate, wird sie nach pdf
 konvertiert, wenn 
\family sans
Vektorgrafik-Format
\family default
 angekreuzt ist, sonst nach 
\family typewriter
png
\family default
.
\end_layout

\begin_layout Section
Kopierer
\end_layout

\begin_layout Standard
Weil alle Konvertierungen im temporären Verzeichnis von LyX stattfinden,
 muss eine Datei manchmal geändert werden bevor sie ins temporäre Verzeichnis
 kopiert wird, damit die Konvertierung durchgeführt werden kann.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wenn die Datei beispielsweise auf andere Dateien mit relativen Pfaden verweist
 -- vielleicht Bilder -- und diese Pfade beim Kopieren ungültig werden.
\end_layout

\end_inset

 Das macht ein Kopierer: er kopiert eine Datei ins (oder vom) temporären
 Verzeichnis und ändert sie dabei.
\end_layout

\begin_layout Standard
Die Definitionen der Kopierer können vier Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$s
\family default
 ist das Systemverzeichnis von LyX (zum Beispiel 
\family typewriter
/usr/local/bin/
\begin_inset Newline linebreak
\end_inset

lyx
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$i
\family default
 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$o
\family default
 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$l
\family default
 ist der 
\emph on
LaTeX-Name
\emph default
.
 Dies sollte der Dateiname sein, den LaTeX im 
\family typewriter

\backslash
include
\family default
-Befehl benutzt.
 Er ist nur dann relevant, wenn die expor\SpecialChar \-
tier\SpecialChar \-
ten Dateien für den Befehl
 geeignet sind.
\end_layout

\begin_layout Standard
Kopierer können benutzt werden, um 
\emph on
fast
\emph default
 alles mit Ausgabedateien zu machen.
 Wenn Sie zum Beispiel 
\family typewriter
pdf
\family default
-Dateien in ein spezielles Verzeichnis kopieren wollen, können Sie ein Shell-Skr
ipt wie folgt schreiben:
\end_layout

\begin_layout LyX-Code
#!/bin/bash
\end_layout

\begin_layout LyX-Code
FROMFILE=$1
\end_layout

\begin_layout LyX-Code
TOFILE=`basename $2`
\end_layout

\begin_layout LyX-Code
cp $FROMFILE /home/you/pdf/$TOFILE
\end_layout

\begin_layout Standard
Speichern Sie das Skript ausführbar in Ihrem lokalen LyX-Verzeichnis --
 etwa 
\family typewriter
/home/you/lyx/scripts/pdfkopierer.sh
\family default
.
 Dann wählen Sie in 
\family sans
Werkzeuge\SpecialChar \menuseparator
Ein\SpecialChar \-
stel\SpecialChar \-
lun\SpecialChar \-
gen\SpecialChar \menuseparator
Datei-Handhabung\SpecialChar \menuseparator
Dateiformate
\family default
 das Format 
\family sans
PDF
\begin_inset space \space{}
\end_inset

(pdflatex)
\family default
 und tragen im Kopierer-Feld 
\family typewriter
pdfkopierer.sh $$i $$o
\family default
 ein.
\end_layout

\begin_layout Standard
Kopierer werden von LyX in vielen eigenen Konvertierungen benutzt.
 Wenn auf dem PC geeignete Programme installiert sind, wird LyX automatisch
 Kopierer für 
\family sans
HTML
\family default
 und 
\family sans
HTML
\begin_inset space \space{}
\end_inset

(MS
\begin_inset space \space{}
\end_inset

Word)
\family default
 installieren.
 Wenn diese Formate exportiert werden, 
\emph on
sieht
\emph default
 der Kopierer, dass nicht nur die Haupt-HTML-Datei, sondern auch verschiedene
 zugehörige Dateien (Stildateien, Bilder usw.) kopiert werden müssen.
 All diese Dateien werden in ein Unterverzeichnis des Verzeichnisses geschrieben
, in dem die LyX-Datei steht.
\begin_inset Foot
status open

\begin_layout Plain Layout
Kopierer können angepasst werden.
 Der optionale Parameter 
\family typewriter
-e
\family default
 kann eine durch Kommata getrennte Liste von Erweiterungen enthalten, die
 mitkopiert werden sollen.
 Wenn es fehlt, werden alle Dateien kopiert.
 Der Parameter 
\family typewriter
-t
\family default
 bestimmt die Namenserweiterung, die an den erzeugten Verzeichnisnamen angehängt
 werden soll.
 Standardmäßig ist es 
\family sans
Ly
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Xconv
\family default
, so dass die aus 
\family typewriter
Datei.lyx
\family default
 erzeugte HTML-Datei im Unterverzeichnis 
\family typewriter
Datei.html.Ly
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

Xconv
\family default
 landet.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Konverter
\begin_inset CommandInset label
LatexCommand label
name "Konverter"

\end_inset


\end_layout

\begin_layout Standard
Sie können eigene Konverter in 
\family sans
Werkzeuge\SpecialChar \menuseparator
Ein\SpecialChar \-
stel\SpecialChar \-
lun\SpecialChar \-
gen\SpecialChar \menuseparator
Datei-Handhabung\SpecialChar \menuseparator
Kon\SpecialChar \-
verter
\family default
 definieren.
 Dazu wählen aus 
\family sans
Von
\begin_inset space \space{}
\end_inset

Format
\family default
 und 
\family sans
In
\begin_inset space \space{}
\end_inset

Format
\family default
 jeweils eins aus, schreiben den benötigten Befehl ins Feld 
\family sans
Konverter
\family default
 und klicken auf 
\family sans
Hinzufügen
\family default
 rechts oben.
 Sie können im Befehl mehrere Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$s
\family default
 ist das Systemverzeichnis von LyX (zum Beispiel 
\family typewriter
/usr/local/bin/
\begin_inset Newline linebreak
\end_inset

lyx
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$i
\family default
 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$o
\family default
 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$b
\family default
 ist der Dateiname ohne Erweiterung (siehe Linux-Befehl 
\family typewriter
basename
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$p
\family default
 ist der Pfad zur Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$r
\family default
 ist der Pfad zur ursprünglichen Eingabedatei.
 Wenn eine Kette von Konvertern aufgerufen wird, weicht er von 
\family typewriter
$$p
\family default
 ab.
\end_layout

\begin_layout Standard
Ins Feld Zusatz-Flag können Sie folgende, durch Kommata getrennte, Flags
 schrei\SpecialChar \-
ben:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
latex
\family default
 Damit ein besonderer LaTeX-Lauf gestartet, der die LaTeX-Fehlermel\SpecialChar \-
dun\SpecialChar \-
gen
 von LyX verfügbar macht.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
needaux
\family default
 benötigt die LaTeX-Datei 
\family typewriter
xyz.aux
\family default
 zur Konvertierung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
xml
\family default
 Damit wird die Ausgabe im XML-Format gespeichert.
\end_layout

\begin_layout Standard
Die folgenden Flags sind keine richtigen, weil sie ein Argument der Form
 
\family typewriter
key=value
\family default
 benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
parselog
\family default
 Wenn das gesetzt ist, wird der Standardfehler des Konverters in die Datei
 
\family typewriter
infile.out
\family default
 umgeleitet, und das Skript wird so ausgeführt: 
\family typewriter
script
\begin_inset space \space{}
\end_inset

<
\begin_inset space \space{}
\end_inset

infile.out
\begin_inset space \space{}
\end_inset

>
\begin_inset space \space{}
\end_inset

infile.log
\family default
.
 Das Argument kann 
\family typewriter
$$s
\family default
 ent\SpecialChar \-
halten.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultdir
\family default
 ist der Name des Verzeichnisses, in dem der Konverter die erzeugten Dateien
 ablegen soll.
 LyX wird das Verzeichnis nicht anlegen und auch nichts hineinkopieren,
 aber dieses Verzeichnis an seinen Bestimmungs\SpecialChar \-
ort kopieren.
 Das Argument darf 
\family typewriter
$$b
\family default
 enthalten, was durch die Basisnamen von Ein- oder Ausgabedatei ersetzt
 wird, wenn das Verzeichnis kopiert wird.
\begin_inset Newline newline
\end_inset

Beachten Sie, das 
\family typewriter
resultdir
\family default
 und 
\family typewriter
usetempdir
\family default
 zusammen keinen Sinn machen.
 Wenn das erste definiert wurde, wird das zweite ignoriert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultfile
\family default
 ist der Name der Ausgabedatei und darf 
\family typewriter
$$b
\family default
 enthalten.
 Er wird nur zusammen mit 
\family typewriter
resultdir
\family default
 benutzt und ist auch da nur optional.
 Wenn er nicht angegeben wird, wird 
\family typewriter
index
\family default
 benutzt.
\end_layout

\begin_layout Standard
Keines dieser Flags wird zur Zeit in einem Konverter benutzt, der zusammen
 mit LyX installiert wird.
\end_layout

\begin_layout Standard
Sie müssen nicht für alle Formate, zwischen denen Sie konvertieren wollen,
 Konverter definieren.
 Zum Beispiel gibt es keinen Konverter von LyX nach PostScript, aber LyX
 wird PostScript exportieren.
 Dies geschieht, indem zunächst eine LaTeX-Datei erzeugt wird -- dafür wird
 auch kein Konverter benötigt --, die dann mit dem Konverter von LyX nach
 DVI in eine DVI-Datei konvertiert wird, die schließlich nach PostScript
 konvertiert wird.
 LyX findet solche Konverter-Ketten automatisch und wird immer die kürzeste
 finden.
\end_layout

\begin_layout Standard
Trotzdem können Sie Mehrfachkonversionen zwischen Dateiformaten definieren.
 Zum Beispiel liefert die Standardkonfiguration von LyX drei Möglichkeiten,
 um von LaTeX nach PDF zu konvertieren:
\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
pdflatex
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
ps2pdf
\family default
 über DVI und PostScript
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
dvipdfm
\family default
 über DVI.
\end_layout

\begin_layout Standard
Um andere Ketten zu definieren, müssen Sie andere Ziel-
\emph on
Dateiformate
\emph default
 definieren, wie in Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "Formate"

\end_inset

 beschrieben.
 Zum Beispiel enthält die Standardkonfiguration drei Formate für pdf-Dateien,
 die 
\family sans
pdf
\family default
 für 
\family typewriter
ps2pdf
\family default
, 
\family sans
pdf2
\family default
 für 
\family typewriter
pdflatex
\family default
 und 
\family sans
pdf3
\family default
 für 
\family typewriter
dvipdfm
\family default
 heißen.
\end_layout

\begin_layout Chapter
Internationales LyX
\begin_inset CommandInset label
LatexCommand label
name "cha:Internationales-LyX"

\end_inset


\end_layout

\begin_layout Standard

\emph on
Anmerkung des Übersetzers: Dieses Kapitel behandelt zwei Themenbereiche.
 Einmal wird in
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Eine-andere-Sprache"

\end_inset

 und
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Tastaturkürzel-für-andere"

\end_inset

 erklärt, wie man LyX mitteilt, dass man in einer fremdsprachlichen Umgebung
 arbeitet.
 Der überwiegende Rest des Kapitels erläutert, wie man LyX an eine neue
 Sprache anpasst, das heißt wie man es übersetzt.
 Da diese Arbeiten für eine deutsche Umgebung bereits erledigt wurden, dürfte
 dieser Teil des Kapitels für die Leser dieser Übersetzung weitgehend uninteress
ant sein.
 Die letzten beiden Abschnitte, 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Internationale-Tastaturbelegung"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Internationale-Tastaturtabellen"

\end_inset

, waren bei der Übersetzung noch nicht ganz up to date.
 (Leif Albers)
\end_layout

\begin_layout Standard
LyX kann mit übersetzten Versionen seiner Benutzerschnittstelle arbeiten.
 Als dieser Text erstellt wurde, waren über den normalen englischen Text
 Anpassungen für 23 Sprachen Bestandteil der LyX-Distribution.
 Die von Ihnen benutze Sprache zeigt Ihnen der Befehl 
\family typewriter
locale
\family default
.
 (Für weitere Informationen über 
\emph on
locale
\emph default
-Definitionen ist die Manpage 
\emph on
locale(5)
\emph default
 ein guter Startpunkt.)
\end_layout

\begin_layout Standard
Bitte beachten Sie, dass diese Übersetzungen zwar funktionieren, aber oft
 ein paar Einschränkungen unterliegen.
 Insbesondere wurde das Design der Popup-Menüs auf den englischen Text zugeschni
tten.
 Das bedeutet, dass der übersetzte Text an einigen Stellen mehr Platz benötigt
 als dort zur Verfügung steht.
 Dies ist natürlich nur ein Darstellungsproblem und schränkt nicht die Funktions
weise von LyX ein.
 Sie werden auch feststellen, dass einige Übersetzungen nicht für alle Menüpunkt
e Tastenkürzel definieren.
 Manchmal stehen einfach nicht genügend freie Buchstaben zur Verfügung,
 manchmal hatte der Übersetzer einfach bisher keine Zeit, sich darum zu
 kümmern.
\end_layout

\begin_layout Standard
Wir werden versuchen, diese Dinge in einer späteren Version zu korrigieren.
\end_layout

\begin_layout Section
Eine andere Sprache für die Schnittstelle auswählen
\begin_inset CommandInset label
LatexCommand label
name "sec:Eine-andere-Sprache"

\end_inset


\end_layout

\begin_layout Standard
Normalerweise erfolgt die gesamte Benutzerführung in der Sprache, die in
 der Umgebungsvariablen 
\family typewriter
LANG
\family default
 gesetzt wurde.
 Um eine andere Sprache auszuwählen, müssen Sie die Umgebungsvariable 
\family typewriter
LANG
\family default
 ändern.
 Benutzen Sie 
\family typewriter
setenv LANG xx
\family default
 in csh-kompatiblen und 
\family typewriter
export LANG=xx
\family default
 in sh-kompatiblen Shells.
 Ersetzen Sie dabei 
\family typewriter
xx
\family default
 durch den Zwei-Buchstaben-Code der Sprache, die Sie verwenden möchten --
 zum Beispiel 
\family typewriter
de
\family default
 für deutsch.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Noch besser wäre es, 
\family typewriter
LANG
\family default
 auf den Wert de_DE zu setzen, da andere Programme (zum Beispiel KDE) nach
 DE suchen, oder sogar den vollständigen Wert de_DE.iso88591
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Normalerweise werden Sie den passenden Befehl in eine der Startdateien einfügen,
 also zum Beispiel in 
\family typewriter
~/.Xsession
\family default
, 
\family typewriter
~/.xinitrc
\family default
 oder 
\family typewriter
~/.bashrc
\family default
, damit die übersetzte Schnittstelle automatisch benutzt wird.
 
\end_layout

\begin_layout Standard
Beachten Sie, dass all dies 
\emph on
nicht
\emph default
 funktioniert, wenn Sie LyX mit der Option 
\family typewriter
--disable\SpecialChar \-
nls
\family default
 kompiliert haben.
\end_layout

\begin_layout Section
Tastaturkürzel für andere Sprachen anpassen
\begin_inset CommandInset label
LatexCommand label
name "sec:Tastaturkürzel-für-andere"

\end_inset


\end_layout

\begin_layout Standard
Ein Hauptgrund für Inkonsistenzen in übersetzten LyX-Versionen ist die Tatsache,
 dass alle Tastaturkürzel für die Menüfunktionen ursprünglich auf den englischen
 Text zugeschnitten wurden.
 Das heißt, unabhängig vom tatsächlichen Menüeintrag wird das Kürzel 
\family sans
Strg+Umschalt+N
\family default
 das Popup 
\family typewriter
new-file-from-template
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family typewriter
new-file-from-template
\family default
 ist der LyX-interne Befehl, der das Menü 
\family sans
Datei\SpecialChar \menuseparator
Neu
\begin_inset space ~
\end_inset

von
\begin_inset space ~
\end_inset

Vorlage
\family default
\SpecialChar \ldots{}
 auswählt.
\end_layout

\end_inset


\family default
 öffnen.
\end_layout

\begin_layout Standard
Es ist allerdings einfach, dies zu ändern, da alle Tastenkürzel für die
 Menüfunktionen in einer einzigen Datei definiert werden, in 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/bind/menus.bind
\family default
.
 Jeder Anwender kann eine eigene Version dieser Datei in sein privates LyX-Verze
ichnis (
\family typewriter
~/.lyx/bind
\family default
) kopieren und verändern.
 Diese wird anstelle der systemweiten Datei eingelesen.
\end_layout

\begin_layout Standard
In diesem privaten Verzeichnis kann man die Definitionen einfach ändern,
 zum Beispiel von 
\family sans
Strg+Umschalt+N
\family default
 nach 
\family sans
Strg+D+V
\family default
 (für 
\family sans
Datei\SpecialChar \menuseparator
Neu
\begin_inset space ~
\end_inset

von
\begin_inset space ~
\end_inset

Vorlage
\family default
\SpecialChar \ldots{}
).
 Für einige Sprachen existieren schon angepasste Versionen 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/bind/
\series bold
xx
\series default
_me\SpecialChar \-
nus.bind
\family default
 (
\family typewriter
\series bold
xx
\family default
\series default
 bezeichnet den Code der Sprache).
 Diese werden von LyX automatisch benutzt, sofern sie existieren (und Ihre
 
\emph on
locale
\emph default
 auf 
\family typewriter
$LANG=
\series bold
xx
\family default
\series default
 gesetzt wurde).
\end_layout

\begin_layout Standard
Sie müssen darauf achten, dass neue Definitionen nicht mit anderen, vorangehende
n Definitionen kollidieren.
 Beispielsweise würde die oben genannte Definition von 
\family sans
Strg+D+V
\family default
 für Benutzer, die 
\family typewriter
emacs.bind
\family default
 verwenden, eine Fehlermeldung erzeugen, denn in 
\family typewriter
emacs.bind
\family default
 wird 
\family sans
Strg+D
\family default
 bereits als 
\family typewriter
word-delete-forward
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family typewriter
word-delete-forward
\family default
 löscht das Wort rechts vom Cursor.
\end_layout

\end_inset


\family default
 definiert.
 
\end_layout

\begin_layout Standard
In LyX Version 1.0 werden die übersetzten Namen der Hauptmenüs (die in den
 
\family typewriter
po
\family default
-Dateien stehen) für den Tastendefinitions-Mechanismus verwendet -- deshalb
 müssen auch in 
\family typewriter
menus.bind
\family default
 die 
\emph on
übersetzten
\emph default
 Menünamen verwendet werden.
\end_layout

\begin_layout Section
LyX übersetzen
\end_layout

\begin_layout Subsection
Die Benutzerschnittstelle übersetzen (Textmeldungen)
\end_layout

\begin_layout Standard
LyX verwendet die GNU-gettext-Bibliothek, um die Internationalisierung der
 Benutzerschnittstelle zu verwalten.
 Um LyX dazu zu bringen, in allen Menüs und Dialog-Boxen Ihre Lieblingssprache
 zu verwenden, müssen Sie eine 
\family typewriter
po
\family default
-Datei für diese Sprache erstellen.
 Anschließend müssen Sie daraus eine 
\family typewriter
mo
\family default
-Datei erzeugen und diese installieren.
 Eine umfassende Anleitung dazu finden Sie in der Dokumentation für GNU
 gettext
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Natürlich nur auf englisch.
 Die Veränderungen, die an der 
\family typewriter
po
\family default
-Datei durchgeführt werden müssen, sind allerdings recht intuitiv.
\end_layout

\end_inset

.
 Kurz gesagt müssen folgende Veränderungen durchgeführt werden (
\family typewriter
\series bold
xx
\family default
\series default
 bezeichnet den Sprachencode der neuen Sprache):
\end_layout

\begin_layout Itemize
Kopieren Sie die Datei 
\family typewriter
lyx.pot
\family default
 in das Verzeichnis der .po-Dateien.
 Benennen Sie anschließend die Datei in 
\family typewriter
\series bold
xx
\series default
.po
\family default
 um.
 (Falls 
\family typewriter
lyx.pot
\family default
 nicht existiert, kann sie mit dem Befehl 
\family typewriter
make
\begin_inset space \space{}
\end_inset

lyx.pot
\family default
 neu erzeugt werden.)
\end_layout

\begin_layout Itemize
Editieren Sie 
\family typewriter
xx.po
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Für diese Aufgabe gibt es spezielle Programme, wie 
\family typewriter
Poedit
\family default
 (für alle Plattformen) oder 
\family typewriter
KBabel
\family default
 (für KDE).
 
\family typewriter
Emacs
\family default
 hat ebenfalls einen Modus, der Sie bei dieser Arbeit unterstützt.
\end_layout

\end_inset


\family default
.
 Für einige Menü- und Widgetfunktionen gibt es Tastenkürzel, die ebenfalls
 übersetzt werden sollten.
 Diese Tasten werden mit '
\family typewriter
|
\family default
' markiert und sollten passend mitübersetzt werden.
 Es gibt ein Prolog-Programm namens 
\family typewriter
scgen.pl
\family default
, das sich im Quellverzeichnis in 
\family typewriter
LYX\SpecialChar \-
SOURCE\SpecialChar \-
DIR/development/tools/
\family default
 befindet.
 Vielleicht hilft es Ihnen bei der Bestimmung der Tastenkürzel.
 Beachten Sie, dass XForms (zumindest die Version 0.86) nur 7-Bit-Zeichen
 als Tastenkürzel verarbeiten kann.
\begin_inset Newline newline
\end_inset

Sie sollten auch das Informationsfeld am Anfang der neuen po-Datei ausfüllen
 (mit Ihrer EMail-Adresse, usw.), damit Sie für andere Leute erreichbar sind,
 die Ihnen Vorschläge oder unterhaltsame Flames schicken möchten.
\end_layout

\begin_layout Itemize
Erzeugen Sie in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

LYX-SOURCE-DIR/po/lyx.pot
\end_layout

\end_inset

 mit dem Befehl 
\family typewriter
make up\SpecialChar \-
date-gmo
\family default
 die Datei 
\family typewriter
\series bold
xx
\series default
.gmo
\family default
.
\end_layout

\begin_layout Itemize
Installieren Sie die 
\family typewriter
gmo
\family default
-Datei mit dem Befehl 
\family typewriter
su -c 'make install'
\family default
.
\end_layout

\begin_layout Standard
Um eine neue 
\family typewriter
po
\family default
-Datei zu der LyX-
\emph on
Distribution
\emph default
 hinzuzufügen, müssen eine Reihe von Dateien (Konfigurations-Skripts und
 mehr) verändert werden.
 Aber dank der gettext-Bibliothek ist ein Einbinden in den LyX-Quellcode
 für den Anwender unnötig.
\end_layout

\begin_layout Standard
Wenn Sie eine Übersetzung für eine Sprache erstellt haben, die LyX zur Zeit
 noch nicht unterstützt, sollten Sie uns ruhig ein Patch mit Ihrer Datei
 zusenden.
 Wie man ein Patch erstellt, erfahren Sie in der README-Datei im Verzeichnis
 
\family typewriter
LYX-SOURCE-DIR/po/
\family default
.
\end_layout

\begin_layout Subsection
Die Dokumentation übersetzen
\end_layout

\begin_layout Standard

\emph on
[Anmerkung des Übersetzers:
\emph default
 wenn 
\emph on
Sie die Dokumentation übersetzen wollen, benutzen Sie als Vorlage auf jeden
 Fall das englische Original.
 Übersetzungen -- diese eingeschlossen -- sind oft nicht ganz auf dem neuesten
 Stand.
 -LA]
\end_layout

\begin_layout Standard
Auch die Online-Dokumentation (im 
\family sans
Hilfe
\family default
-Menü) kann (und sollte!) übersetzt werden.
 Wenn übersetzte Versionen verfügbar sind
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Derzeit (November 2006) sind praktisch alle Texte bis auf 
\emph on
LaTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X-Konfiguration
\emph default
 ins Deutsche übersetzt.
 Andere Sprachen sind in Arbeit.
 Die Bibliothek an übersetzten Texten wächst ständig.
\end_layout

\end_inset

 und die 
\emph on
locale
\emph default
 entsprechend gesetzt wurde, werden diese automatisch von LyX benutzt.
 Zur Zeit sind Übersetzungen in etwa 20 Sprachen vorhanden.
 LyX sucht nach übersetzten Versionen in 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/doc/
\series bold
xx
\series default
_DocName.lyx
\family default
, wobei wie immer 
\family typewriter
\series bold
xx
\family default
\series default
 für das entsprechende Sprach\SpecialChar \-
kür\SpecialChar \-
zel steht, das in der Umgebungsvariablen
 
\family typewriter
LANG
\family default
 gesetzt wird.
\end_layout

\begin_layout Standard
Falls solche Dateien nicht existieren, wird die englische Version verwendet.
 Auch die übersetzten Versionen müssen (bis auf das 
\family typewriter
\series bold
xx
\series default
_
\family default
) den gleichen (englischen) Dateinamen (im Beispiel oben 
\family typewriter
DocName
\family default
) tragen wie die englischen Originale.
 Wenn Sie gerne die Dokumentation übersetzen möchten (übrigens ein guter
 Weg, um die Originale Korrektur zu lesen!), hier ein paar Tipps, die Ihnen
 möglicherweise etwas Arbeit ersparen:
\end_layout

\begin_layout Itemize
Werfen Sie einen Blick auf die Seiten des Übersetzungsteams auf der Homepage
 des LyX-Entwickler-Teams: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.devel.lyx.org
\end_layout

\end_inset

.
 Dort erfahren Sie, welche Texte bereits in Ihre Sprache übersetzt sind,
 auch sehen Sie, ob jemand (und wenn ja, wer) die Übersetzungsaktivitäten
 koordiniert.
\end_layout

\begin_layout Standard
Wenn Sie dann mit der eigentlichen Übersetzungsarbeit beginnen, sind hier
 einige Tipps, die Ihnen vielleicht helfen, einige Schwierigkeiten zu überwinden
:
\end_layout

\begin_layout Itemize
Machen Sie im Dokumentationsteam mit! Informationen dazu gibt es in 
\family sans
Hilfe\SpecialChar \menuseparator
Einführung
\family default
.
 Dies ist übrigens das erste Dokument, das Sie übersetzen sollten.
\end_layout

\begin_layout Itemize
Machen Sie sich mit den typographischen Konventionen der Sprache vertraut,
 in die Sie übersetzen möchten.
 Typographie ist eine alte Kunst, und in vielen Teilen der Welt wurden verschied
ene Konventionen eingeführt.
 Auch sollten Sie die typographische Terminologie in Ihrem Land lernen.
 Eine eigene Terminologie würde nur die Leser verwirren.
 
\emph on
(Warnung: Typographie macht süchtig!)
\end_layout

\begin_layout Itemize
Legen Sie eine Kopie des Originaldokumentes an.
 Von Zeit zu Zeit wird die Originalversion erneuert.
 Sie können beispielsweise CVSweb auf der LyX-Entwickler-Seite im WWW verwenden
 um zu sehen, was sich verändert hat.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Alternativ können Sie auch lokal eine Kopie des (englischen) Ausgangstextes
 aufbewahren und diese dann mit der neuen Version vergleichen (zum Beispiel
 mit dem Befehl 
\family typewriter
diff
\family default
).
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Wann immer Sie einen Fehler im Originaltext entdecken, korrigieren Sie ihn
 und teilen dem Rest des Dokumentationsteams Ihre Veränderungen mit.
 (Sie haben nicht vergessen, dem Dokumentationsteam beizutreten, oder?)
 
\emph on
Auch die Originaldokumentation ist nicht komplett.
\end_layout

\begin_layout Section
Internationale Tastaturbelegung
\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturbelegung"

\end_inset


\end_layout

\begin_layout Subsection
Eigene Tastaturtabellen definieren: das 
\emph on
Keymap
\emph default
-Dateiformat
\end_layout

\begin_layout Standard
Sehen wir uns einmal die 
\emph on
Keymap
\emph default
-Datei ein wenig näher an.
 Es handelt sich um eine ASCII-Datei, in der folgendes definiert wird:
\end_layout

\begin_layout Itemize
Taste-Taste- oder Taste-String-Transformationen
\end_layout

\begin_layout Itemize

\emph on
Tote
\emph default
 Tasten -- sogenannte 
\emph on
dead keys
\end_layout

\begin_layout Itemize
Ausnahmen für tote Tasten.
\end_layout

\begin_layout Standard
Zur Definition einer Taste-Taste- oder Taste-String-Transformation dient
 folgender Befehl:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmap Taste Ausgabe
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 die zu übersetzende Taste bezeichnet und 
\family typewriter
Ausgabe
\family default
 die Taste oder den String, der dafür in das Dokument eingefügt werden soll.
 Eine tote Taste definiert man mit:
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmod
\family default
 
\family typewriter
Taste Tote-Taste
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 wieder eine Taste auf der Tastatur bezeichnet und 
\family typewriter
Tote-Taste
\family default
 der Name einer toten Taste ist.
 LyX unterstützt folgende toten Tasten (Abkürzungen in Klammern):
\end_layout

\begin_layout Quotation

\emph on
Name
\begin_inset space \hfill{}
\end_inset

Beispiel
\end_layout

\begin_layout Quotation
acute (acu)
\begin_inset space \hfill{}
\end_inset

áéíóú
\end_layout

\begin_layout Quotation
grave (gra)
\begin_inset space \hfill{}
\end_inset

àèìòù
\end_layout

\begin_layout Quotation
macron (mac)
\begin_inset space \hfill{}
\end_inset

 ō
\end_layout

\begin_layout Quotation
tilde (til)
\begin_inset space \hfill{}
\end_inset

ñÑ
\end_layout

\begin_layout Quotation
underbar (underb)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
b o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
cedilla (ced)
\begin_inset space \hfill{}
\end_inset

çÇ
\end_layout

\begin_layout Quotation
underdot (underd)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
d o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
circumflex (circu)
\begin_inset space \hfill{}
\end_inset

âêîôû
\end_layout

\begin_layout Quotation
circle (circl)
\begin_inset space \hfill{}
\end_inset

ÅůŮ
\end_layout

\begin_layout Quotation
tie (tie)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
t oo
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
breve (bre)
\begin_inset space \hfill{}
\end_inset

ă
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
u o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
caron (car)
\begin_inset space \hfill{}
\end_inset

čšž
\end_layout

\begin_layout Quotation
hungarian umlaut (hug)
\begin_inset space \hfill{}
\end_inset

őű
\end_layout

\begin_layout Quotation
umlaut (uml)
\begin_inset space \hfill{}
\end_inset

äöü
\end_layout

\begin_layout Quotation
dot (dot)
\begin_inset space \hfill{}
\end_inset

ż
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
.s
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Da es auf vielen internationalen Tastaturen Ausnahmen dafür gibt, wie eine
 bestimmte tote Taste das folgende Zeichen verändern soll, können diese
 definiert werden, und zwar mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
Tote-Taste Taste Ausgabe
\end_layout

\begin_layout Standard
Zum Beispiel soll caron-o auf einer slowakischen Tastatur ein circumflex-o
 erzeugen.
 Dies erreicht man mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
caron o "
\backslash
^o"
\end_layout

\begin_layout Standard
Auch müssen für die Buchstaben i und j Ausnahmen definiert werden, um den
 Punkt zu löschen, bevor ein Akzent eingefügt wird.
 Ich werde dies beizeiten ändern, hatte aber bisher noch keine Zeit dazu.
\end_layout

\begin_layout Standard
Ach so, zur Definition der Ausgabe: Der Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 ist ein Sonderzeichen.
 Um ihn einzugeben, muss man einen doppelten Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 eingeben.
 Auch das Anführungszeichen 
\begin_inset Quotes gld
\end_inset

"
\begin_inset Quotes grd
\end_inset

 und das Doppelkreuz 
\begin_inset Quotes gld
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes grd
\end_inset

 haben eine andere Bedeutung.
 
\family typewriter
#
\family default
 bezeichnet einen Kommentar, Anführungszeichen markieren den Anfang und
 das Ende eines Strings (das heißt einer LaTeX-Befehlssequenz).
 Um diese Zeichen einzugeben, muss ein Backslash vorangestellt werden (also:
 
\family typewriter

\backslash
"
\family default
 und 
\family typewriter

\backslash
#
\family default
).
 Wenn Sie eine funktionierende Keymap-Datei für eine neue Sprache angefertigt
 haben, mailen Sie diese bitte an das Entwickler-Team, damit sie in die
 nächste Distribution integriert werden kann.
\end_layout

\begin_layout Standard
In Zukunft werden auch noch folgende Befehle unterstützt:
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kinclude Dateiname
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
bindet eine andere Datei ein 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kprog
\family default
 
\family typewriter
Programm
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
 definiert ein externes Keymap-Programm 
\end_layout

\begin_layout Standard
Auch sollte es die 
\family typewriter
lyxrc-D
\family default
atei nach Voreinstellungen durchsuchen (zum Beispiel nach einer Option 
\family typewriter

\backslash
kinclude
\family default
, um eine Standardtastatur zu verwenden).
\end_layout

\begin_layout Section
Internationale Tastaturtabellen: 
\emph on
Keymaps
\emph default

\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturtabellen"

\end_inset


\end_layout

\begin_layout Standard
Die nächsten beiden Abschnitte beschreiben detailliert die Syntax der 
\family typewriter
.kmap
\family default
- und 
\family typewriter
.cdef
\family default
-Dateien.
 Diese Abschnitte sollten Ihnen dabei helfen, Ihre eigene Tastaturtabelle
 zu entwerfen, wenn die vorhandenen nicht ganz Ihren Bedürfnissen entsprechen.
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.kmap
\family default
-Datei
\begin_inset CommandInset label
LatexCommand label
name "sub:Die-.kmap-Datei"

\end_inset


\end_layout

\begin_layout Standard
Eine 
\family sans
\shape up
.
\family typewriter
kmap
\family default
\shape default
-Datei transformiert gedrückte Tasten zu Buchstaben oder Strings (Zeichenketten)
 -- es definiert ein 
\emph on
keyboard mapping
\emph default
.
 Im Folgenden werden die Schlüsselwörter 
\family typewriter
kmap
\family default
, 
\family typewriter
kmod
\family default
, 
\family typewriter
kxmod
\family default
 und 
\family typewriter
kcomb
\family default
 beschrieben.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmap
\family default
\shape default
 Transformiere einen Buchstaben zu einem String
\end_layout

\begin_layout LyX-Code

\backslash
kmap 
\family roman
\emph on
Zeichen Ausgabe
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert, dass 
\emph on
Zeichen
\emph default
 zu 
\emph on
Ausgabe
\emph default
 transformiert werden soll.
 Dabei müssen in 
\emph on
Ausgabe
\emph default
 die Zeichen Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und Anführungszeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 mit einem vorangehenden Backslash versehen werden.
 
\end_layout

\begin_layout Standard
Als Beispiel ein Ausdruck, der das Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
/
\family default

\begin_inset Quotes grd
\end_inset

 ausgibt, wenn die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes grd
\end_inset

 gedrückt wurde:
\end_layout

\begin_layout LyX-Code

\backslash
kmap & /
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmod
\family default
\shape default
 Spezifiziere ein Akzentzeichen 
\end_layout

\begin_layout LyX-Code

\backslash
kmod 
\family roman
\emph on
Zeichen Akzent erlaubt
\end_layout

\begin_layout Standard
Dieser Ausdruck wird dafür sorgen, dass 
\emph on
Zeichen
\emph default
 als ein bestimmter 
\emph on
Akzent
\emph default
 interpretiert wird, und zwar bei allen Zeichen, die in 
\emph on
erlaubt
\emph default
 aufgeführt sind.
 Dies ist der Mechanismus toter Tasten 
\emph on
(dead keys).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Der Ausdruck 
\emph on
tote
\emph default
 
\emph on
Taste
\emph default
 kommt daher, dass diese Taste allein kein Zeichen erzeugt, aber, gefolgt
 von einer anderen Taste, akzentuierte Zeichen erzeugt.
 Zum Beispiel kann auf diese Weise é
\begin_inset Quotes grd
\end_inset

 erzeugt werden.
\end_layout

\end_inset


\emph default
 Wenn Sie die Taste 
\emph on
Zeichen
\emph default
 drücken, gefolgt von einem Zeichen, das 
\emph on
nicht
\emph default
 in 
\emph on
erlaubt
\emph default
 aufgeführt wurde, werden einfach beide Zeichen einzeln ausgegeben.
\end_layout

\begin_layout Standard
Der folgende Ausdruck definiert, dass die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes grd
\end_inset

 der circumflex-Akzent wird, wenn er von einem der Buchstaben a, e, i, o,
 u, A, E, I ,O oder U gefolgt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kmod ^ circumflex aeiouAEIOU
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kxmod
\family default
 Definiere eine Ausnahme zu einem Akzentzeichen
\end_layout

\begin_layout LyX-Code

\backslash
kxmod  
\family roman
\emph on
Akzent Zeichen Ausgabe
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert eine Ausnahme für die Wirkung, die 
\emph on
Akzent
\emph default
 in Verbin\SpecialChar \-
dung mit 
\emph on
Zeichen
\emph default
 haben soll.
 Dabei muss 
\emph on
Akzent
\emph default
 vorher mit Hilfe einer 
\family typewriter

\backslash
kmod
\family default
-Zeile einer Taste zugewiesen worden sein.
 Wenn Sie die Sequenz 
\emph on
Akzent, Zeichen
\emph default
 drücken, wird 
\emph on
Ausgabe
\emph default
 produziert.
 Falls solch eine Definition 
\emph on
nicht
\emph default
 existiert, und Sie 
\emph on
Akzent, Zeichen
\emph default
 eingeben, erhalten Sie das 
\emph on
Zeichen
\emph default
 -- akzentuiert.
\end_layout

\begin_layout Standard
Der folgende Ausdruck sorgt dafür, dass LaTeX bei einem 
\begin_inset Quotes gld
\end_inset

i
\begin_inset Quotes grd
\end_inset

 mit circumflex den I-Punkt entfernt, bevor das Akzentsymbol eingefügt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kxmod circumflex i "
\backslash

\backslash
^{
\backslash

\backslash
i}"
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kcomb
\family default
 Kombiniere zwei Akzentsymbole
\end_layout

\begin_layout LyX-Code

\backslash
kcomb 
\family roman
\emph on
Akzent1 Akzent2 erlaubt
\end_layout

\begin_layout Standard
Hier wird es ziemlich esoterisch.
 Dieser Ausdruck erlaubt die Kombination der Effekte von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 (in dieser Reihenfolge!) bei allen 
\emph on
erlaubten
\emph default
 Zei\SpecialChar \-
chen.
 Die Bedeutungen von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 müssen zuvor mit Hilfe von 
\family typewriter

\backslash
kmod
\family default
 definiert worden sein.
\end_layout

\begin_layout Standard
Folgendes Beispiel aus der Datei 
\family typewriter
greek.kmap
\family default
:
\end_layout

\begin_layout LyX-Code

\backslash
kmod ; acute aeioyvhAEIOYVH 
\end_layout

\begin_layout LyX-Code

\backslash
kmod : umlaut iyIY 
\end_layout

\begin_layout LyX-Code

\backslash
kcomb acute umlaut iyIY
\end_layout

\begin_layout Standard
Diese Zeilen erlauben es, 
\begin_inset Quotes gld
\end_inset


\family typewriter
;:i
\family default

\begin_inset Quotes grd
\end_inset

 einzugeben und auf diese Weise 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'{
\backslash
"{i}}
\family default

\begin_inset Quotes grd
\end_inset

 zu erzeugen (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'{
\backslash
"{i}}
\end_layout

\end_inset

).
 In diesem Fall löscht die Backspace-Taste das letzte gedrückte Zei\SpecialChar \-
chen.
 Wenn Sie also 
\family typewriter
;:
\family default
 
\family sans
Backspace
\family default
 
\family typewriter
i
\family default
 eingeben, erhalten Sie 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'(i)
\family default

\begin_inset Quotes grd
\end_inset

 (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'i
\end_layout

\end_inset

).
 
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.cdef
\family default
-Datei
\end_layout

\begin_layout Standard
Nachdem LyX die 
\family typewriter
.kmap
\family default
-Datei verarbeitet hat, erklärt eine 
\family typewriter
.cdef
\family default
-Datei, wie die einzelnen Symbole im gegenwärtigen Zeichensatz dargestellt
 werden sollen.
 Die LyX-Dis\SpecialChar \-
tri\SpecialChar \-
bu\SpecialChar \-
tion enthält wenigstens die Dateien 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

iso8859-1.cdef
\end_layout

\end_inset

 und 
\family typewriter
\shape up
iso8859-
\begin_inset Newline linebreak
\end_inset

2.cdef
\family default
\shape default
.
\end_layout

\begin_layout Standard
Generell besteht eine 
\family typewriter
.
\shape up
cdef
\family default
\shape default
-Datei aus einer Reihe von Deklarationen der folgenden Form:
\end_layout

\begin_layout LyX-Code

\family roman
\emph on
Position_im_Zeichensatz String
\end_layout

\begin_layout Standard
Um beispielsweise dem String (
\emph on
Ausgabe
\emph default
 im vorigen Abschnitt) 
\begin_inset Quotes gld
\end_inset


\family typewriter
'{e}
\family default

\begin_inset Quotes grd
\end_inset

 das ent\SpecialChar \-
spre\SpecialChar \-
chen\SpecialChar \-
de Zeichen im ISO-8859-1 Zeichensatz (233) zuzuweisen, benutzt
 man folgenden Ausdruck:
\end_layout

\begin_layout LyX-Code
233 "
\backslash

\backslash
'{e}"
\end_layout

\begin_layout Standard
Wieder müssen den Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 ein Backslash vorangestellt werden.
 Beachten Sie, dass es durchaus möglich ist, dass dasselbe Zeichen (sinnvoll)
 zwei verschiedene Strings repräsentieren kann.
 Zum Beispiel in 
\family typewriter
i
\shape up
so-8859-7.cdef
\family default
\shape default
 gibt es die Zeilen:
\end_layout

\begin_layout LyX-Code
192 "
\backslash

\backslash
'{
\backslash

\backslash

\backslash
"{i}}"
\begin_inset Newline newline
\end_inset

192 "
\backslash

\backslash

\backslash
"{
\backslash

\backslash
'{i}}"
\end_layout

\begin_layout Standard
Wenn LyX kein passendes Zeichen für einen String finden kann, der durch
 eine Tastensequenz erzeugt wurde, wird es versuchen, falls der String wie
 ein akzentuierter Buchstabe aussieht, auf dem Bildschirm den Buchstaben
 mit Akzent selbst zu zeichnen.
\end_layout

\begin_layout Subsection
Tote Tasten definieren
\end_layout

\begin_layout Standard

\emph on
Anmerkung des Übersetzers: An dieser Stelle weiche ich krass vom Original
 ab.
 Der englische Text ist hier viel zu weitschweifig und ein bisschen konfus.
 -LA
\end_layout

\begin_layout Standard
Es gibt noch eine zweite Möglichkeit, internationale Buchstaben mit Hilfe
 von 
\emph on
toten
\emph default
 
\emph on
Tasten (dead keys)
\emph default
 zu erzeugen -- nämlich direkt in der 
\family typewriter
.bind
\family default
-Datei.
 Dazu ein einfaches Beispiel:
\end_layout

\begin_layout Standard
Nehmen wir an, Sie benötigen eine Zirkumflex-Taste.
 Diese können Sie definieren, indem Sie in der 
\family typewriter
lyxrc-D
\family default
atei folgende Zeile einfügen:
\end_layout

\begin_layout Standard

\family typewriter

\backslash
bind "asciicircum" "accent-circumflex"
\end_layout

\begin_layout Standard
Dabei ist 
\family typewriter
asciicircum
\family default
 die Bezeichnung, die das X11-System für die 
\begin_inset Quotes gld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes grd
\end_inset

-Taste verwendet.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Die Bezeichnungen anderer Symbole lassen sich ganz gut aus einer c-Include-Datei
 namens 
\family typewriter
keysymdef.h
\family default
 ablesen.
 Meist findet man sie in 
\family typewriter
/usr/X11/include/X11/
\family default
.
\end_layout

\end_inset

 
\family typewriter
accent-circum\SpecialChar \-
flex
\family default
 ist ein LyX-Befehl, der den Zirkumflex-Akzent erzeugt.
\end_layout

\begin_layout Standard
Leider unterscheidet sich die Wirkungsweise der toten Tasten, die in 
\family typewriter
.lyxrc
\family default
 definiert wurden, merklich von der, die in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Die-.kmap-Datei"

\end_inset

 beschrieben wurde.
\end_layout

\begin_layout Subsection
Ihre Sprachkonfiguration einstellen
\end_layout

\begin_layout Standard
Sie können Ihre 
\family typewriter
lyxrc-D
\family default
atei so verändern, dass Ihre gewünschte Sprachumgebung automatisch geladen
 wird, wenn LyX gestartet wird.
 Dieser Abschnitt beschreibt Befehle, die folgendes spezifizieren:
\end_layout

\begin_layout Itemize
Standard-, erste und zweite Tastaturbelegung
\end_layout

\begin_layout Itemize
Zeichensatzkodierung
\end_layout

\begin_layout Standard
In Ihrer 
\family typewriter
lyxrc-D
\family default
atei finden Sie verschiedene Beispiele, wie man sie konfigurieren kann.
 Zum Beispiel können Sie einen Eintrag für eine Tastaturbelegung folgendermaßen
 vornehmen:
\end_layout

\begin_layout LyX-Code

\backslash
bind "american" "keymap-primary"
\end_layout

\begin_layout Standard
eine tote Taste 
\emph on
(dead key)
\emph default
 definieren:
\end_layout

\begin_layout LyX-Code

\backslash
bind "Alt+,"  "accent-cedilla"
\end_layout

\begin_layout Standard
oder eine Zeichensatzkodierung festlegen:
\end_layout

\begin_layout LyX-Code
# Die Norm für die Bildschirmzeichensätze 
\end_layout

\begin_layout LyX-Code
# Voreinstellung ist iso8859-1.
\end_layout

\begin_layout LyX-Code

\backslash
font_norm iso8859-2
\end_layout

\begin_layout Chapter
Installieren neuer Textklassen, Layouts und Vorlagen
\begin_inset CommandInset label
LatexCommand label
name "cha:Installieren-neuer-Textklassen"

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt wird beschrieben, wie Sie beim Installieren neuer Layout-
 und Vorlagedateien vorgehen müssen, außerdem auch eine kleine Auf\SpecialChar \textcompwordmark{}
frischung,
 wie man neue Dokumentenklassen für LaTeX korrekt installiert.
 Zunächst ein paar Definitionen:
\end_layout

\begin_layout Standard
Eine 
\emph on
Dokumentenklasse
\emph default
 ist eine LaTeX-Datei (normalerweise mit der Endung 
\family typewriter
.cls
\family default
 oder 
\family typewriter
.sty
\family default
), die das Format einer speziellen Art von Dokument beschreibt, etwa Artikel,
 Brief usw., und auch alle dazu notwendigen Befehle definiert.
\end_layout

\begin_layout Standard
Eine 
\emph on
Layout-Datei
\emph default
 ist eine LyX-Datei, die einer LaTeX-Dokumentenklasse ent\SpecialChar \-
spricht und LyX
 mitteilt, wie die diversen Formatelemente am Bildschirm dar\SpecialChar \-
ge\SpecialChar \-
stellt werden
 sollen, damit der Eindruck möglichst gut dem späteren Druckbild entspricht.
 Genauer gesagt beschreibt eine Layoutdatei eine 
\emph on
Textklasse
\emph default
, das interne Konstrukt, welches LyX verwendet, um den Text am Bildschirm
 darzustellen.
\end_layout

\begin_layout Standard

\emph on
Layout
\emph default
 und 
\emph on
Textklasse
\emph default
 sind somit in gewisser Weise äquivalent, aber es ist besser, die Datei
 als Layout zu bezeichnen und die interne Realisation im Speicher von LyX
 als Textklasse.
 Eine Vorlage ist einfach ein LyX-Dokument, welches bereits einige vordefinierte
 Einträge für eine bestimmte Textklasse enthält.
 Derartige Vorlagen sind beispielsweise für Briefe oder Artikel für Zeitschrifte
n sehr hilfreich.
\end_layout

\begin_layout Section
Installation eines neuen LaTeX-Paketes
\end_layout

\begin_layout Standard
Bei manchen TeX-Installationen fehlt möglicherweise das eine oder andere
 Paket, das Sie gerne mit LyX verwenden würden.
 Zum Beispiel wollen Sie FoilTeX verwenden, ein Paket zur Erstellung von
 Dias und Folien für Overheadprojektoren.
 Moderne LaTeX-Distributionen wie TeXLive (2008 oder neuer) oder MiKTeX
 besitzen ein grafisches Programm um solche Pakete zu installieren.
 Z.
\begin_inset space \thinspace{}
\end_inset

B.
 bei MiKTeX starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Package
\begin_inset space ~
\end_inset

Manager
\begin_inset Quotes grd
\end_inset

 um eine Liste mit den verfügbaren Paketen zu bekommen.
 Um eines davon zu installieren, rechts-klicken Sie oder benutzen den entspreche
nden Werkzeugleistenknopf.
\end_layout

\begin_layout Standard
Falls Ihre LaTeX-Distribution keinen Paketmanager besitzt, oder falls das
 Paket nicht direkt über Ihre Distribution verfügbar ist, folgen Sie diesen
 Schritten um es manuell zu installieren:
\end_layout

\begin_layout Enumerate
Besorgen Sie sich das Paket von 
\begin_inset CommandInset href
LatexCommand href
name "CTAN"
target "http://www.ctan.org/"

\end_inset

 oder einer anderen Quelle.
\end_layout

\begin_layout Enumerate
Falls das Paket eine Datei mit der Endung 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.ins
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 enthält (was bei FoilTeX der Fall ist), dann öffnen sie eine Kommandozeile
 wechseln in das Verzeichnis der Datei und führen den Befehl
\begin_inset Newline newline
\end_inset


\family sans
latex foiltex.ins
\family default

\begin_inset Newline newline
\end_inset

aus.
 Sie haben damit dass Paket entpackt und haben alle Dateien um es zu installiere
n.
 Die meisten LaTeX-Pakete sind nicht gepackt und man kann direkt mit der
 Installation beginnen:
\end_layout

\begin_layout Enumerate
Nun müssen Sie entscheiden, ob das Paket für alle Nutzer oder nur für Sie
 verfügbar sein soll.
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei *nix Systemen (Linux, OSX, etc.), wenn Sie das Paket für alle Nutzer
 installieren möchten, installieren Sie es in den lokalen TeX Ordner; anderenfal
ls installieren Sie es in dein eigenen 
\begin_inset Quotes gld
\end_inset

Benutzer
\begin_inset Quotes grd
\end_inset

-TeX Ordner.
 Wo man diese Ordner anlegt, sofern sie nicht schon existieren, hängt von
 Ihrem System ab.
 Dazu schauen Sie in die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texmf.cnf
\end_layout

\end_inset

.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Diese befindet sich normalerweise im Ordner 
\family sans
$TEXMF/web2c
\family default
.
 Falls nicht, führen Sie den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
kpsewhich texmf.cnf
\end_layout

\end_inset

 aus, um sie zu lokalisieren.
\end_layout

\end_inset

 Der Ort des lokalen TeX Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFLOCAL
\end_layout

\end_inset

 definiert; es ist üblicherweise der Pfad 
\family sans
/usr/local/share/texmf/
\family default
 .
 Der Ort des Benutzer-TeX Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFHOME
\end_layout

\end_inset

 definiert und ist üblicherweise der Pfad 
\family sans
$HOME/texmf/
\family default
 .
 (Wenn diese Variablen nicht vordefiniert sind, müssen Sie diese selbst
 definieren.) Sie brauchen wahrscheinlich Root-Rechte um in den lokalen TeX
 Ordner zu schreiben, beim Benutzer-TeX Ordner ist die nicht nötig.
\begin_inset Newline newline
\end_inset

Allgemein empfiehlt es sich, Pakete in den Benutzer-TeX Ordner zu installieren,
 da dieser nicht verändert oder gar überschrieben wird, wenn Sie ihr System
 aktualisieren.
 Des Weiteren wird er zusammen mit Ihren Nutzerdaten gesichert, wenn Sie
 ein Backup machen (was Sie natürlich regelmäßig tun).
\end_layout

\begin_layout Enumerate
Bei Windows, wenn Sie das Paket für alle Nutzer installieren möchten, gehen
 Sie in den Ordner, in dem LaTeX installiert ist und wechseln dort in das
 Verzeichnis 
\family sans
~tex
\backslash
latex
\family default
.
 (Verwendet man MiKTeX, wäre es standardmäßig der Ordner 
\family sans
~:
\backslash
Programme
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
 .) Legen Sie dort einen neuen Ordner mit dem Namen 
\begin_inset Quotes gld
\end_inset

foiltex
\begin_inset Quotes grd
\end_inset

 an und kopieren Sie alle Dateien das Pakets hinein.
 Wenn das Paket nur für den aktuellen Benutzer verfügbar sein soll bzw.
 Sie keine Administrator-Rechte haben, tun Sie dasselbe, aber im lokalen
 LaTeX-Ordner.
 Z.
\begin_inset space \thinspace{}
\end_inset

B.
 bei MiKTeX
\begin_inset space ~
\end_inset

2.8 wäre das unter WinXP der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Dokumente und Einstellungen
\backslash
<Benutzername>
\backslash
Anwendungsdaten
\backslash

\begin_inset Newline newline
\end_inset


\begin_inset Phantom HPhantom
status open

\begin_layout Plain Layout

\family sans
~:
\backslash

\end_layout

\end_inset

MiKTeX
\backslash
2.8
\backslash
tex
\backslash
latex
\family default

\begin_inset Newline newline
\end_inset

, unter WinVista wäre es der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Users
\backslash
<Benutzername>
\backslash
AppData
\backslash
Roaming
\backslash
2.8
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
 .
\end_layout

\end_deeper
\begin_layout Enumerate
Jetzt muss man LaTeX nur noch mitteilen, dass es neue Dateien gibt.
 Die ist je nach LaTeX-Distribution anders:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei TeXLive führen Sie von einer Kommandozeile den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texhash
\end_layout

\end_inset

 aus.
 Wenn Sie das Paket für alle Nutzer installiert haben, brauchen sie dazu
 wahrscheinlich Root-Rechte.
\end_layout

\begin_layout Enumerate
Bei MiKTeX, wenn Sie das Paket für alle Nutzer installiert haben, starten
 Sie das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset space ~
\end_inset

(Admin)
\begin_inset Quotes grd
\end_inset

 und drücken dann auf den Kopf 
\begin_inset Quotes gld
\end_inset

Refresh FNDB
\begin_inset Quotes grd
\end_inset

.
 Anderenfalls starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset Quotes grd
\end_inset

 und machen dasselbe.
\end_layout

\end_deeper
\begin_layout Enumerate
Nun muss man LyX noch mitteilen, dass es neue Pakete gibt.
 Verwenden Sie dazu in LyX das Menü 
\family sans
Werkzeuge\SpecialChar \menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 und starten LyX danach neu.
\end_layout

\begin_layout Standard
Nun ist das Paket installiert.
 In unserem Beispiel wird nun die Dokumentklasse 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Slides
\begin_inset space ~
\end_inset

(FoilTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

x)
\end_layout

\end_inset

 im Menü 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen\SpecialChar \menuseparator
Dokumentklasse
\family default
 verfügbar sein.
\end_layout

\begin_layout Standard
Möchten sie eine LaTeX-Dokumentklasse verwenden, die generell nicht im Menü
 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen\SpecialChar \menuseparator
Dokumentklasse
\family default
 gelistet ist, müssen Sie dafür selbst ein 
\begin_inset Quotes gld
\end_inset

Layout
\begin_inset Quotes grd
\end_inset

 erstellen.
 Dies ist das Thema des nächsten Abschnitts.
\end_layout

\begin_layout Section
Layout-Dateitypen
\end_layout

\begin_layout Standard

\lang english
This section describes the various sorts of LyX files that contain layout
 information.
 These files describe various paragraph and character styles, determining
 how LyX should display them and how they should be translated into LaTeX,
 DocBook, XHTML, or whatever output format is being used.
 
\end_layout

\begin_layout Standard

\lang english
We shall try to provide a thorough description of the process of writing
 layout files here.
 However, there are so many different types of documents supported even
 by just LaTeX that we can't hope to cover every different possibility or
 problem you might encounter.
 The LyX users' list is frequented by people with lots of experience with
 layout design who are willing to share what they've learned, so please
 feel free to ask questions there.
\end_layout

\begin_layout Standard

\lang english
As you prepare to write a new layout, it is extremely helpful to look at
 the layouts distributed with LyX.
 If you write a LyX layout for a LaTeX document class that might also be
 used by others, or write a module that might be useful to others, then
 you should consider posting your layout to the 
\begin_inset CommandInset href
LatexCommand href
name "layout section on the LyX wiki"
target "http://wiki.lyx.org/Layouts/Layouts"

\end_inset

 or even to the LyX developers' list, so that it might be included in LyX
 itself.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Note that LyX is licensed under the General Public License, so any material
 that is contributed to LyX must be similarly licensed.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Layout Module
\begin_inset CommandInset label
LatexCommand label
name "sub:Layout-Module"

\end_inset


\end_layout

\begin_layout Standard

\lang english
We have spoken to this point about `layout files'.
 But there are different sorts of files that contain layout information.
 Layout files, strictly so called, have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.layout
\end_layout

\end_inset

 extension and provide LyX with information about document classes.
 As of LyX 1.6, however, layout information can also be contained in layout
 
\emph on
modules
\emph default
, which have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.module
\end_layout

\end_inset

 extension.
 Modules are to LaTeX packages much as layouts are to LaTeX classes, and
 some modules—such as the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
endnotes
\end_layout

\end_inset

 module—specifically provide support for one package.
 In a sense, layout modules are similar to included
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
These can have any extension, but by convention have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.inc
\end_layout

\end_inset

 extension.
\end_layout

\end_inset

 files—files like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

—in that modules are not specific to a given document class but may be used
 with many different classes.
 The difference is that using an included file with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
article.cls
\end_layout

\end_inset

 requires editing that file.
 Modules, by contrast, are selected in the 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar \menuseparator
Settings
\end_layout

\end_inset

 dialog.
\end_layout

\begin_layout Standard

\lang english
Building modules is the easiest way to get started with layout editing,
 since it can be as simple as adding a single new paragraph style or flex
 inset.
 But modules may, in principle, contain anything a layout file can contain.
\end_layout

\begin_layout Standard

\lang english
After creating a new module and copying it to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layouts/
\end_layout

\end_inset

 folder, you will need to reconfigure and then restart LyX for the module
 to appear in the menu.
 However, changes you make to the module will be seen immediately, if you
 open 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar \menuseparator
Settings
\end_layout

\end_inset

, highlight something, and then hit 
\begin_inset Quotes eld
\end_inset

OK
\begin_inset Quotes erd
\end_inset

.
 
\emph on
It is strongly recommended that you save your work before doing this
\emph default
.
 In fact, 
\emph on
it is strongly recommended that you not attempt to edit modules while simultaneo
usly working on actual documents
\emph default
.
 Though of course the developers strive to keep LyX stable in such situations,
 syntax errors and the like in your module file could cause strange behavior.
\end_layout

\begin_layout Subsubsection
Lokales Format
\end_layout

\begin_layout Standard

\lang english
Modules are to LyX as packages are to LaTeX.
 Sometimes, however, you find yourself wanting a specific inset or character
 style just for one document and writing a module that will also be available
 to other documents makes little sense.
 What you need is LyX's 
\begin_inset Quotes eld
\end_inset

Local Layout
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
You will find it under 
\family sans
Document\SpecialChar \menuseparator
Settings\SpecialChar \menuseparator
Local Layout
\family default
.
 The large text box allows you to enter anything that you might enter in
 a layout file or module.
 You can think of a document's local layout, in fact, as a module that belongs
 just to it.
 So, in particular, you must enter a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 tag.
 Any format is acceptable, but one would normally use the format current
 at the time.
 (In LyX 2.0, the current layout format is 35.) You should be aware that local
 layout is not supported by versions of LyX prior to 1.6, so you should not
 use it if you want to be able to export your document to LyX 1.5 or earlier
 (without, that is, losing the local layout information).
 If you wish to be able to export to 1.6---local layout is supported in 1.6,
 though there is no UI for it---then you should use format 11 and, of course,
 use only layout constructs that were available in LyX 1.6.
\end_layout

\begin_layout Standard

\lang english
When you have entered something in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Local Layout
\end_layout

\end_inset

 pane, LyX will enable the 
\begin_inset Quotes eld
\end_inset

Validate
\begin_inset Quotes erd
\end_inset

 button at the bottom.
 Clicking this button will cause LyX to determine whether what you have
 entered is valid layout information for the chosen format.
 LyX will report the result but, unfortunately, will not tell you what errors
 there might have been.
 These will be written to the terminal, however, if LyX is started from
 a terminal.
 You will not be permitted to save your local layout until you have entered
 something valid.
\end_layout

\begin_layout Standard

\lang english
The warnings at the end of the previous section apply here, too.
 Do not play with local layout while you are actually working, especially
 if you have not saved your document.
 That said, using local layout with a test document can be a very convenient
 way to try out layout ideas, or even to start developing a module.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
.sty
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard

\lang english
There are two situations you are likely to encounter when wanting to support
 a new LaTeX document class, involving style (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.sty
\end_layout

\end_inset

) files and LaTeX2e class (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.cls
\end_layout

\end_inset

) .
 Supporting a style file is usually fairly easy.
 Supporting a new class file is a bit harder.
 We'll discuss the former in this section and the latter in the next.
 Similar remarks apply, of course, if you want to support a new DocBook
 DTD.
\end_layout

\begin_layout Standard

\lang english
The easier case is the one in which your new document class is provided
 as a style file that is to be used in conjunction with an already supported
 document class.
 For the sake of the example, we'll assume that the style file is called
 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
myclass.sty
\end_layout

\end_inset

 and that it is meant to be used with 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
report.cls
\end_layout

\end_inset

, which is a standard class.
 
\end_layout

\begin_layout Standard

\lang english
Start by copying the existing class's layout file into your local directory:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Of course, which directory is your local directory will vary by platform,
 and LyX allows you to specify your local directory on startup, too, using
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
-userdir
\end_layout

\end_inset

 option.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\lang english
cp report.layout ~/.lyx/layouts/myclass.layout
\end_layout

\begin_layout Standard

\lang english
Then edit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
myclass.layout
\end_layout

\end_inset

 and change the line: 
\end_layout

\begin_layout LyX-Code

\lang english

\backslash
DeclareLaTeXClass{report}
\end_layout

\begin_layout Standard

\lang english
to read
\end_layout

\begin_layout LyX-Code

\lang english

\backslash
DeclareLaTeXClass[report, myclass.sty]{report (myclass)}
\end_layout

\begin_layout Standard

\lang english
Then add:
\end_layout

\begin_layout LyX-Code

\lang english
Preamble 
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{myclass}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard

\lang english
near the top of the file.
\end_layout

\begin_layout Standard

\lang english
Start LyX and select 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Tools\SpecialChar \menuseparator
Reconfigure
\end_layout

\end_inset

.
 Then restart LyX and try creating a new document.
 You should see "
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
report (myclass)
\end_layout

\end_inset

" as a document class option in the 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar \menuseparator
Settings
\end_layout

\end_inset

 dialog.
 It is likely that some of the sectioning commands and such in your new
 class will work differently from how they worked in the base class—
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
report
\end_layout

\end_inset

 in this example—so you can fiddle around with the settings for the different
 sections if you wish.
 The layout information for sections is contained in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

, but you do not need to copy and change this file.
 Instead, you can simply add your changes to your layout file, after the
 line 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Input stdclass.inc
\end_layout

\end_inset

, which itself includes 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

.
 For example, you might add these lines:
\end_layout

\begin_layout LyX-Code

\lang english
Style Chapter
\end_layout

\begin_layout LyX-Code

\lang english
    Font
\end_layout

\begin_layout LyX-Code

\lang english
        Family Sans
\end_layout

\begin_layout LyX-Code

\lang english
    EndFont
\end_layout

\begin_layout LyX-Code

\lang english
End
\end_layout

\begin_layout Standard

\lang english
to change the font for chapter headings to sans-serif.
 This will override (or, in this case, add to) the existing declaration
 for the Chapter style.
 
\end_layout

\begin_layout Standard

\lang english
Your new package may also provide commands or environments not present in
 the base class.
 In this case, you will want to add these to the layout file.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 for information on how to do so.
\end_layout

\begin_layout Standard

\lang english
If 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
myclass.sty
\end_layout

\end_inset

 can be used with several different document classes, and even if it cannot,
 you might find it easiest just to write a module that you can load with
 the base class.
 The simplest possible such module would be:
\end_layout

\begin_layout LyX-Code

\lang english
#
\backslash
DeclareLyXModule{My Package} 
\end_layout

\begin_layout LyX-Code

\lang english
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code

\lang english
#Support for mypkg.sty.
\end_layout

\begin_layout LyX-Code

\lang english
#DescriptionEnd
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code

\lang english
Format 21
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code

\lang english
Preamble
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{mypkg}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard

\lang english
A more complex module might modify the behavior of some existing constructs
 or define some new ones.
 Again, see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 for discussion.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
.cls
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard

\lang english
There are two possibilities here.
 One is that the class file is itself based upon an existing document class.
 For example, many thesis classes are based upon 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
book.cls
\end_layout

\end_inset

.
 To see whether yours is, look for a line like
\end_layout

\begin_layout LyX-Code

\lang english

\backslash
LoadClass{book}
\end_layout

\begin_layout Standard

\lang english
in the file.
 If so, then you may proceed largely as in the previous section, though
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
DeclareLaTeXClass
\end_layout

\end_inset

 line will be different.
 If your new class is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
thesis
\end_layout

\end_inset

 and it is based upon 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
book
\end_layout

\end_inset

, then the line should read:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
And it will be easiest if you save the file to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
thesis.layout
\end_layout

\end_inset

: LyX assumes that the document class has the same name as the layout file.
 
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\lang english

\backslash
DeclareLaTeXClass[thesis,book]{thesis}
\end_layout

\begin_layout Standard

\lang english
If, on the other hand, the new class is not based upon an existing class,
 you will probably have to 
\begin_inset Quotes eld
\end_inset

roll your own
\begin_inset Quotes erd
\end_inset

 layout.
 We strongly suggest copying an existing layout file which uses a similar
 LaTeX class and then modifying it, if you can do so.
 At least use an existing file as a starting point so you can find out what
 items you need to worry about.
 Again, the specifics are covered below.
\end_layout

\begin_layout Subsection
Vorlagen erstellen
\begin_inset CommandInset label
LatexCommand label
name "sub:Vorlagen-erstellen"

\end_inset


\end_layout

\begin_layout Standard

\lang english
Once you have written a layout file for a new document class, you might
 want to consider writing a 
\emph on
template
\emph default
 for it, too.
 A template acts as a kind of tutorial for your layout, showing how it might
 be used, though containing dummy content.
 You can of course look at the various templates included with LyX for ideas.
\end_layout

\begin_layout Standard

\lang english
Templates are created just like usual documents: using LyX.
 The only difference is that usual documents contain all possible settings,
 including the font scheme and the paper size.
 Usually a user doesn't want a template to overwrite his preferred settings
 for such parameters.
 For that reason, the designer of a template should remove the corresponding
 commands like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
font_roman
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
papersize
\end_layout

\end_inset

 from the template LyX file.
 This can be done with any simple text-editor, for example 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
vi
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
notepad
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard

\lang english
Put the edited template files you create in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
UserDir/templates/
\end_layout

\end_inset

, copy the ones you use from the global template directory in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LyXDir/templates/
\end_layout

\end_inset

 to the same place, and redefine the template path in the 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Tools\SpecialChar \menuseparator
Preferences\SpecialChar \menuseparator
Paths
\end_layout

\end_inset

 dialog.
\end_layout

\begin_layout Standard

\lang english
Note, by the way, that there is a template which has a particular meaning:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
defaults.lyx
\end_layout

\end_inset

.
 This template is loaded every time you create a new document with 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
File\SpecialChar \menuseparator
New
\end_layout

\end_inset

 in order to provide useful defaults.
 To create this template from inside LyX, all you have to do is to open
 a document with the correct settings, and use the 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Save as Document Defaults
\end_layout

\end_inset

 button.
\end_layout

\begin_layout Subsection
Alte Layout-Dateien auf den neuesten Stand bringen
\end_layout

\begin_layout Standard

\lang english
The format of layout files changes with each LyX release, so old layout
 files need to be converted to the new format.
 This process has been automated since LyX 1.4: If LyX reads a layout file
 in an older format, it automatically calls the script 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layout2layout.py
\end_layout

\end_inset

 to convert it to a temporary file in current format.
 The original file is left untouched.
 If you use the layout file often, then, you may want to convert it permanently,
 so that LyX does not have to do so itself every time.
 To do this, you can call the converter manually:
\end_layout

\begin_layout LyX-Code

\lang english
mv myclass.layout myclass.old
\end_layout

\begin_layout LyX-Code

\lang english
python LyXDir/scripts/layout2layout.py myclass.old myclass.layout
\end_layout

\begin_layout Standard

\lang english
You need to replace 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LyXDir
\end_layout

\end_inset

 with the name of your LyX system directory, of course.
\end_layout

\begin_layout Standard

\lang english
Note that manual conversion does not affect included files, so these will
 have to be converted separately.
\end_layout

\begin_layout Section
Das Layout-Dateiformat
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-Layout-Dateiformat"

\end_inset


\end_layout

\begin_layout Standard

\lang english
When it's finally time to get your hands dirty and create or edit your own
 layout file, the following sections describe what you're up against.
 Our advice is to go slowly, save and test often, listen to soothing music,
 and enjoy one or two of your favorite adult beverages; more if you are
 getting particularly stuck.
 It's really not that hard, except that the multitude of options can become
 overwhelming if you try to do too much in one sitting.
 Go have another adult beverage, just for good measure.
\end_layout

\begin_layout Standard

\lang english
Note that all the tags used in layout files are case-insensitive.
 This means that 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Style
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
style
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
StYlE
\end_layout

\end_inset

 are really the same tag.
 The possible values are printed in brackets after the feature's name.
 The default value if a feature isn't specified inside a text class-description
 is typeset 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
emphasized
\end_layout

\end_inset

.
 If the argument has a data type like 
\begin_inset Quotes eld
\end_inset

string
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

float
\begin_inset Quotes erd
\end_inset

, the default is shown like this: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
float=
\emph on
default
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Deklaration einer neuen Textklasse
\end_layout

\begin_layout Standard
Zeilen, die mit einem 
\family typewriter
#
\family default
 beginnen, sind Kommentare.
 Mit einer Ausnahme: alle Textklassen sollten mit Zeilen ähnlich wie den
 folgenden beginnen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTe
\family typewriter
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family default
\size small
XClass{article}
\end_layout

\begin_layout Standard
Die zweite Zeile wird benötigt, wenn Sie LyX konfigurieren.
 Die Textklassen-Datei wird von dem LaTeX-Skript 
\family typewriter

\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

chkconfig.ltx
\end_layout

\end_inset


\family default
 gelesen, und zwar in einem speziellen Modus, in dem 
\family typewriter
#
\family default
-Zeichen ignoriert werden.
 Die erste Zeile ist einfach ein LaTeX-Kommentar, in der zweiten wird die
 Textklasse deklariert.
 Eine Datei namens
\begin_inset Newline newline
\end_inset


\family typewriter
article.layout
\family default
, die mit diesen beiden Zeilen beginnt, definiert eine Textklasse mit dem
 Namen 
\family typewriter
article
\family default
 und benutzt die LaTeX-Dokumentenklasse 
\family typewriter
article.cls
\family default
.
 
\emph on
article
\emph default
 ist auch die Beschreibung, die später im Popup-Menü 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen
\family default
 auftaucht.
 
\end_layout

\begin_layout Standard
Angenommen, Sie möchten Ihre eigene Textklasse schreiben, welche die LaTeX-Doku\SpecialChar \-
m
en\SpecialChar \-
tenklasse 
\family typewriter
article
\family default
 benutzt, in der Sie aber das Aussehen der Kopfzeile verändert haben.
 Wenn Sie dann Ihre Textklasse in eine Datei namens 
\family typewriter
myarticle.
\begin_inset Newline linebreak
\end_inset

layout
\family default
 schreiben, sollten die ersten beiden Zeilen der Datei etwa so aussehen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTe
\family typewriter
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family default
\size small
XClass[article]{article (with my own headings)}
\end_layout

\begin_layout Standard
Auf diese Weise deklarieren Sie eine Textklasse 
\family typewriter
myarticle
\family default
, die die LaTeX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Dokumentklasse 
\family typewriter
article.cls
\family default
 verwendet und (im Popup-Menü) beschrieben wird mit: 
\family sans
article (with my own headings)
\family default
.
 Falls Ihre Textklasse auch noch von weiteren Paketen abhängt, können Sie
 das so angeben:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTe
\family typewriter
\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family default
\size small
XClass[article,foo.sty]{article (with my own head
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"-
\end_layout

\end_inset

ings)}
\end_layout

\begin_layout Standard
Dadurch wird angezeigt, dass Ihre Klasse auch das Paket 
\family typewriter
foo.sty
\family default
 verwendet.
 Schließlich können Sie auch Klassen für DocBook festlegen.
 Eine typische Deklaration sieht so aus:
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
# 
\backslash
DeclareDocBookClass[article]{SGML (DocBook article)}
\end_layout

\begin_layout Standard
Diesen Deklarationen kann außerdem ein optionaler Parameter zugefügt werden,
 der den Namen der Dokumentenklasse festlegt (hier ist aber keine Liste
 erlaubt).
\end_layout

\begin_layout Standard
Wenn Sie eine Textklasse nach Ihrem Geschmack erstellt haben, müssen Sie
 die Datei nur noch in das Verzeichnis 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/layouts/
\family default
 oder nach 
\family typewriter
UserDir/layouts
\family default
 kopieren und unter LyX den Menüpunkt 
\family sans
Werkzeuge\SpecialChar \menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 auswählen.
 Nach dem Neustart von LyX sollte Ihre Textklasse im Popup-Menü 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen
\family default
 auswählbar sein.
\end_layout

\begin_layout Subsection

\lang english
The Module declaration
\end_layout

\begin_layout Standard

\lang english
A module must begin with a line like the following:
\end_layout

\begin_layout LyX-Code
#
\backslash
DeclareLyXModule[endnotes.sty]{Endnotes} 
\end_layout

\begin_layout Standard

\lang english
The mandatory argument, in curly brackets, is the name of the module, as
 it should appear in 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar \menuseparator
Settings\SpecialChar \menuseparator
Modules
\end_layout

\end_inset

.
 The argument in square brackets is optional: It declares any LaTeX packages
 on which the module depends.
 Please note that only packages about which LyX knows should be listed in
 the square brackets.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
The list of such packages is documented only in the source code.
\end_layout

\end_inset

 LyX will not check for arbitrary packages.
 It is also possible to use the form 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
from->to
\end_layout

\end_inset

 as an optional argument, which declares that the module can only be used
 when there exists a conversion chain between the formats `
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
from
\end_layout

\end_inset

' and `
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
to
\end_layout

\end_inset

'.
\end_layout

\begin_layout Standard

\lang english
The module declaration should then be followed by lines like the following
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Preferably in English if the module should be published with LyX.
 This description will appear in the list of messages to be translated and
 will be thus translated with the next interface update.
\end_layout

\end_inset

:
\end_layout

\begin_layout LyX-Code
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code
#Adds an endnote command, in addition to footnotes.
 
\end_layout

\begin_layout LyX-Code
#You will need to add  
\backslash
theendnotes in TeX code where you 
\end_layout

\begin_layout LyX-Code
#want the endnotes to appear.
 
\end_layout

\begin_layout LyX-Code
#DescriptionEnd 
\end_layout

\begin_layout LyX-Code
#Requires: somemodule | othermodule
\end_layout

\begin_layout LyX-Code
#Excludes: badmodule
\end_layout

\begin_layout Standard

\lang english
The description is used in 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar \menuseparator
Settings\SpecialChar \menuseparator
Modules
\end_layout

\end_inset

 to provide the user with information about what the module does.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Requires
\end_layout

\end_inset

 line is used to identify other modules with which this one must be used;
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Excludes
\end_layout

\end_inset

 line is used to identify modules with which this one may not be used.
 Both are optional, and, as shown, multiple modules should be separated
 with the pipe symbol: |.
 Note that the required modules are treated disjunctively: 
\emph on
at least one
\emph default
 of the required modules must be used.
 Similarly, 
\emph on
no
\emph default
 excluded module may be used.
 Note that modules are identified here by their 
\emph on
filenames
\emph default
 without the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.module
\end_layout

\end_inset

 extension.
 So 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
somemodule
\end_layout

\end_inset

 is really 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
somemodule.module
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Dateiformat
\end_layout

\begin_layout Standard
Die erste Zeile, die kein Kommentar ist, muss die Dateiformatnummer enthalten:
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] 
\family default
\lang english
The format of the layout file.
\end_layout

\begin_layout Standard

\lang english
This tag was introduced with LyX 1.4.0.
 Layout files from LyX 1.3.x and earlier don't have an explicit file format
 and are considered to be of format 1.
 The format for the present version of LyX is format 21.
 But each version of LyX is capable of reading earlier versions' layout
 files, just as they are capable of reading files produced by earlier versions
 of LyX.
 There is, however, no provision for converting to earlier formats.
 So LyX 1.6.x will not read layout files in format 21 but only files in format
 11 or earlier.
\end_layout

\begin_layout Subsection
Allgemeine Parameter für Textklassen
\begin_inset CommandInset label
LatexCommand label
name "sub:Allgemeine-Parameter-für"

\end_inset


\end_layout

\begin_layout Standard
Nachfolgend allgemeine Parameter, die die Form des gesamten Dokumentes be\SpecialChar \-
schrei\SpecialChar \-
b
en:
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

 
\family default
\lang english
Adds information that will be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 block when this document class is output to XHTML.
 Typically, this would be used to output CSS style information, but it can
 be used for anything that can appear in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

.
 Must end with 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\series medium
AddToPreamble
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

fügt Informationen zum LaTeX-Vorspann hinzu und muss mir 
\family typewriter
EndPreamble
\family default
 beendet werden.
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

 
\family default
\lang english
Defines formats for use in the display of bibliographic information.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Citation-format-description"

\end_inset

 for details.
 Must end with 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
End
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\series medium
ClassOptions\SpecialChar \ldots{}
End
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Dieser Abschnitt beschreibt verschiedene globale Optionen, die von der Dokumente
nklasse unterstützt werden.
 Eine detaillierte Beschreibung finden Sie in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Der-Abschnitt-ClassOptions"

\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\series medium
Columns
\family default
\series default
 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob die Textklasse standardmäßig ein- oder zweispaltig gesetzt
 wird.
 Kann im Popup-Menü 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 geändert werden.
 Diese Einstellung ist wichtig: Falls Ihre Textklasse standardmäßig zweispaltig
 gesetzt wird, Sie aber vergessen, das korrekt anzugeben, wird die Option
 
\family typewriter
twocolumn
\family default
 
\emph on
nicht
\emph default
 gesetzt, wenn Sie 
\family sans
Zweispaltiges
\family default

\begin_inset space \space{}
\end_inset


\family sans
Dokument
\family default
 in 
\family sans
Dokument\SpecialChar \menuseparator
Einstellungen
\family default
\SpecialChar \ldots{}
 aktivieren.
\end_layout

\begin_layout Description

\family typewriter
\series medium
Counter
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

definiert einen neuen Zähler (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Zähler"

\end_inset

) und muss mit 
\family typewriter
End
\family default
 beendet werden.
\end_layout

\begin_layout Description

\family typewriter
\series medium
DefaultFont
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Dieser Parameter definiert den Standardzeichensatz des Dokuments.
 Eine genauere Beschreibung finden Sie in Abschnitt 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\series medium
DefaultModule
\begin_inset space ~
\end_inset

[string] 
\family default
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

spezifiziert ein Modul, das standardmäßig zu dieser Dokumentklasse hinzugefügt
 wird.
 string ist der Dateiname ohne die Erweiterung 
\family typewriter
.module
\family default
.
 Sie können das Modul zwar entfernen, aber es bleibt von Beginn an aktiv.
 Es wird nur angewendet, wenn neue Dateien erstellt oder diese Klasse für
 ein vorhandenes Dokument gewählt werden.
\end_layout

\begin_layout Description

\family typewriter
\series medium
DefaultStyle
\series default

\begin_inset space ~
\end_inset

[string]
\family default
 
\family typewriter

\begin_inset Newline newline
\end_inset


\family default
Dies ist das Layout für neu angelegte Absätze, normalerweise 
\family sans
Standard
\family default
.
 Fehlt dieser Eintrag, wird das erste definierte Layout verwendet; dennoch
 ist es sehr ratsam, diese Anweisung anzugeben.
\end_layout

\begin_layout Description

\family typewriter
\series medium
ExcludesModule
\series default

\begin_inset space ~
\end_inset


\series medium
[string]
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

zeigt an, dass das genannte Modul -- spezifiziert durch den Dateinamen ohne
 die Erweiterung 
\family typewriter
.module
\family default
 -- in dieser Dokumentklasse nicht benutzt werden kann.
 Dies könnte in einem Journal-spezifischen Layout benutzt werden, um zum
 Beispiel die Verwendung des theorems-sec-Moduls, das Theoreme abschnittsweise
 nummeriert, zu verhindern.
 Diese Marke darf 
\emph on
nicht
\emph default
 in einem Modul benutzt werden.
 Module haben einen anderen Weg, andere Module auszuschließen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Layout-Module"

\end_inset

).
\end_layout

\begin_layout Description

\family typewriter
\series medium
Float
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

definiert ein neues Gleitobjekt (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Gleitobjekte"

\end_inset

) und muss mit 
\family typewriter
End
\family default
 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 
\lang english
Sets the information that will be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 block when this document class is output to XHTML.
 Note that this will completely override any prior 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
AddToHTMLPreamble
\end_layout

\end_inset

 declarations.
 (Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
AddToHTMLPreamble
\end_layout

\end_inset

 if you just want to add material to the preamble.) Must end with 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTOCSection
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] 
\lang english
The layout to use for the table of contents, bibliography, and so forth,
 when the document is output to HTML.
 For articles, this should normally be Section; for books, Chapter.
 If it is not given, then LyX will attempt to figure out which layout to
 use.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IfCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] 
\lang english
Modifies the properties of the given counter.
 If the counter does not exist, the section is ignored.
 Must end with 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
End
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset

See Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Zähler"

\end_inset

 for details on counters.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IfStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] 
\lang english
Modifies the properties of the given paragraph style.
 If the style does not exist, the section is ignored.
 Must end with 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
End
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\series medium
Input
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Hiermit können Sie andere Dateien einbinden, die Definitionen für Textklassen
 enthalten.
 Damit können Sie unnötige Mehrfachdefinitionen vermeiden.
 Beispielsweise binden die meisten Standardtextklassen die Datei 
\family typewriter
stdclass.inc
\family default
 ein, in der ein Großteil der Definitionen für Standardlayouts gemacht wird.
\end_layout

\begin_layout Description

\family typewriter
\series medium
InsetLayout
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

definiert das Layout einer Einfügung (neu).
 
\family typewriter
\series medium
InsetLayout
\family default
\series default
 kann auf eine vorhandene Einfügung angewendet werden oder eine neue, benutzerde
finierte, zum Beispiel einen neuen Zeichenstil.
 Abschnitt 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Flexible-Einfügungen-und"

\end_inset

 enthält weitere Einzelheiten.
 Diese Marke muss mit 
\family typewriter
End
\family default
 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist ein String dessen Länge die Breite des linken Randes festlegt, zum
 Beispiel 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] 
\lang english
This command deletes an existing counter, usually one defined in an included
 file.
\end_layout

\begin_layout Description

\family typewriter
\series medium
NoFloat
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

löscht ein vorhandenes Gleitobjekt.
 Dies ist besonders dann nützlich, wenn Sie ein Gleitobjekt, das in einer
 Eingabedatei definiert wurde, unterdrücken wollen.
\end_layout

\begin_layout Description

\family typewriter
\series medium
NoStyle
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Mit diesem Befehl können Sie die Definition eines bereits mit 
\family typewriter
Style 
\family default
defi\SpecialChar \-
nier\SpecialChar \-
ten Layouts rückgängig ma\SpecialChar \-
chen.
 Dies ist dann nützlich, wenn Sie ein Layout unterdrücken möchten, das in
 einer Datei definiert wird, die Sie mit 
\family typewriter
Input
\family default
 eingebunden haben.
\end_layout

\begin_layout Description

\family typewriter
\series medium
OutputFormat
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\lang english
A string indicating the file format (as defined in the Preferences dialog)
 produced by this class.
 It is mainly useful when OutputType is `literate' and one wants to define
 a new type of literate document.
 This string is reset to `docbook', `latex', or `literate' when the correspondin
g OutputType parameter is encountered.
\end_layout

\begin_layout Description

\family typewriter
\series medium
OutputType
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

ist eine Zeichenkette, die angibt, welche Dokumentart diese Klasse erzeugt.
 Zur Zeit gibt es folgende Möglichkeiten: 
\family typewriter
docbook
\family default
, 
\family typewriter
latex
\family default
 und 
\family typewriter
literate
\family default
.
\end_layout

\begin_layout Description

\family typewriter
\series medium
PageStyle
\family default
\series default
 [
\family typewriter
\emph on
plain
\emph default
, empty, headings
\family default
]
\begin_inset Newline newline
\end_inset

Der Standardseitenstil.
 Kann ebenfalls im Popup-Menü 
\family sans
Dokument\SpecialChar \menuseparator
Ein\SpecialChar \-
stel\SpecialChar \-
lun\SpecialChar \-
gen
\family default
\SpecialChar \ldots{}
 geändert werden.
\end_layout

\begin_layout Description

\family typewriter
\series medium
Preamble\SpecialChar \ldots{}
EndPreamble
\family default
\series default
 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

An dieser Stelle können Sie LaTeX-Code angeben, der vor 
\family typewriter

\backslash
begin{document}
\family default
 in die LaTeX-Ausgabe eingebunden wird.
 Zum Beispiel eigene Definitionen von LaTeX-Makros.
\end_layout

\begin_layout Description

\family typewriter
\series medium
Provides 
\family default
\series default
[
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]
\family typewriter
 
\family default
zeigt an, ob die Klasse bereits die Funktion 
\family typewriter
string
\family default
 liefert.
 Normalerweise ist eine Funktion der Name eines Paketes (
\family typewriter
amsmath
\family default
, 
\family typewriter
makeidx
\family default
,\SpecialChar \ldots{}
) oder ein Makro (
\family typewriter
url
\family default
, 
\family typewriter
boldsymbol
\family default
,\SpecialChar \ldots{}
).
 Die vollständige Liste der unterstützten Funktionen ist leider nur in den
 LyX-Quellen dokumentiert -- in 
\family typewriter
src/LaTe
\family sans

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\family typewriter
X\SpecialChar \-
Features.cpp
\family default
.
 
\family sans
Hilfe\SpecialChar \menuseparator
LaTe
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X-Konfiguration
\family default
 gibt einen Überblick über die unterstützten Pakete.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvidesModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] zeigt an, dass dieses Layout die Funktionalität des Moduls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 anbietet, das als Dateiname ohne die Erweiterung 
\family typewriter
.module
\family default
 angegeben wird.
 Dies wird typischerweise benutzt, wenn das Layout das Modul direkt benutzt
\lang english
, rather than using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
DefaultModule
\end_layout

\end_inset

 tag to indicate that it ought to be used
\lang ngerman
.
 Es könnte auch in einem Modul benutzt werden, das eine andere Implementation
 derselben Funktion liefert.
\begin_inset Newline newline
\end_inset


\lang english
This will typically be used if the layout includes the module directl
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

]
\family typewriter
 
\family default
zeigt an, ob die Klasse die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt.
 Mehrfache Funktionen müssen durch Komma getrennt werden Beachten Sie, dass
 Sie nur unterstützte Funktionen anfordern können.
 
\lang english
(Again, see 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LaTeXFeatures.cpp
\end_layout

\end_inset

 for a list of these.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist ein String dessen Länge die Breite des rechten Randes festlegt, zum
 Beispiel 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SecNumDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt die Nummerierungstiefe fest; korrespondiert mit dem LaTeX-Zähler
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
secnumdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sides
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob der Text standardmäßig für ein- oder für zweiseitigen Druck
 gesetzt wird.
 Kann im Dialog 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar \menuseparator
Einstellungen
\end_layout

\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] definiert einen neuen Absatzstil.
 Wenn er bereits existiert, werden stattdessen einige seiner Parameter neu
 definiert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

 für mehr über Absatzstile.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="maketitle"
\end_layout

\end_inset

] ist der Name des Befehls oder der Umgebung, der für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 benutzt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
CommandAfter
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

] gibt an, wie der Dokumenttitel aussehen soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandAfter
\end_layout

\end_inset

 bedeutet, dass das Makro namens 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 nach dem letzten Layout mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gesetzt werden soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist für den Fall, dass alle Layouts mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

-Umgebung gesetzt werden sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt fest, bis zu welcher Tiefe das Inhaltsverzeichnis gehen soll; korrespondi
ert mit dem LaTeX-Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tocdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Der Abschnitt 
\family typewriter
ClassOptions
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:Der-Abschnitt-ClassOptions"

\end_inset


\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FontSize
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="10|11|12"
\end_layout

\end_inset

] Eine Liste verfügbarer Größen für den Hauptzeichensatz; die Einträge werden
 mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Header
\end_layout

\end_inset

 wird benutzt, um die DTD-Zeile mit XML-basierten Klassen zu setzen.
 Zum Beispiel PUBLIC 
\begin_inset Quotes gld
\end_inset

-//OASIS//DTD DocBook V4.2//EN
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Other
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Sonstige Optionen für die Dokumentenklasse, die durch Komma getrennt werden.
 Sie werden in dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
documentclass
\end_layout

\end_inset


\family typewriter
-
\family default
Befehl als optionales Argument übergeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PageStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="empty|plain|headings|fancy"
\end_layout

\end_inset

] Eine Liste verfügbarer Seitenstile; die Einträge werden mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Subsection
Einzelne Absatz-Layouts
\begin_inset CommandInset label
LatexCommand label
name "sub:Einzelne-Absatz-Layouts"

\end_inset


\end_layout

\begin_layout Standard
Eine Layoutbeschreibung für einen Absatz sieht wie folgt aus
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Sie können mit diesem Ausdruck entweder ein neues Layout definieren oder
 aber ein bereits definiertes umdefinieren.
 
\end_layout

\end_inset

:
\end_layout

\begin_layout LyX-Code
Style 
\family roman
\emph on
Name
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Innerhalb des Blocks sind folgende Befehle erlaubt:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Align
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Gibt an, ob der Text im Blocksatz linksbündig, rechtsbündig oder zentriert
 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AlignPossible
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Eine Liste von möglichen Textausrichtungen, die durch Kommata voneinander
 getrennt werden.
 (Einige LaTeX-Stile verbieten bestimmte Ausrichtungen, weil sie keinen
 Sinn machen.
 Beispielsweise sollte in einer nummerierten Aufzählung der Text nicht rechtsbün
dig oder zentriert gesetzt werden.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

-Dekla\SpecialChar \-
ration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndBabelPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BottomSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

]
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes gld
\end_inset

float
\begin_inset Quotes grd
\end_inset

 ist eine Gleitkommazahl, wie 
\begin_inset Quotes gld
\end_inset

1,5
\begin_inset Quotes grd
\end_inset

.
\end_layout

\end_inset

 Der vertikale Abstand, der die letzte Serie von Absätzen vom folgenden
 Text trennt.
 Wenn der nächste Paragraph einen anderen Stil hat, werden die Abstände
 nicht einfach addiert, sondern das Maximum wird verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Category
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist die Kategorie für diesen Stil.
 Sie wird benutzt, um zugehörige Stile in der Layout-Kombobox der Werkzeugleiste
 zu gruppieren.
 Jeder beliebige String kann benutzt werden, aber es ist sinnvoll vorhandene
 Ka\SpecialChar \-
te\SpecialChar \-
gorien zusammen mit Ihren eigenen Stilen zu benutzen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandDepth
\end_layout

\end_inset

 ist die Tiefe des XML-Befehls und wird nur für XML-Formate benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Kopiert alle Eigenschaften eines bereits definierten Layouts in das aktuelle.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DependsOn
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name eines Stils, dessen Vorspann 
\emph on
vor
\emph default
 diesem ausgegeben werden soll.
 Dadurch wird eine Reihenfolge von Vorspannteilen bewirkt, wenn Makro-Definition
en voneinander abhängen.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Beachten Sie, dass es außer dieser Funktionalität keine andere Möglichkeit
 gibt, Vorspanne zu ordnen.
 Die Reihenfolge, die Sie in einer LyX-Version sehen, kann sich in späteren
 Versionen ohne Warnung ändern.
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabeltype
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Box, Filled_Box, Static
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist der Markentyp, der am Ende eines Absatzes steht (oder mehrerer Absätze,
 wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 auf
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 gesetzt ist).
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
No_Label
\end_layout

\end_inset

 bedeutet 
\begin_inset Quotes gld
\end_inset

nichts
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Filled_Box
\end_layout

\end_inset

 ist ein weißes oder schwarzes Quadrat, das für das Markieren eines Beweisendes
 geeignet ist.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 ist eine explizite Zeichenkette.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist eine Zeichenkette, die für einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelType
\end_layout

\end_inset

 benutzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper 
\emph on
und
\emph default
 die Marke verwendet wird, siehe Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 gesetzt, dann erhält 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 automatisch denselben Wert.
 Daher sollte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 zuerst definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise erlaubt es LyX nicht, mehr als ein Leerzeichen zwischen
 Wörtern einzufügen.
 Diese Eigenschaft kann in bestimmten Fällen umständ\SpecialChar \-
lich sein, zum Beispiel,
 wenn ein Programmcode eingegeben werden soll.
 In solchen Fällen kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden.
 LyX erzeugt in diesem Falls sich LyX nicht im LaTeX-Modus befindet, erzeugt
 es für jedes zusätzliche Leerzeichen ein geschütztes Leerzeichen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InnerTag
\end_layout

\end_inset

 [[FIXME]] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InPreamble
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

gesetzt, wird der Stil in den LaTeX-Vorspann gesetzt und nicht in den eigentlich
en Dokumenttext.
 Dies ist nützlich für Dokumentklassen, die Informationen wie den Titel
 und Autor im Vorspann erwarten.
 Beachten Sie, dass dies nur für Stile funktioniert, deren 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

gesetzt, wird der Stil als Teil des Titel-Abschnitts behandelt (siehe auch
 die allgemeinen Textklassen-Parameter 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Ein zusätzlicher Abstand zwischen Absätzen desselben Layouts.
 Wenn in einer Umgebung andere Layouts integriert werden, so werden diese
 mit dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 der Umgebung getrennt.
 Die kompletten Unterpunkte der Umgebung werden jedoch 
\emph on
zusätzlich
\emph default
 mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 getrennt.
 Man beachte, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

ein 
\emph on
Multiplikator
\emph default
 ist
\emph on
.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemTag
\end_layout

\end_inset

 [[FIXME]] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise ist es in LyX nicht möglich, einen Absatz leer zu lassen,
 da das zu einer leeren LaTeX-Ausgabe führen würde.
 In manchen Fällen ist das aber durchaus gewünscht: So können beispielsweise
 in einer Briefvorlage die benötigten Felder leer voreingestellt werden,
 damit keiner vergisst, sie anzugeben; in speziellen Klassen wird ein Absatz
 als Unterbrechung verwendet, der keinen Text enthält.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelBottomsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Abstand zwischen der Marke und dem folgenden Text.
 Wird nur für Marken benutzt, die über dem folgenden Text stehen (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Top_Environment
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered_Top_Environment
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist der Name des Zählers zur automatischen Nummerierung.
\begin_inset Newline newline
\end_inset

Er 
\emph on
muss
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Counter
\end_layout

\end_inset

 ist.
 In diesem Fall wird der Zähler jedes mal erhöht, wenn das entsprechende
 Layout im Dokument verwendet wird.
\begin_inset Newline newline
\end_inset

Er 
\emph on
kann
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 ist.
 In diesem Fall ist es etwas kompliziert: Angenommen Sie haben 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter MeinZaehler
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 angegeben, dann lauten die eigentlichen Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleri
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehlerii
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriii
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriv
\end_layout

\end_inset

; so wie in LaTeX.
 Diese Zähler müssen alle separat deklariert werden.
\begin_inset Newline newline
\end_inset

Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Zähler"

\end_inset

 für Einzelheiten zu Zählern.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 Der Zeichensatz, der für die Marke verwendet wird.
 Siehe Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der angibt, wie weit die Marke eingerückt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Labelsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der den horizontalen Abstand zwischen der Marke und dem folgenden
 Text angibt.
 Wird nur für Marken benutzt, die nicht über dem folgenden Text stehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Der String, der für den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 verwendet wird.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 gesetzt wurde, kann der String spezielle Formatierungsbefehle enthalten,
 wie sie in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Zähler"

\end_inset

 be\SpecialChar \-
schrieben sind.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] wird im Anhang anstatt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 benutzt.
 Beachten Sie, dass jede Definition von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 auch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 zurücksetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Manual, Static, Top_Environment,
\begin_inset Newline newline
\end_inset

Centered_Top_Environment, Counter, Sensitive, Enumerate,
\begin_inset Newline newline
\end_inset

Itemize, Bibliography
\end_layout

\end_inset

]
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet: die Marke ist das erste Wort (bis zum ersten echten Leerzeichen).
 Verwenden Sie geschützte Leerzeichen wenn Sie mehr als ein Wort als Marke
 haben wollen.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 bedeutet: die Marke ist was als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 definiert wurde.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Top_Environment
\end_layout

\end_inset


\begin_inset space ~
\end_inset

und
\begin_inset space ~
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered_Top_Environment
\end_layout

\end_inset

 sind Spezialfälle von
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

.
 Die Marke erscheint über dem Absatz, aber nur am Anfang der Umgebung oder
 am Anfang einer Serie von Absätzen mit diesem Layout.
 Dies benutzt man zum Beispiel im 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
Abstract
\end_layout

\end_inset

-Layout.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 ist ein Spezialfall für die Bildunterschriftsmarken für Abbildungen und
 Tabellen-Gleitobjekte.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 bedeutet, dass der gedruckte Text von der Art des Gleitobjekts abhängt:
 Er ist fest einprogrammiert als 'GleitobjektTyp N', wobei N der Wert des
 Zählers des Gleitobjekttyps ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Counter
\end_layout

\end_inset

 definiert automatisch nummerierte Zähler.
 Der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 wird erweitert, damit er alle 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Counter
\end_layout

\end_inset

 enthält: Das Ergebnis wird demnach zum Beispiel 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Abschnitt 
\backslash
thechapter.
\backslash
thesection
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 sein.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Zähler"

\end_inset

 für weitere Informationen über Zähler.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 erzeugt die üblichen Marken für Nummerierungen.
 Momentan sind diese fest auf arabische Zahlen, Kleinbuchstaben, kleine
 römische Zahlen und Großbuchstaben (für die 4
\begin_inset space ~
\end_inset

möglichen Schachtelungstiefen) programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Itemize
\end_layout

\end_inset

 erzeugt je nach Schachtelungsebene verschiedene Auflistungszeichen, Diese
 sind ebenfalls fest programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bibliography
\end_layout

\end_inset

 wird intern von LyX verwendet und sollte nur zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType BibEnvironment
\end_layout

\end_inset

 verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

-Deklaration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLangPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der LaTeX-Name für dieses Layout.
 Das bedeutet entweder der Name eines LaTeX-Befehls oder der einer LaTeX-Umgebun
g.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] Ein optionaler Parameter für den entsprechenden
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

.
 Dieser Parameter kann innerhalb von LyX nicht mehr geändert werden.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Paragraph
\emph default
, Command, Environment, Item_Environment,
\begin_inset Newline newline
\end_inset

List_Environment, Bib_Environment
\end_layout

\end_inset

] Legt fest, wie das Layout in LaTeX übersetzt wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 mag irreführend sein, denn dessen Regeln gelten auch für SGML-Klassen.
 Siehe die SGML Klassendateien für spezielle Beispiele.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

 bewirkt nichts besonderes -- der Text wird als 
\emph on
normaler
\emph default
 
\emph on
Absatz
\emph default
 übernommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 behandelt den Text als Argument eines LaTeX-Befehls
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
LatexName
\emph default
{\SpecialChar \ldots{}
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 behandelt den Text als Kern einer LaTeX-Umgebung
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}\SpecialChar \ldots{}

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 bewirkt dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, nur dass vor jedem Absatz ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

 eingefügt wird.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 funktioniert wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

, nur dass
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 als Argument an die Umgebung übergeben wird.
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 kann im Menü 
\family sans
Bearbeiten
\family default
\SpecialChar \menuseparator

\family sans
Absatz-Einstellungen
\family default
 
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../images/layout-paragraph.png
	BoundingBox 0bp 6bp 20bp 20bp

\end_inset


\end_layout

\end_inset

 definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bib_Environment
\end_layout

\end_inset

 ist wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 aber fügt zusätzlich das notwendige Argument zum Begin-Befehl der Bibliography-
Umgebung ein:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{thebibliography}{99}
\end_layout

\end_inset

 Es ist daher nur für die Bibliography-Umgebung nützlich.
\end_layout

\begin_layout Standard
Fasst man die letzten Sachen zusammen, wird die LaTeX-Ausgabe entweder so:
\end_layout

\begin_layout LyX-Code

\backslash
LatexName[LatexParam]{\SpecialChar \ldots{}
}
\end_layout

\begin_layout Standard
oder so:
\end_layout

\begin_layout LyX-Code

\backslash
begin{LatexName}[LatexParam] \SpecialChar \ldots{}
 
\backslash
end{LatexName}.
\end_layout

\begin_layout Standard
aussehen, abhängig vom LaTeX-Typ.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Wenn ein Layout in ein anderes Layout für Umgebungen eingefügt wird, werden
 die Breiten der verschiedenen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 nicht einfach addiert, sondern vorher in Abhängigkeit zur Schachtelungstiefe
 mit dem Faktor 
\begin_inset Formula $\frac{4}{\mathrm{Tiefe}+4}$
\end_inset

 multipliziert.
 Dieser Parameter wird auch dann benutzt, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 definiert wurde.
 In diesem Fall wird der Wert zu den gegebenen manuellen oder dynamischen
 Rändern hinzugefügt.
\begin_inset Newline newline
\end_inset

Zum Beispiel bedeutet 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

, dass der Absatz mit der Breite eingerückt wird, die die Buchstaben 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in der normalen Schriftart haben.
 man kann negative Breite erzeugen, indem man den String mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
-
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beginnt.
 Diese Art der Angabe wurde gewählt, damit der Text unabhängig von der verwendet
en Bildschirmschriftart wie vorgesehen aussieht.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Static
\emph default
, Manual, Dynamic, First_Dynamic, Right_Address_Box
\end_layout

\end_inset

]
\begin_inset Newline newline
\end_inset

legt fest, wie der linke Rand des Textes bestimmt wird.
 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 wählt feste Randbreiten.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet, dass der Rand von der Einstellung der 
\family sans
Ausrichtung
\family default
 im Menü 
\family sans
Absatz-Einstellungen
\family default
 (
\family sans
Bearbeiten
\family default
\SpecialChar \menuseparator

\family sans
Absatz-Einstellungen
\family default

\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../images/layout-paragraph.png
	BoundingBox 0bp 6bp 20bp 20bp

\end_inset


\end_layout

\end_inset

) abhängt.
 Dies wird für hübsche Listen ohne Tabulatoren benutzt.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 bedeutet, der linke Rand hängt von der Größe der verwendeten Markierung
 ab.
 Dies wird zum Beispiel bei automatisch nummerierten Überschriften verwendet.
 Es leuchtet ein, dass die Überschrift 
\begin_inset Quotes gld
\end_inset

5.4.3.2.1 Sehr lange \SpecialChar \ldots{}
 Überschrift
\begin_inset Quotes grd
\end_inset

 einen größeren linken Rand benötigt, als 
\begin_inset Quotes gld
\end_inset

3.2 Sehr lange \SpecialChar \ldots{}
 Überschrift
\begin_inset Quotes grd
\end_inset

.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
First_Dynamic
\end_layout

\end_inset

 arbeitet ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

, aber nur die erste Zeile wird dynamisch gesetzt, die anderen statisch.
 Dies wird für die LaTeX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Umgebung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset

 benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Right_Address_Box
\end_layout

\end_inset

 bedeutet, dass der Rand so gewählt wird, dass die längste Zeile des Absatzes
 gerade den rechten Rand berührt.
 Dies wird zum Setzen einer Adresse am rechten Rand der Seite eingesetzt.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob 
\begin_inset Quotes gld
\end_inset

zerbrechliche
\begin_inset Quotes grd
\end_inset

 LaTeX-Befehle innerhalb dieses Layouts durch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

 geschützt werden müssen.
 (Achtung: Diese Einstellung sagt nichts darüber aus, ob der Befehl an sich
 geschützt werden soll.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Newline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob Zeilenumbrüche in LaTeX als 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\backslash

\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 dargestellt werden, oder nicht.
 Man kann dies ausschalten (Wert: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

), um TeX-Code in LyX komfortabler editieren zu können.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob der nachfolgende Absatz einen linken Einzug haben darf oder
 nicht.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 heißt, der Absatz erhält auf keinen Fall einen Einzug (z.
\begin_inset space \thinspace{}
\end_inset

B.
 nach einer Überschrift), wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

- (normalerweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-) Paragraphen einen Einzug haben.
 (Daher beeinflusst die Einstellung nur 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Paragraphen.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der Name eines Layouts, das durch dieses ersetzt wurde.
 So können Sie ein Layout umbenennen und die Rückwärtskompatibilität erhalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OptionalArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=0
\end_layout

\end_inset

] Die Zahl der optionalen Argumente, die in diesem Layout benutzt werden
 können.
 Dies ist zum Beispiel bei Abschnittsüberschriften hilfreich und macht nur
 mit LaTeX Sinn.
 Beachten Sie, dass in der Ausgabe die optionalen Argumente vor den benöigten
 stehen werden (siehe unten).
 Man kann also Konstrukte wie dieses hier haben:
\end_layout

\begin_deeper
\begin_layout LyX-Code

\backslash
mycmd[optional1]{benötigt1}{Inhalt des Paragraphs}
\end_layout

\begin_layout Standard
aber nicht:
\end_layout

\begin_layout LyX-Code

\backslash
mycmd[optional1]{benötigt1}[optional2]{Inhalt des Paragraphs}
\end_layout

\begin_layout Standard
zumindest nicht ohne TeX-Code (in den man alles schreiben kann).
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, dass ein Paragraph nicht durch eine leere Zeile in der LaTeX-Ausgabe
 abgesetzt wird, sondern nur duch einen Zeilenumbruch.
 Zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru 1
\end_layout

\end_inset

 erlaubt dies die Emulation eines reinen Texteditors (so wie die TeX-Code
 Einfügung).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Der Einzug der ersten Zeile eines Absatzes.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 bleibt für ein bestimmtes Layout fest.
 Eine Ausnahme ist das Standard-Layout, denn dort kann der Einzug vom vorherigen
 Layout mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 verboten werden.
 Außerdem benutzt das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Layout innerhalb von Umgebungen den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 der Umgebung und nicht den eigenen.
 Zum Beispiel haben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Absätze innerhalb einer Aufzählung keinen Einzug.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Anstand zwischen den Absätzen dieses Layouts.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der Benutzer kann in LyX wählen ob Absätze duch 
\family sans
Einrückung
\family default
 oder 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 getrennt werden.
 Wenn 
\family sans
Einrückung
\family default
 gewählt ist, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 ignoriert.
 Ist 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 gewählt wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 ignoriert und alle Absätze durch den vertikalen Abstand von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 getrennt.
 Die Länge dieses Abstands berechnet sich mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\begin_inset space ~
\end_inset

* DefaultHeight
\end_layout

\end_inset

 wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultHeight
\end_layout

\end_inset

 die Höhe einer Zeile in der normalen Schrift ist.
 Dadurch bleibt das Aussehen mit verschiedenen Schriften gleich.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]
\family typewriter
 
\family default
Legt fest, ob der Absatzinhalt unverändert ausgegeben werden soll, also
 ohne diverse von LaTeX benötigte Ersetzungen durchzuführen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Befehle und Definitionen, die in die Präambel (vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{docu\SpecialChar \-
ment}
\end_layout

\end_inset

) eingefügt werden, wenn dieses Layout benutzt wird.
 Kann verwendet werden um Pakete zu laden, Makros zu definieren usw..
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieses Paragraphs
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RequiredArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=0
\end_layout

\end_inset

] Die Anzahl an benötigten Argumenten, die der LaTeX-Befehl oder die -Umgebung
 benötigt.
 Für Befehle sind die benötigte Argumente 
\emph on
andere
\emph default
 als die, die mit dem Inhalt des Absatzes zu tun haben.
 Diese müssen nicht unbedingt angegeben werden: LyX wird leere Argumente
 ausgeben, wenn nötig.
 Beachten Sie, dass die optionalen Argumente vor den benötigten ausgegeben
 werden.
 Siehe die obige Diskussion in der Beschreibung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OptionalArgs
\end_layout

\end_inset

 für weitere Informationen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires 
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] legt fest, dass das Layout die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt.
 Siehe die Beschreibung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Provides
\end_layout

\end_inset

 in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Allgemeine-Parameter-für"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\begin_inset space ~
\end_inset

<Wert>
\end_layout

\end_inset

] Dies definiert die Voreinstellung für den Zeilenabstand des Layouts.
 Die Argumente 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

 entsprechen den Multiplikatoren 1, 1.25 und 1.667.
 Wenn Sie als Argument 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\end_layout

\end_inset

 angeben, müssen Sie  als 
\emph on
Wert
\emph default
 einen konkreten Multiplikator angeben.
 Im Gegensatz zu anderen Parametern erzeugt LyX, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 gesetzt wird, spezifischen LaTeX-Code, der das LaTeX-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
setspace
\end_layout

\end_inset

 verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt des Paragraphs auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TextFont
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper verwendet wird.
\begin_inset Newline newline
\end_inset

Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocLevel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist die Stufe des Stils im Inhaltsverzeichnis und wird zur automatischen
 Nummerierung von Abschnittsüberschriften benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TopSep
\end_layout

\end_inset


\series medium
 
\series default
[
\family typewriter
float=0
\family default
] Der vertikale Abstand, der die erste Serie von Absätzen vom vorangehenden
 Text trennt.
\end_layout

\begin_layout Subsection

\lang english
\begin_inset CommandInset label
LatexCommand label
name "sub:I18n"

\end_inset

Internationalization of Paragraph Styles
\end_layout

\begin_layout Standard

\lang english
If a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Style
\end_layout

\end_inset

 defines text that is to appear in the typeset document, it may use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 to support non-English and even multi-language documents correctly.
 The following excerpt (from the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
theorems-ams.inc
\end_layout

\end_inset

 file) shows how this works:
\end_layout

\begin_layout LyX-Code
Preamble
\end_layout

\begin_deeper
\begin_layout LyX-Code
  
\backslash
theoremstyle{remark}
\end_layout

\begin_layout LyX-Code
  
\backslash
newtheorem{claim}[thm]{
\backslash
protect
\backslash
claimname}
\end_layout

\begin_layout LyX-Code
EndPreamble
\end_layout

\begin_layout LyX-Code
LangPreamble
\end_layout

\begin_layout LyX-Code
  
\backslash
providecommand{
\backslash
claimname}{_(Claim)}
\end_layout

\begin_layout LyX-Code
EndLangPreamble
\end_layout

\begin_layout LyX-Code
BabelPreamble
\end_layout

\begin_layout LyX-Code
    
\backslash
addto
\backslash
captions$$lang{
\backslash
renewcommand{
\backslash
claimname}{_(Claim)}}
\end_layout

\begin_layout LyX-Code
EndBabelPreamble
\end_layout

\end_deeper
\begin_layout Standard

\lang english
In principle, any legal LaTeX may appear in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 tags, but in practice they will typically look as they do here.
 The key to correct translation of the typeset text is the definition of
 the LaTeX command 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
claimname
\end_layout

\end_inset

 and its use in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
newtheorem
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 tag provides for internationalization based upon the overall language of
 the document.
 The contents of the tag will be included in the preamble, just as with
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Preamble
\end_layout

\end_inset

 tag.
 What makes it special is the use of the 
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_()
\end_layout

\end_inset

, which will be replaced, when LyX produces LaTeX output, with the translation
 of its argument into the document language.
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 tag is more complex, since it is meant to provide support for multi-language
 documents and so offers an interface to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
babel
\end_layout

\end_inset

 package.
 Its contents will be added to the preamble once for each language that
 appears in the document.
 In this case, the argument to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_()
\end_layout

\end_inset

 will be replaced with its translation into the language in question; the
 expression 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$lang
\end_layout

\end_inset

 is replaced by the language name (as used by the babel package).
\end_layout

\begin_layout Standard

\lang english
A German document that also included a French section would thus have the
 following in the preamble:
\end_layout

\begin_layout LyX-Code

\backslash
addto
\backslash
captionsfrench{
\backslash
renewcommand{
\backslash
claimname}{Affirmation}}
\begin_inset Newline newline
\end_inset


\backslash
addto
\backslash
captionsngerman{
\backslash
renewcommand{
\backslash
claimname}{Behauptung}}
\begin_inset Newline newline
\end_inset


\backslash
providecommand{
\backslash
claimname}{Behauptung}
\end_layout

\begin_layout Standard

\lang english
LaTeX and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
babel
\end_layout

\end_inset

 will then conspire to produce the correct text in the output.
\end_layout

\begin_layout Standard

\lang english
One important point to note here is that the translations are provided by
 LyX itself, through the same mechanism it uses for internationalization
 of the user interface.
 This means, in effect, that 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 are really only of use in layout files that are provided with LyX, since
 text entered in user-created layout files will not be seen by LyX's internation
alization routines.
 That said, however, any layout created with the intention that it will
 be included with LyX should use these tags where appropriate.
\end_layout

\begin_layout Subsection
Gleitobjekte
\begin_inset CommandInset label
LatexCommand label
name "sub:Gleitobjekte"

\end_inset


\end_layout

\begin_layout Standard
Es ist nötig Gleitobjekte (
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
Abbildung
\end_layout

\end_inset

, 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
Tabelle
\end_layout

\end_inset

,\SpecialChar \ldots{}
) in der Textklasse selber zu definieren.
 Standardgleitobjekte sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdfloats.inc
\end_layout

\end_inset

 enthalten, so dass Sie sie nur noch
\end_layout

\begin_layout LyX-Code
Input stdfloats.inc
\end_layout

\begin_layout Standard
zu Ihrer Layoutdatei hinzufügen müssen.
 Wenn Sie eine Textklasse implementieren wollen, die andere Gleitobjekttypen
 enthält (wie zum Beispiel die AGU-Klasse), werden Ihnen die folgenden Informati
onen helfen:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Extension
\end_layout

\end_inset


\family typewriter
\series medium
 
\family default
\series default
[
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Dateinamenerweiterung einer zusätzlichen Datei für das Abbildungsver\SpecialChar \-
zeichn
is (oder andere).
 LaTeX schreibt die Beschriftungen in diese Datei.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Zeichenkette, die in den Menüs und für die Beschriftung benutzt wird.
 Dies wird in die aktuelle Sprache übersetzt, wenn babel verwendet wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsPredefined
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob das Gleitobjekt bereits in der Dokumentklasse definiert ist
 oder ob das LaTeX-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 geladen werden muss, um es zu definieren.
 Die Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

, was bedeutet, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 verwendet wird.
 Es sollte auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden, wenn das Gleitobjekt bereits in der Dokumentklasse definiert
 ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListCommand
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Der Befehl der verwendet wird, um eine Liste der Gleitobjekte dieses Typs
 zu generieren; das `
\backslash
' muss weggelassen werden.
 Der Befehl 
\emph on
muss
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt ist, da es sonst keine Möglichkeit gibt, diesen Befehl zu erstellen.
 Er wird ignoriert, falls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt ist, da es dann eine Möglichkeit gibt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Überschrift für das Gleitobjekt-Verzeichnis (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Quotes gld
\end_inset

Abbildungsverzeichnis
\begin_inset Quotes grd
\end_inset

).
 Sie wird für die Bildschirmmarke in LyX verwendet, von LaTeX für den Titel
 verwendet und als Titel in der XHTML-Ausgabe.
 Sie wird in die Dokumentsprache übersetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Dieses optionale Argument bestimmt, ob Gleitobjekte dieser Klasse mit
 der Abschnittsnummer dieses Dokuments nummeriert werden.
 Wenn zum Beispiel 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 auf 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gesetzt ist, werden die Gleitobjekte mit den Kapitelnummern nummeriert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Placement
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Standardplatzierung für die Gleitobjektklasse.

\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 sollte die Standard-LaTeX-Werte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
t
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
b
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
p
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
h
\end_layout

\end_inset

 für oben, unten, Seite und hier enthalten.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wie in LaTeX ist die Reihenfolge der Buchstaben unerheblich.
\end_layout

\end_inset

 Zusätzlich gibt es den neuen Typ 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

, der nicht wirklich für ein Gleitobjekt steht, denn er bedeutet: drucke
 es 
\emph on
hier
\emph default
 und nirgendwo sonst.
 Beachten Sie, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

 besonders ist und wegen der Implementierungsdetails nicht bei nicht-eingebauten
 Gleitobjekttypen benutzt werden kann.
 Wenn Sie die Platzierung nicht verstehen, benutzen Sie einfach 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tbp
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieser Gleitobjekte
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
 Man kann den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 eines kopierten Stils entfernen, indem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 auf 
\begin_inset Quotes gld
\end_inset

OFF
\begin_inset Quotes grd
\end_inset

 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist der Gleitobjektstil, wenn er mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 definiert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Type
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist der 
\begin_inset Quotes gld
\end_inset

Typ
\begin_inset Quotes grd
\end_inset

 der neuen Gleitobjektklasse, wie z.
\begin_inset space \thinspace{}
\end_inset

B.
 Programm oder Algorithmus.
 Nach dem entsprechenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 stehen Befehle wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{program}
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{algorithm*}
\end_layout

\end_inset

 zur Verfügung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob dieses Gleitobjekt mit Hilfe des LaTeX-Pakets 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 definiert wurde, entweder durch die Dokumentklassen, ein anderes Paket
 oder durch LyX.
\end_layout

\begin_layout Description
Anmerkung: Wenn ein Gleitobjekt vom Typ 
\emph on
type
\emph default
 definiert wurde, gibt es automatisch einen dazugehörigen Zähler namens
 
\emph on
type
\emph default
.
\end_layout

\begin_layout Subsection
Flexible Einfügungen und InsetLayout
\begin_inset CommandInset label
LatexCommand label
name "sub:Flexible-Einfügungen-und"

\end_inset


\end_layout

\begin_layout Standard
Es gibt drei Arten von flexiblen Einfügungen:
\end_layout

\begin_layout Itemize
Zeichenstil (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CharStyle
\end_layout

\end_inset

): diese definieren semantische Textauszeichnungen, die mit LaTeX-Befehlen
 wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
noun
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
code
\end_layout

\end_inset

 korrespondieren.
\end_layout

\begin_layout Itemize
benutzerdefiniert (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Custom
\end_layout

\end_inset

): diese können benutzt werden, um benutzer\SpecialChar \-
de\SpecialChar \-
fi\SpecialChar \-
nier\SpecialChar \-
te einklappbare Einfügungen
 zu definieren, ähnlich wie TeX-Code, Fuß\SpecialChar \-
no\SpecialChar \-
te usw.
 Ein naheliegendes Beispiel ist die Endnotiz, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
endnote
\end_layout

\end_inset

-Modul definiert ist.
\end_layout

\begin_layout Itemize
XML-Element (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Element
\end_layout

\end_inset

): diese werden mit DocBook-Klassen benutzt.
\end_layout

\begin_layout Standard
Flexible Einfügungen werden mit der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke definiert, die weiter unten erklärt wird.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke besitzt noch eine andere Funktion: sie kann benutzt werden, um das
 allgemeine Aussehen vieler verschiedener Einfügungstypen anzupassen.
 Zurzeit kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 benutzt werden, um die Layout-Parameter für Fußnoten, Randnoten, eingefügten
 Noten, TeX-Code (ERT), Zweige, Stichwortverzeichnisse, Boxen, Tabellen,
 Algorithmen, URLs und optionaler Argumente anzupassen, ebenso um flexible
 Einfügungen zu definieren.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition muss mit folgender Zeile beginnen:
\end_layout

\begin_layout LyX-Code
InsetLayout <Typ>
\end_layout

\begin_layout Standard
Hier bezeichnet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 die Einfügung, deren Layout definiert wird.
 Es gibt zwei Möglichkeiten.
\end_layout

\begin_layout Enumerate
Das Layout für eine existierende Einfügung wird geändert.
 In diesem Fall kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 folgendes sein: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Algorithm
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Branch
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box:shaded
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ERT
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Figure
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Foot
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Index
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:menu
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcut
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcuts
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Listings
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Marginal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Comment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Note
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Greyedout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OptArg
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Table
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
URL
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Das Layout für eine flexible Einfügung wird definiert.
 In diesem Fall muss 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 in der Form 
\lang english

\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Flex:<Name>
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset


\lang ngerman
 sein, wobei 
\lang english

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Name
\end_layout

\end_inset


\lang ngerman
 ein beliebiger gültiger Bezeichner sein kann, der in keiner anderen existierend
en Einfügung benutzt wird.
 Der Bezeichner darf Leerzeichen enthalten, dann muss aber der komplette
 Typ in Anführungszeichen gesetzt werden.
 Beachten Sie, dass die Definition einer flexiblen Einfügung 
\emph on
auch
\emph default
 einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXType
\end_layout

\end_inset

-Eintrag enthalten muss, der festlegt welcher Einfügungstyp definiert wird.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BgColor
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist die Hintergrundfarbe der Einfügung.
 Die gültigen Farbnamen sind in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
src/ColorCode.h
\end_layout

\end_inset

 definiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ContentAsLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob der Inhalt der Einfügung als Marke verwendet werden soll, wenn die
 Einfügung geschlossen ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
 Beachten Sie, dass der komplette Typ angegeben werden muss, z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle Flex:<Name>
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob der Benutzer den Absatzeinstellungen-Dialog (
\begin_inset Graphics
	filename ../../images/layout-paragraph.png
	scale 70
	scaleBeforeRotation
	BoundingBox 0bp 6bp 20bp 20bp
	groupId Icon

\end_inset

) benutzen darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Decoration
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

 sein.
 Es beschreibt den Rendering-Stil für den Einfügungsrahmen und die -knöpfe.
 Fußnoten benutzen im allgemeinen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, TeX-Code
\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

 und Zeichenstile 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Display
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Nur sinnvoll wenn der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist.
 Gibt an, ob die Umgebung in der Ausgabe abgesetzt erscheint oder in einer
 Zeile mit dem umgebenden Text.
 Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt, wird angenommen, dass die LaTeX-Umgebung Leerraum nach den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 Befehlen ignoriert (inklusive des Zeilenumbruchzeichens).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 wird für den Text 
\emph on
und
\emph default
 die Marke benutzt (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass die Definition dieses Fonts automatisch dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 denselben Wert zuweist, das heißt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 muss zuerst definiert werden und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 danach, wenn sie unterschiedlich sein sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 erzwingt die 
\begin_inset Quotes gld
\end_inset

LaTeX-Sprache
\begin_inset Quotes grd
\end_inset

 und führt zu einer links-nach-rechts-Ausgabe, zum Beispiel bei TeX-Code
 oder URL.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 ist eine Behelfslösung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob stattdessen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PlainLayout
\end_layout

\end_inset

 benutzt werden soll oder ob der Benutzer den Absatzstil der Einfügung ändern
 darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InToc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob der Inhalt der Einfügung für die Zeichenketten des 'Gliederungs'-Fensters
 verwendet werden soll.
 Zum Beispiel will man nicht, dass der Inhalt einer Fußzeile im Namen des
 Abschnitts im Inhaltsverzeichnis des Gliederungs-Fensters erscheint.
 Aber man will normalerweise, dass der Inhalt von Zeichenstilen erscheint.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 ist die für die Marke benutze Schrift (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass diese Definition niemals vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 erscheinen darf, weil sie sonst unwirksam ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] wird auf dem Knopf und anderswo als Einfügungsmarke angezeigt.
 Einige Einfügungstypen (TeX-Code und Zweig) ändern diese Marke im Vo\SpecialChar \-
rü\SpecialChar \-
ber\SpecialChar \-
gehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name der LaTeX-Umgebung oder des LaTeX-Befehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] ist ein optionaler Parameter für den zugehörigen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

, einschließ\SpecialChar \-
lich möglicher Klammerpaare wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[]
\end_layout

\end_inset

.
 Dieser Parameter kann in LyX nicht geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
custom
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
element
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
end
\end_layout

\end_inset

 (zeigt das Ende einer Definition an) sein.
 Dieser Eintrag wird für flexible Einfügungen benötigt und ist nur dort
 sinnvoll.
 Neben anderen Dingen legt er fest, in welchem Menü diese Einfügung erscheinen
 wird.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

 gesetzt, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 automatisch auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 kann auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

-Einfügungen gesetzt werden, indem es 
\emph on
nach
\emph default
 dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXType
\end_layout

\end_inset

 spezifiziert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob in dieser Einfügung mehrfache Absätze erlaubt sind.
 Dadurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 auf denselben Wert gesetzt und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 auf den anderen.
 Diese können auf andere Werte gesetzt werden, wenn sie 
\emph on
nach
\emph default
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 benutzt werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob 
\emph on
zerbrechliche
\emph default
 Befehle in diesem Layout ge\SpecialChar \-
schützt (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

) werden sollen.
 Es zeigt 
\emph on
nicht
\emph default
 an, ob der Befehl selber geschützt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieser Einfügung
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetsFont
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Ob die Einfügung die Schrift der benachbarten Umgebungen verwenden soll
 oder seine eigene.
 Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

: verwendet seine Eigene.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt der Einfügung auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Subsection
Zähler
\begin_inset CommandInset label
LatexCommand label
name "sub:Zähler"

\end_inset


\end_layout

\begin_layout Standard
Es ist notwendig Zähler (
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset

, 
\begin_inset Flex MenuItem
status collapsed

\begin_layout Plain Layout
figure
\end_layout

\end_inset

,\SpecialChar \ldots{}
) in der Textklasse selber zu definieren.
 Die Standardzähler sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdcounters.inc
\end_layout

\end_inset

 definiert, so dass Sie nur die Zeile
\end_layout

\begin_layout LyX-Code
Input stdcounters.inc
\end_layout

\begin_layout Standard
zu zu Ihrer Layout-Datei hinzufügen müssen, damit sie arbeiten.
 Aber wenn Sie eigene Zähler definieren wollen, können Sie das tun.
 Zähler-Deklarationen beginnen mit
\end_layout

\begin_layout LyX-Code
Counter <Name>
\end_layout

\begin_layout Standard
wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

 der Name Ihres Zählers ist.
 Die Deklaration endet mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Folgende Parameter können auch benutzt werden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] definiert, wie der Zähler dargestellt wird.
 Hierdurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 auf denselben Wert gesetzt.
 In der Zeichenkette können folgende Konstrukte benutzt werden:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
thecounter
\end_layout

\end_inset

 wird durch die Erweiterung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 (oder
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

) des Zählers 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
counter
\end_layout

\end_inset

 ersetzt.
\end_layout

\begin_layout Itemize
Zählerwerte können durch LaTeX-ähnliche Makros wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
numbertype
\emph default
{
\emph on
counter
\emph default
}
\end_layout

\end_inset

 ausgedrückt werden, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
numbertype
\end_layout

\end_inset

 Folgendes sein kann: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
arabic
\end_layout

\end_inset

: 1, 2, 3,\SpecialChar \ldots{}
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
alph
\end_layout

\end_inset

 für Kleinbuchstaben: a, b, c,\SpecialChar \ldots{}
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alph
\end_layout

\end_inset

 für Großbuchstaben: A, B, C,\SpecialChar \ldots{}
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
roman
\end_layout

\end_inset

 für kleine römische Zahlen: i, ii, iii,\SpecialChar \ldots{}
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Roman
\end_layout

\end_inset

 für große römische Zahlen: I, II, III.
\end_layout

\begin_layout Standard
Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 nicht definiert ist, wird ein Standardwert wie folgt benutzt: wenn der
 Zähler einen Hauptzähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
master
\end_layout

\end_inset

 (über 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 definiert) hat, wird der String 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
themaster.
\backslash
arabic{counter}
\end_layout

\end_inset

 benutzt, ansonsten 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
arabic{counter}
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

, aber für den Anhang.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PrettyFormat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Ein Format, das für Formatierte Querverweise auf einen Zähler verwendet
 wird.
 Möchte man z.
\begin_inset space \thinspace{}
\end_inset

B.
 Referenzen auf Abschnitte in der Form 
\begin_inset Quotes gld
\end_inset

Abschnitt
\begin_inset space ~
\end_inset

2.4
\begin_inset Quotes grd
\end_inset

 haben, sollte der String 
\begin_inset Quotes gld
\end_inset

##
\begin_inset Quotes grd
\end_inset

 enthalten.
 Diese Zeichen werden später durch die referenzierte Abschnittsnummer ersetzt.
 Also für Abschnitte lautet der String dann 
\begin_inset Quotes gld
\end_inset

Abschnitt ##
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Wenn dies auf den Namen eines anderen Zählers gesetzt wird, wird der gegenwärt
ige Zähler jedes mal zurückgesetzt, wenn der andere erhöht wird.
 Zum Beispiel wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
subsection
\end_layout

\end_inset

 innerhalb 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
section
\end_layout

\end_inset

 nummeriert.
\end_layout

\begin_layout Subsection
Beschreibung des Zeichensatzes
\begin_inset CommandInset label
LatexCommand label
name "sub:Beschreibung-des-Zeichensatzes"

\end_inset


\end_layout

\begin_layout Standard
Eine Zeichensatzbeschreibung sieht folgendermaßen aus:
\end_layout

\begin_layout LyX-Code
Font 
\family roman
\emph on
oder
\family default
\emph default
 LabelFont
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
EndFont
\end_layout

\begin_layout Standard
und es sind folgende Befehle vorhanden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Color
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
none
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
black
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
white
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
red
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
green
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
blue
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
cyan
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
magenta
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
yellow
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Family
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Roman
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sans
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Typewriter
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Misc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Zulässige Argumente sind: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
underbar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uuline
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uwave
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_bar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uuline
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uwave
\end_layout

\end_inset

.
 Jedes schaltet die entsprechende Eigenschaft an oder aus.
 Zum Beispiel führt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

 zum Stil 
\emph on
Hervorhebung
\emph default
 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 schaltet diesen aus.
\begin_inset Newline newline
\end_inset

Falls Sie Letzteres verwirrt, erinnern Sie sich, dass die Schrifteinstellungen
 standardmäßig von den umgebenden Stilen übernommen wird.
 Daher schaltet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 die 
\emph on
Hervorhebung
\emph default
 aus, die z.
\begin_inset space \thinspace{}
\end_inset

B.
 in einer Theorem-Umgebung aktiv ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Series
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Medium
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bold
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Shape
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Up
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Italic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SmallCaps
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Slanted
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Size
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tiny
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
small
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
normal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
large
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
larger
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
largest
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
huge
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
giant
\end_layout

\end_inset

]
\end_layout

\begin_layout Subsection

\lang english
\begin_inset CommandInset label
LatexCommand label
name "sub:Citation-format-description"

\end_inset

Citation format description
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 blocks are used to describe how bibliographic information should be displayed,
 both within LyX itself (in the citation dialog and in tooltips, for example)
 and in XHTML output.
 Such a block might look like this:
\end_layout

\begin_layout LyX-Code
CiteFormat
\end_layout

\begin_layout LyX-Code
 article ...
\end_layout

\begin_layout LyX-Code
 book ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard

\lang english
The individual lines define how the bibliographic information associated
 with an article or book, respectively, is to be displayed, and such a definitio
n can be given for any `entry type' that might be present in a BibTeX file.
 LyX defines a default format in the source code that will be used if no
 specific definition has been given.
 LyX predefines several formats in the file 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

, which is included in most of LyX's document classes.
\end_layout

\begin_layout Standard

\lang english
The definitions use a simple language that allows BibTeX keys to be replaced
 with their values.
 Keys should be enclosed in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%
\end_layout

\end_inset

 signs, e.g.: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%author%
\end_layout

\end_inset

.
 So a simple definition might look like this:
\end_layout

\begin_layout LyX-Code
misc %author%, 
\begin_inset Quotes eld
\end_inset

%title
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
This would print the author, followed by a comma, followed by the title,
 in quotes, followed by a period.
\end_layout

\begin_layout Standard

\lang english
Of course, sometimes you may want to print a key only if it exists.
 This can be done by using a conditional construction, such as: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{%volume%[[vol.
\begin_inset space ~
\end_inset

%volume%]]}
\end_layout

\end_inset

.
 This says: If the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
volume
\end_layout

\end_inset

 key exists, then print 
\begin_inset Quotes eld
\end_inset

vol.
\begin_inset space ~
\end_inset


\begin_inset Quotes erd
\end_inset

 followed by the volume key.
 It is also possible to have an else clause in the conditional, such as:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{%author%[[%author%]][[%editor%, ed.]]}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Here, the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
author
\end_layout

\end_inset

 key is printed if it exists; otherwise, the editor key is printed, followed
 by 
\begin_inset Quotes eld
\end_inset

,
\begin_inset space ~
\end_inset

ed.
\begin_inset Quotes erd
\end_inset

 Note that the key is again enclosed in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%
\end_layout

\end_inset

 signs; the entire conditional is enclosed in braces; and the if and else
 clauses are enclosed in double brackets, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
[[
\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
]]
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 There must be no space between any of these.
\end_layout

\begin_layout Standard

\lang english
There is one other piece of syntax available in definitions, which looks
 like this: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{!<i>!}
\end_layout

\end_inset

.
 This defines a piece of formatting information that is to be used when
 creating 
\begin_inset Quotes eld
\end_inset

rich text
\begin_inset Quotes erd
\end_inset

.
 Obviously, we do not want to output HTML tags when writing plain text,
 so they should be wrapped in 
\begin_inset Quotes eld
\end_inset

{!
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

!}
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Two special sorts of definitions are also possible in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 block.
 An example of the first would be:
\end_layout

\begin_layout LyX-Code
!quotetitle 
\begin_inset Quotes eld
\end_inset

%title%
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\lang english
This is an abbreviation, or macro, and it can be used by treating it as
 if it were a key: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%!quotetitle%
\end_layout

\end_inset

.
 LyX will treat 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%!quotetitle%
\end_layout

\end_inset

 exactly as it would treat its definition.
 So, let us issue the obvious 
\emph on
warning
\emph default
.
 Do not do this:
\end_layout

\begin_layout LyX-Code
!funfun %funfun%
\end_layout

\begin_layout Standard

\lang english
or anything like it.
 LyX shouldn't go into an infinite loop, but it may go into a long one before
 it gives up.
\end_layout

\begin_layout Standard

\lang english
The second sort of special definition might look like this:
\end_layout

\begin_layout LyX-Code
_pptext pp.
\end_layout

\begin_layout Standard

\lang english
This defines a translatable piece of text, which allows relevant parts of
 the bibliography to be translated.
 It can be included in a definition by treating it as a key: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%_pptext%
\end_layout

\end_inset

.
 Several of these are predefined in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

.
 Note that these are not macros, in the sense just defined.
 They will not be expanded.
\end_layout

\begin_layout Standard

\lang english
So here then is an example that use all these features:
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\family typewriter
\lang english
!authoredit {%author%[[%author%, ]][[{%editor%[[%editor%, %_edtext%, ]]}]]}
\end_layout

\begin_layout Standard

\lang english
\begin_inset VSpace defskip
\end_inset

This defines a macro that prints the author, followed by a comma, if the
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
author
\end_layout

\end_inset

 key is defined, or else prints the name of the editor, followed by the
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_edtext
\end_layout

\end_inset

 or its translation (it is by default 
\begin_inset Quotes eld
\end_inset

ed.
\begin_inset Quotes erd
\end_inset

), if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
editor
\end_layout

\end_inset

 key is defined.
 Note that this is in fact defined in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

, so you can use it in your own definitions, or re-definitions, if you load
 that file first.
\end_layout

\begin_layout Section

\lang english
\begin_inset CommandInset label
LatexCommand label
name "sec:Tags-for-XHTML"

\end_inset

Tags for XHTML output
\end_layout

\begin_layout Standard

\lang english
As with LaTeX or DocBook, the format of LyX's XHTML output is also controlled
 by layout information.
 In general, LyX provides sensible defaults and, as mentioned earlier, it
 will even construct default CSS style rules from the other layout tags.
 For example, LyX will attempt to use the information provided in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Font
\end_layout

\end_inset

 declaration for the Chapter style to write CSS that will appropriately
 format chapter headings.
\end_layout

\begin_layout Standard

\lang english
In many cases, then, you may not have to do anything at all to get acceptable
 XHTML output for your own environments, custom insets, and so forth.
 But in some cases you will, and so LyX provides a number of layout tags
 that can be used to customize the XHTML and CSS that are generated.
\end_layout

\begin_layout Standard

\lang english
Note that there are two tags, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
AddToHTMLPreamble
\end_layout

\end_inset

 that may appear outside style and inset declarations.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Allgemeine-Parameter-für"

\end_inset

 for details on these.
\end_layout

\begin_layout Subsection

\lang english
\begin_inset CommandInset label
LatexCommand label
name "sub:Paragraph-Style-XHTML"

\end_inset

Paragraph styles
\end_layout

\begin_layout Standard

\lang english
The sort of XHTML LyX outputs for a paragraph depends upon whether we are
 dealing with a normal paragraph, a command, or an environment, where this
 is itself determined by the contents of the corresponding 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LaTeXType
\end_layout

\end_inset

 tag.
 
\end_layout

\begin_layout Standard

\lang english
For a command or normal paragraph, the output XHTML has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Label</labeltag>
\end_layout

\begin_layout LyX-Code

\lang english
Contents of the paragraph.
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
The label tags are of course omitted if the paragraph does not have a label.
\end_layout

\begin_layout Standard

\lang english
For an environment that is not some sort of list, the XHTML takes this form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Environment Label</labeltag>First paragraph.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag>Second paragraph.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
Note that the label is output only for the first paragraph, as it should
 be for a theorem, for example.
 
\end_layout

\begin_layout Standard

\lang english
For a list, we have one of these forms:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag>First item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag>Second item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag><itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>First item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag><itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Second item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
Note the different orders of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
labeltag
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
itemtag
\end_layout

\end_inset

.
 Which order we get depends upon the setting of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

: If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

 is false (the default), you get the first of these, with the label within
 the item; if true, you get the second, with the label outside the item.
\end_layout

\begin_layout Standard

\lang english
The specific tags and attributes output for each paragraph type can be controlle
d by means of the layout tags we are about to describe.
 As mentioned earlier, however, LyX uses sensible defaults for many of these,
 so you often may not need to do very much to get good XHTML output.
 Think of the available tags as there so you can tweak things to your liking.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`mydiv'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, LyX will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layoutname
\end_layout

\end_inset

 is the LyX name of the layout, made lowercase, for example: chapter.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Whether to output the default CSS information LyX generates for this layout,
 even if additional information is explicitly provided via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

.
 Setting this to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

 allows you to alter or augment the generated CSS, rather than to override
 it completely.
 Default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLItem
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for individual paragraphs of environments, replacing
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
itemtag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLItemAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the item tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname_item'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for paragraph and item labels, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
labeltag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

, unless 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LabelType
\end_layout

\end_inset

 is either 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Top_Environment
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Centered_Top_Environment
\end_layout

\end_inset

, in which case it defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the label tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname_label'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Meaningful only for list-like environments, this tag controls whether
 the label tag is output before or inside the item tag.
 This is used, for example, in the description environment, where we want
 `
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<dt>\SpecialChar \ldots{}
</dt><dd>\SpecialChar \ldots{}
</dd>
\end_layout

\end_inset

.
 Default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

: The label tag is output inside the item tag.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 Information to be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 section when this style is used.
 This might, for example, be used to include a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<script>
\end_layout

\end_inset

 block defining an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
onclick
\end_layout

\end_inset

 handler.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this style is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for the main label, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Marks this style as the one to be used to generate the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<title>
\end_layout

\end_inset

 tag for the XHTML file.
 By default, it is false.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdtitle.inc
\end_layout

\end_inset

 file sets it to true for the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
title
\end_layout

\end_inset

 environment.
 
\end_layout

\begin_layout Subsection

\lang english
InsetLayout XHTML
\end_layout

\begin_layout Standard

\lang english
The XHTML output of insets can also be controlled by information in layout
 files.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
At present, this is true only for 
\begin_inset Quotes eld
\end_inset

text
\begin_inset Quotes erd
\end_inset

 insets (insets you can type into) and is not true for 
\begin_inset Quotes eld
\end_inset

command
\begin_inset Quotes erd
\end_inset

 insets (insets that are associated with dialog boxes).
\end_layout

\end_inset

 Here, too, LyX tries to provide sensible defaults, and it constructs default
 CSS style rules.
 But everything can be customized.
\end_layout

\begin_layout Standard

\lang english
The XHTML LyX outputs for an inset has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag>Label</labeltag>
\end_layout

\begin_layout LyX-Code

\lang english
<innertag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Contents of the inset.</innertag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
If the inset permits multiple paragraphs---that is, if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

 is true---then the contents of the inset will itself be output as paragraphs
 formatted according to the styles used for those paragraphs (standard,
 quote, and the like).
 The label tag is of course omitted if the paragraph does not have a label
 and, at present, is always 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

.
 The inner tag is optional and, by default, does not appear.
\end_layout

\begin_layout Standard

\lang english
The specific tags and attributes output for each inset can be controlled
 by means of the following layout tags.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`myinset' onclick=`\SpecialChar \ldots{}
'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, LyX will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`insetname'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
insetname
\end_layout

\end_inset

 is the LyX name of the inset, made lowercase and with non-alphanumeric
 characters converted to underscores, for example: footnote.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Whether to output the default CSS information LyX generates for this layout,
 even if additional information is explicitly provided via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

.
 Setting this to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

 allows you to alter or augment the generated CSS, rather than to override
 it completely.
 Default is 0.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLInnerAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the inner tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`insetname_inner'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLInnerTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The inner tag, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
innertag
\end_layout

\end_inset

 in the examples above.
 By default, there is none.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLIsBlock
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
1
\end_layout

\end_inset

] Whether this inset represents a standalone block of text (such as a footnote)
 or instead represents material that is included in the surrounding text
 (such as a branch).
 Defaults to 1.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] A label for this inset, possibly including a reference to a counter.
 For example, for footnote, it might be: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
arabic{footnote}
\end_layout

\end_inset

.
 This is optional, and there is no default.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 Information to be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 section when this style is used.
 This might, for example, be used to include a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<script>
\end_layout

\end_inset

 block defining an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
onclick
\end_layout

\end_inset

 handler.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this style is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for the main label, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset

 in the examples above.
 The default depends upon the setting of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

: If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

 is true, the default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

; if it is false, the default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection

\lang english
Float XHTML
\end_layout

\begin_layout Standard

\lang english
The XHTML output for floats too can be controlled by layout information.
 The output has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
Contents of the float.
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
The caption, if there is one, is a separate inset and will be output as
 such.
 Its appearance can be controlled via the InsetLayout for caption insets.
 
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`myfloat' onclick=`\SpecialChar \ldots{}
'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, LyX will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`float float-floattype'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
floattype
\end_layout

\end_inset

 is LyX's name for this type of float, as determined by the float declaration
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Gleitobjekte"

\end_inset

), though made lowercase and with non-alphanumeric characters converted
 to underscores, for example: float-table.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this float is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for this float, replacing 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the example above.
 The default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

 and will rarely need changing.
\end_layout

\begin_layout Subsection

\lang english
Bibliography formatting
\end_layout

\begin_layout Standard

\lang english
The bibliography can be formatted using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 blocks.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Citation-format-description"

\end_inset

 for the details.
\end_layout

\begin_layout Subsection

\lang english
LyX-generated CSS
\end_layout

\begin_layout Standard

\lang english
We have several times mentioned that LyX will generate default CSS style
 rules for both insets and paragraph styles, based upon the other layout
 information that is provided.
 In this section, we shall say a word about which layout information LyX
 uses and how.
\end_layout

\begin_layout Standard

\lang english
At present, LyX auto-generates CSS only for font information, making use
 of the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Family
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Series
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Shape
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Size
\end_layout

\end_inset

 specified in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Font
\end_layout

\end_inset

 declaration.
 (See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Beschreibung-des-Zeichensatzes"

\end_inset

.) The translation is mostly straightforward and obvious.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Family Sans
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 becomes 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
font-family: sans-serif;
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 The correspondence of LyX sizes and CSS sizes is a little less obvious
 but nonetheless intuitive.
 See the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
getSizeCSS()
\end_layout

\end_inset

 function in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

src/FontInfo.cpp
\end_layout

\end_inset

 for the details.
\end_layout

\begin_layout Chapter
Externes Material einfügen
\begin_inset CommandInset label
LatexCommand label
name "cha:Externes-Material-einfügen"

\end_inset


\end_layout

\begin_layout Section
Hintergrund
\end_layout

\begin_layout Standard
Einer der am häufigsten geäußerten Wünsche der LyX-Benutzer ist die Möglichkeit
 einer Schnittstelle zwischen LyX und XFig, Dia oder ähnlichen Anwendungsprogram
men, die darauf spezialisiert sind, spezielle Diagramme, Abbildungen oder
 ähnliches zum Einbinden in Dokumente zu erstellen.
 Bislang war es lediglich möglich, statische, festgelegte Abbildungen über
 das normale Grafik-Inset einzubinden, jedoch hat dieser Ansatz einige Einschrän
kungen:
\end_layout

\begin_layout Itemize
Wenn Sie die Abbildung ändern wollen, müssen Sie extra von Hand das entsprechend
e Programm starten.
\end_layout

\begin_layout Itemize
LyX merkt nicht, dass Sie die Abbildung geändert haben, und die Darstellung
 am Bildschirm wird schnell veraltet; dies wird noch durch die fehlende
 Möglichkeit, die Anzeige zu aktualisieren, erschwert.
\end_layout

\begin_layout Itemize
Das Grafik-Inset kann nicht mit unterschiedlichen Export-Formaten wie DocBook,
 HTML oder ASCII umgehen.
\end_layout

\begin_layout Standard
Die Einfügung 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
 ist der Versuch, diese Probleme zu lösen.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Auch wenn das alte Grafik-Inset einige Mängel hat, so ist es dennoch sehr
 wertvoll, denn es bietet eine Anzeige der Grafik sowie die Möglichkeit
 zu geometrischen Transformationen über eine komfortable Benutzerschnittstelle.
 
\end_layout

\end_inset

 Dies wird erreicht, indem eine abstrahierte Methode der Interaktion zwischen
 LyX und einer externen Anwendung definiert wird.
 Anstatt also eine lange Liste von Einfügungen für alle möglichen Arten
 von Material anzubieten, haben wir auf die Darstellung in LyX verzichtet
 und dafür die Möglichkeit geschaffen, einen sehr weiten Bereich von Anwendungen
 abzudecken.
\end_layout

\begin_layout Standard
Das Ergebnis ist eben genau diese Einfügung 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
.
 Eine solche Einfügung erscheint im LyX-Dokument lediglich als einfache
 Schaltfläche, aber lassen Sie sich dadurch nicht täuschen.
 Wenn Sie darauf klicken, erscheint ein Dialog, in dem Sie genau festlegen
 können, welche Art von Material Sie einbinden wollen.
 Und in den folgenden Abschnitten werden Sie lernen, wie Sie damit all die
 oben aufgezeigten Probleme umgehen können und einiges mehr.
\end_layout

\begin_layout Section
Wie funktioniert das?
\end_layout

\begin_layout Standard
Die Einfügung 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
 basiert auf dem Konzept der Vorlage.
 Eine solche Vorlage ist eine Spezifikation, wie LyX mit einer bestimmten
 Sorte von Material umgehen soll.
 Derzeit gehören zu LyX derartige Vorlagen für XFig-Abbildungen, Dia-Diagramme,
 diverse Abbildungen im Rasterformat, Gnuplot und noch ein paar mehr.
 Die vollständige Liste sehen Sie in 
\family sans
Einfügen\SpecialChar \menuseparator
Datei\SpecialChar \menuseparator
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
.
\end_layout

\begin_layout Standard
Darüberhinaus ist es möglich, durch eigene Vorlagen beliebige andere Formate
 einzubinden.
 Wir werden weiter unten beschreiben, was genau Sie dazu machen müssen und
 hoffen, dass Sie derartig erstellte Vorlagen an das LyX-Team schicken,
 damit sie in kommenden LyX-Versionen integriert werden können.
\end_layout

\begin_layout Standard
Ein weiteres Merkmal der Idee der externen Einfügung ist die Unterscheidung
 zwischen der ursprünglichen Datei, die als Grundlage für das eingefügte
 Material dient, und der erzeugten Datei, die dann letztendlich in Ihr Dokument
 eingebunden wird.
 Wir wollen dies am Beispiel einer XFig-Abbildung erläutern.
\end_layout

\begin_layout Standard
Das Programm XFig bearbeitet eine speziell formatierte Datei mit der Endung
 
\family typewriter
.fig
\family default
.
 In XFig können Sie Ihre Abbildung editieren und ändern, und zum Schluss
 speichern Sie diese 
\family typewriter
.fig
\family default
-Datei.
 Wenn Sie nun eine derartige Abbildung in LyX einbinden wollen, müssen Sie
 zunächst 
\family typewriter
transfig
\family default
 starten, um eine PostScript-Datei zu erzeugen, die von LaTeX eingebunden
 werden kann.
 In diesem Fall ist also die 
\family typewriter
.fig
\family default
-Datei die oben erwähnte Originaldatei, und die 
\family typewriter
.ps-
\family default
Datei die tatsächlich eingebundene Datei.
\end_layout

\begin_layout Standard
Diese Unterscheidung ist wichtig, denn Sie erlaubt das einfache Ändern und
 Aktualisieren des Materials, während Sie an Ihrem Text schreiben.
 Außerdem ist erst so die Flexibilität gegeben, die benötigt wird, um unterschie
dliche Exportformate für die LyX-Datei zu ermöglichen.
\end_layout

\begin_layout Standard
So ist es im Falle einer Ausgabe als reiner (ASCII) Text sicher nicht sinnvoll,
 eine PostScript-Datei im Rohformat einzubinden.
 In diesem Fall wird dann entweder nur eine Referenz auf die Bilddatei angegeben
, oder aber es wird ein Konverter gestartet, der eine ASCII-Darstellung
 erzeugt, die in etwa so aussieht wie die ursprüngliche Grafik.
 Genau dies ist mit der Einfügung 
\family sans
Externes Material
\family default
 möglich, denn sie kennt all die notwendigen Befehle für derartige Konvertierung
en (sofern sie von LyX unterstützt werden).
\end_layout

\begin_layout Standard
Darüberhinaus erlaubt die Einfügung 
\family sans
Externes Material
\family default
 aber auch die einfache Integration mit externen Betrachtern und Editoren.
 So sind Sie bei einer XFig-Abbildung in der Lage, mit einem einigen Klick
 XFig zu starten, um die Abbildung zu bearbeiten oder die erstellte PostScript-D
atei mit 
\family typewriter
ghostview
\family default
 zu betrachten.
 Kein langes Herumsuchen mit Dateimanagern nach den Original- und Grafikdateien
 mehr, und Sie müssen sich nicht mehr an die unterschiedlichen Parameter
 erinnern, die vielleicht für diese Abbildung notwendig sind, um sie in
 der richtigen Größe zu erstellen.
 Sie haben ohne viel Aufwand Zugriff auf eine Vielzahl von Applikationen
 und können so Ihre Produktivität ungemein steigern.
\end_layout

\begin_layout Standard
LyX besitzt also die Information über eine Vielzahl von externen Programmen,
 um diese von Ihnen unbemerkt nutzen zu können und Ihnen so den größtmöglichen
 Komfort zu bieten.
 Und genau diese Information ist in den oben erwähnten Vorlagen gespeichert.
 Jede dieser Vorlagen enthält eine Liste von Befehlen und Optionen, um externe
 Programme zu starten, Formate zu konvertieren usw\SpecialChar \@.

\end_layout

\begin_layout Standard
Ein fortgeschrittener Anwender kann mit derartigen selbst erstellten Vorlagen
 die Möglichkeiten von LyX stark erweitern, ohne dazu den eigentlichen Quellcode
 verändern zu müssen.
 Zwar ist dazu einiges an Arbeit notwendig, um all diese Befehle festzulegen,
 aber zum Glück hat das LyX-Team das in einigen Fällen ja schon getan.
\end_layout

\begin_layout Standard
Eine kleine Einschränkung gibt es aber doch: Da es wie erwähnt eine Vielzahl
 möglicher Exportformate für das eingefügte Material gibt, wäre es zu vermuten,
 dass man von LyX aus auch alle diese Formate als Vorschau ansehen kann.
 Das LyX-Team hat sich entschlossen, das nicht zu tun, um die Benutzerschnittste
lle so einfach wie möglich zu halten.
 Anstatt im Dialog für jedes mögliche Exportformat einen eigenen Knopf für
 die Vorschau zu haben, wurde das Konzept des primären Formats eingeführt,
 und es gibt nur einen Schalter 
\family sans
in
\begin_inset space \space{}
\end_inset

Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X
\begin_inset space \space{}
\end_inset

anzeigen
\family default
, der die Datei in genau diesem primären Format anzeigt.
\end_layout

\begin_layout Standard
Dieses Format wird durch die verwendete Dokumentenklasse festgelegt.
 So ist es für die meisten Klassen LaTeX, für die DocBook-Klassen ist es
 aber DocBook.
 Denken Sie also daran, dass Ihnen die Vorschau lediglich das Aussehen in
 diesem Hauptformat anzeigt; wenn Sie sehen wollen, wie das Ergebnis in
 anderen Formaten aussieht, müssen Sie wie gewohnt die Konvertierung manuell
 durchführen.
\end_layout

\begin_layout Section
Der Dialog 
\family sans
Externes Material
\end_layout

\begin_layout Standard
Eine Externe Einfügung wird vom Menü 
\family sans
Einfügen
\family default
\SpecialChar \menuseparator

\family sans
Datei
\family default
\SpecialChar \menuseparator

\family sans
Externes
\family default

\begin_inset space \space{}
\end_inset


\family sans
Material
\family default
\SpecialChar \ldots{}
 aus aufgerufen.
 Es wird dann der Dialog 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
 geöffnet.
 In diesem Dialog können Sie genau festlegen, welche Art von Material Sie
 einbinden wollen, und auch wie das geschehen soll.
 Darüberhinaus können Sie über diesen Dialog die externen Bearbeitungsprogramme
 und Betrachter starten.
\end_layout

\begin_layout Standard
Auf der Karteikarte 
\family sans
Datei
\family default
 befindet sich zunächst ein Fenster 
\family sans
Datei:
\family default
, in das Sie einen Dateinamen direkt oder über 
\family sans
Durchsuchen
\family default
\SpecialChar \ldots{}
 eingeben können.
 Da die tatsächlich eingebundene Datei bei Bedarf automatisch erstellt wird,
 besteht kein Grund, hierfür auch ein Dialogfeld anzulegen.
 Darunter ist ein Schalter 
\family sans
Datei
\begin_inset space \space{}
\end_inset

bearbeiten\SpecialChar \ldots{}

\family default
, mit dem ein Bearbeitungsprogramm für die eingegebene Datei aufgerufen
 werden kann.
\end_layout

\begin_layout Standard
Dann kommt eine Liste mit Vorlagen.
 Im Textfenster darunter finden Sie einige hoffentlich hilfreiche Hinweise
 zur Verwendung der gewählten Vorlage: Meist eine kurze Beschreibung, was
 die Vorlage macht und welche Parameter möglich sind.
\end_layout

\begin_layout Standard
Unten links im Dialogfenster können Sie noch 
\family sans
Entwurf
\family default
 de/aktivieren.
\end_layout

\begin_layout Standard
Wenn Sie auf der Karteikarte 
\family sans
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X-Ansicht in
\begin_inset space \space{}
\end_inset

Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X
\begin_inset space \space{}
\end_inset

anzeigen
\family default
 aktiviert haben, wird die externe Datei angezeigt, wenn es möglich ist.
 Ist 
\family sans
in
\begin_inset space \space{}
\end_inset

Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

X
\begin_inset space \space{}
\end_inset

anzeigen
\family default
 deaktiviert, erscheint nur ein grau hinterlegtes Kästchen mit Vorlagentyp
 und Dateinamen.
\end_layout

\begin_layout Standard
Dann gibt es noch die Karteikarten 
\family sans
Drehen
\family default
, 
\family sans
Größe
\family default
, 
\family sans
Zuschneiden
\family default
 und 
\family sans
Optionen
\family default
, die Sie bereits aus 
\family sans
Einfügen\SpecialChar \menuseparator
Grafik\SpecialChar \ldots{}

\family default
 kennen.
 Die letzten beiden sind abhängig vom Vorlagentyp aktiviert.
\end_layout

\begin_layout Standard
Ganz unten befinden sich schließlich die gewohnten Knöpfe 
\family sans
OK,
\family default
 
\family sans
Übernehmen
\family default
 und 
\family sans
Abbrech
\family default
en
\family sans
/Schließen
\family default
.
\end_layout

\begin_layout Section
Beispiele
\end_layout

\begin_layout Standard
In Diesem Abschnitt sollten wir einige Beispiele zeigen, wie diese Einfügungen
 von externem Material verwendet werden können.
 Dies sollte etwa folgendes umfassen:
\end_layout

\begin_layout Itemize
Externe Rasterbilder
\end_layout

\begin_layout Itemize
Externe XFig-Abbildungen
\end_layout

\begin_layout Itemize
Schachdiagramme
\end_layout

\begin_layout Itemize
Datum
\end_layout

\begin_layout Section
Die Konfigurationsdatei
\end_layout

\begin_layout Standard
Es ist recht einfach, eigene neue Vorlagen für externe Einfügungen zu erstellen.
 Allerdings sollten Sie sich im klaren sein, dass Sie, wenn Sie dabei zu
 unbesorgt vorgehen, sehr schnell ein Sicherheitsloch erzeugen können.
 Wenn Sie also eigene Vorlagen erstellen wollen, lesen Sie bitte 
\emph on
unbedingt
\emph default
 den Abschnitt
\begin_inset space \space{}
\end_inset


\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Sicherheitshinweise"

\end_inset

.
\end_layout

\begin_layout Standard
Trotzdem sollten Sie unbedingt selbst erstellte Vorlagen an das LyX-Team
 senden.
\end_layout

\begin_layout Standard
Die Vorlagendefinitionen befinden sich in der Datei 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/external_tem\SpecialChar \-
plates
\family default
.
 Sie können sich eine Kopie davon in Ihr privates Benutzerverzeichnis 
\family typewriter
UserDir
\family default
 kopieren und editieren.
 Zu einem späteren Zeitpunkt werden Sie in diesem Abschnitt hier auch eine
 genaue Beschreibung der Syntax dieser Datei und der vorhandenen Einträge
 finden\SpecialChar \ldots{}

\end_layout

\begin_layout Section
Der Ersetzungsmechanismus
\end_layout

\begin_layout Standard
Wenn über die externe Einfügung ein externes Programm gestartet wird, geschieht
 dies anhand eines Befehls, der in der Vorlage festgelegt wurde.
 Ein solcher Befehl kann diverse Makros enthalten, die vor dem eigentlichen
 Aufruf ausgewertet werden.
 Die Ausführung erfolgt dabei immer in demjenigen Verzeichnis, das auch
 das LyX-Dokument enthält.
 Eine derartige Ersetzung findet ebenfalls statt, wenn die Vorschau aktiviert
 wird.
 Hier finden Sie eine Liste dieser Makros:
\end_layout

\begin_layout Description
$$FName Der Name der im Dialog angegeben Datei.
\end_layout

\begin_layout Description
$$Basename Der Dateiname ohne die Endung
\end_layout

\begin_layout Description
$$Tempname Ein Name (inklusive vollem Pfad) einer temporären Datei; diese
 wird automatisch gelöscht, wenn das Dokument geschlossen oder die Einfügung
 gelöscht wird.
\end_layout

\begin_layout Description
$$Contents(
\begin_inset Quotes gld
\end_inset

Datei.ext
\begin_inset Quotes grd
\end_inset

) Dieses Makro wird zum Inhalt der Datei mit dem Namen 
\family typewriter
Datei.ext
\family default
 expandiert.
\end_layout

\begin_layout Description
$$Sysdir Dies wird durch den Namen des Systemverzeichnisses ersetzt.
 Es wird normalerweise verwendet, um diverse Hilfsskripte anzusprechen,
 die Teil von LyX sind.
\end_layout

\begin_layout Standard
Darüberhinaus werden sämtliche Umgebungsvariablen der Form 
\family typewriter
${PATH}
\family default
 expandiert.
\end_layout

\begin_layout Section
Sicherheitshinweise
\begin_inset CommandInset label
LatexCommand label
name "sec:Sicherheitshinweise"

\end_inset


\end_layout

\begin_layout Standard
Der Mechanismus der Einfügung externen Materials bietet eine Schnittstelle
 zu einer Vielzahl von externen Programmen und startet diese automatisch.
 Darum ist es notwendig, auf die dadurch bedingten Sicherheitsprobleme einzugehe
n.
 Insbesondere besteht durch die Möglichkeit, eigene Dateinamen und/oder
 Parameter anzugeben, scheinbar Gefahr, dass jemand bösartige Dokumente
 erstellt, die willkürliche Befehle ausführen, sobald ein Benutzer sie betrachte
t oder ausdruckt.
 Dies ist etwas, das wir unter allen Umständen vermeiden wollen.
\end_layout

\begin_layout Standard
Da jedoch die nutzbaren Programme ausschließlich in der Vorlagenkonfigurationsda
tei festgelegt werden können, bestehen keine Sicherheitsbedenken, solange
 LyX selbst korrekt und nur mit sicheren Vorlagen konfiguriert ist.
 Der Grund dafür ist, dass die externen Programme nicht mit dem Systembefehl
 
\family typewriter
system()
\family default
 aufgerufen werden, sondern mit 
\family typewriter
execvp()
\family default
.
 Dadurch ist es nicht möglich, über Dateinamen oder zusätzliche Parameter
 willkürliche Befehle durch die Shell ausführen zu lassen.
\end_layout

\begin_layout Standard
Bedingt durch diese Sicherheit, sind Sie allerdings etwas in der Auswahl
 der Befehlszeichenketten eingeschränkt, die Sie in der Vorlagedatei verwenden
 können.
 Insbesondere sind Ausgabeumleitungen und Pipes nicht möglich, und das muss
 auch so bleiben, wenn LyX weiterhin sicher bleiben soll.
 Wenn Sie derartige Fähigkeiten der Shell nutzen wollen, müssen Sie ein
 Skript schreiben und dieses dann aufrufen.
\end_layout

\begin_layout Standard
Im Verzeichnis 
\family typewriter
Ly
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

XDir/scripts
\family default
 finden Sie das Skript 
\family typewriter
general_command_wrap\SpecialChar \-
per.py
\family default
, das auf sicherem Weg die Verwendung der Ein/Ausgabeumleitung erlaubt.
 Es ist auch ein gutes Beispiel, wenn Sie selbst eigene, sichere Skripte
 erstellen wollen.
 Ein sehr viel komplexeres Beispiel, das auch 
\family typewriter
fork
\family default
 und Konsorten verwendet, finden Sie mit 
\family typewriter
pic2ascii.py
\family default
 im selben Verzeichnis.
\end_layout

\begin_layout Standard
Es ist zwar durchaus möglich, eine Vorlage zu erstellen, die eine direkte
 Interaktion mit der Shell erlaubt.
 Dies würde jedoch einem böswilligen Benutzer erlauben, durch die clevere
 Wahl von Dateinamen und/oder Parametern willkürliche Befehle auszuführen.
 Deswegen raten wir generell dazu, ausschließlich sichere Skripte zu verwenden,
 die mit dem 
\family typewriter
execvp()
\family default
-Mechanismus arbeiten.
\end_layout

\begin_layout Standard
Selbstverständlich mag es verlockend sein, in einer sicheren Umgebung zu
 den einfacheren Shellscripts zurückzukehren.
 Aber seien Sie sich bewusst, dass Sie dadurch ein potentielles Sicherheitsloch
 schaffen.
 Und obwohl wir jeden ermuntern, selbst erstellte Vorlagen im Sinne der
 Open Source an uns zu schicke,n sollte klar sein, dass ein derartiges,
 unsicheres Skript niemals fester Bestandteil der LyX-Distribution werden
 kann.
\end_layout

\begin_layout Standard
Die Einfügung externes Material gibt eine große Macht, und man muss sicherheitsb
ewusst damit umgehen.
 Ein einziger kleiner Fehler in einem vermeintlich harmlosen Skript kann
 die Türe zu gewaltigen Sicherheitsproblemen öffnen.
 Im Zweifelsfall wenden Sie sich an einen angesehenen Sicherheitsexperten
 oder fragen Sie das LyX-Team, wenn Sie sich nicht sicher sind, ob eine
 von Ihnen erstellte Vorlage als sicher angesehen werden kann oder nicht.
 Und tun Sie das auf jeden Fall, bevor Sie die Vorlage in einem nicht genau
 kontrollierten Umfeld verwenden.
\end_layout

\begin_layout Section
Die Zukunft der externen Einfügung
\end_layout

\begin_layout Standard
Die gegenwärtige Implementation der Einfügung ist ein stabiler und mächtiger
 Mechanismus, der einen Zugang zu den Interna von LyX bietet.
 Doch wie bei fast allem in LyX gilt: Es befindet sich stetiger Entwicklung.
 Falls sich jemand an die Weiterentwicklung macht, sind hier ein paar Hinweise,
 welche Wege dabei gegangen werden sollten:
\end_layout

\begin_layout Itemize
Ermöglichen der eingebetteten Vorschau anstelle des einfachen Knopfes.
\end_layout

\begin_layout Itemize
Eingebettete Bearbeitung, zum Beispiel über OpenParts oder ein ähnliches
 Protokoll.
\end_layout

\begin_layout Itemize
Erweiterung der dynamischen Information und dadurch die Möglichkeit, optionale
 Eingabefelder für die Umwandlungsprogramme in allen Exportformaten zu haben,
 ebenso für die Parameter für jedes dieser Formate.
 Derzeit kann nur eine einziger Parameterkombination angegeben werden, die
 global für diese eine Vorlage gilt.
 Dies würde es ermöglichen, auf die etwas willkürliche Festlegung eines
 primären Formates für das einzubindende Material zu verzichten.
\end_layout

\begin_layout Itemize
Erweiterung der Definitionsbasis um intelligentere Konfigurationsoptionen
 als die einfache Parameterzeile zu ermöglichen.
 Mit einer passenden Skriptsprache wäre es möglich, eine sehr benutzerfreundlich
e Version der Einfügungsdialoge zu erstellen.
\end_layout

\end_body
\end_document
